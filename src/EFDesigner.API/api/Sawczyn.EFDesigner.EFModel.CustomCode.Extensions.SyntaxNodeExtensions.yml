### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions
  id: SyntaxNodeExtensions
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  children:
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  langs:
  - csharp
  - vb
  name: SyntaxNodeExtensions
  nameWithType: SyntaxNodeExtensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions
  type: Class
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SyntaxNodeExtensions
    path: ../Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
    startLine: 10
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static class SyntaxNodeExtensions
    content.vb: Public Module SyntaxNodeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  id: HasAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions
  langs:
  - csharp
  - vb
  name: HasAttribute(SyntaxNode, String)
  nameWithType: SyntaxNodeExtensions.HasAttribute(SyntaxNode, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute(Microsoft.CodeAnalysis.SyntaxNode, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: HasAttribute
    path: ../Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
    startLine: 13
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static bool HasAttribute(this SyntaxNode node, string attributeName)
    parameters:
    - id: node
      type: Microsoft.CodeAnalysis.SyntaxNode
    - id: attributeName
      type: System.String
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasAttribute(node As SyntaxNode, attributeName As String) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  id: GetAttribute(Microsoft.CodeAnalysis.SyntaxNode,System.String)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions
  langs:
  - csharp
  - vb
  name: GetAttribute(SyntaxNode, String)
  nameWithType: SyntaxNodeExtensions.GetAttribute(SyntaxNode, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute(Microsoft.CodeAnalysis.SyntaxNode, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetAttribute
    path: ../Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
    startLine: 27
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static AttributeSyntax GetAttribute(this SyntaxNode node, string attributeName)
    parameters:
    - id: node
      type: Microsoft.CodeAnalysis.SyntaxNode
    - id: attributeName
      type: System.String
    return:
      type: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttribute(node As SyntaxNode, attributeName As String) As AttributeSyntax
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  id: GetAttributeArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions
  langs:
  - csharp
  - vb
  name: GetAttributeArguments(AttributeSyntax)
  nameWithType: SyntaxNodeExtensions.GetAttributeArguments(AttributeSyntax)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetAttributeArguments
    path: ../Dsl/CustomCode/Extensions/SyntaxNodeExtensions.cs
    startLine: 42
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static IEnumerable<AttributeArgumentSyntax> GetAttributeArguments(this AttributeSyntax node)
    parameters:
    - id: node
      type: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttributeArguments(node As AttributeSyntax) As IEnumerable(Of AttributeArgumentSyntax)
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  commentId: N:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  nameWithType: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute
  name: HasAttribute
  nameWithType: SyntaxNodeExtensions.HasAttribute
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.HasAttribute
- uid: Microsoft.CodeAnalysis.SyntaxNode
  commentId: T:Microsoft.CodeAnalysis.SyntaxNode
  parent: Microsoft.CodeAnalysis
  isExternal: true
  name: SyntaxNode
  nameWithType: SyntaxNode
  fullName: Microsoft.CodeAnalysis.SyntaxNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.CodeAnalysis
  commentId: N:Microsoft.CodeAnalysis
  isExternal: true
  name: Microsoft.CodeAnalysis
  nameWithType: Microsoft.CodeAnalysis
  fullName: Microsoft.CodeAnalysis
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute
  name: GetAttribute
  nameWithType: SyntaxNodeExtensions.GetAttribute
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttribute
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax
  commentId: T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax
  parent: Microsoft.CodeAnalysis.CSharp.Syntax
  isExternal: true
  name: AttributeSyntax
  nameWithType: AttributeSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax
- uid: Microsoft.CodeAnalysis.CSharp.Syntax
  commentId: N:Microsoft.CodeAnalysis.CSharp.Syntax
  isExternal: true
  name: Microsoft.CodeAnalysis.CSharp.Syntax
  nameWithType: Microsoft.CodeAnalysis.CSharp.Syntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments
  name: GetAttributeArguments
  nameWithType: SyntaxNodeExtensions.GetAttributeArguments
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.SyntaxNodeExtensions.GetAttributeArguments
- uid: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AttributeArgumentSyntax>
  nameWithType: IEnumerable<AttributeArgumentSyntax>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax>
  nameWithType.vb: IEnumerable(Of AttributeArgumentSyntax)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)
  name.vb: IEnumerable(Of AttributeArgumentSyntax)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax
    name: AttributeArgumentSyntax
    nameWithType: AttributeArgumentSyntax
    fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax
    name: AttributeArgumentSyntax
    nameWithType: AttributeArgumentSyntax
    fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
