### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  commentId: T:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  id: EFModelSerializationBehaviorBase
  parent: Sawczyn.EFDesigner.EFModel
  children:
  - Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.#ctor
  - Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces
  - Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers
  - Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes
  - Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.DomainModelXmlNamespace
  langs:
  - csharp
  - vb
  name: EFModelSerializationBehaviorBase
  nameWithType: EFModelSerializationBehaviorBase
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  type: Class
  source:
    remote:
      path: src/Dsl/GeneratedCode/Serializer.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EFModelSerializationBehaviorBase
    path: ../Dsl/GeneratedCode/Serializer.cs
    startLine: 23308
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nA DomainXmlSerializationBehavior implementation for defined behavior EFModelSerializationBehavior.\nThis is the abstract base of the double-derived implementation.\n"
  example: []
  syntax:
    content: 'public abstract class EFModelSerializationBehaviorBase : DomainXmlSerializationBehavior'
    content.vb: >-
      Public MustInherit Class EFModelSerializationBehaviorBase
          Inherits DomainXmlSerializationBehavior
  inheritance:
  - System.Object
  - Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
  derivedClasses:
  - Sawczyn.EFDesigner.EFModel.EFModelSerializationBehavior
  inheritedMembers:
  - Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllPropertySerializers
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.DomainModelXmlNamespace
  commentId: F:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.DomainModelXmlNamespace
  id: DomainModelXmlNamespace
  parent: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  langs:
  - csharp
  - vb
  name: DomainModelXmlNamespace
  nameWithType: EFModelSerializationBehaviorBase.DomainModelXmlNamespace
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.DomainModelXmlNamespace
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/Serializer.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DomainModelXmlNamespace
    path: ../Dsl/GeneratedCode/Serializer.cs
    startLine: 23314
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nThe xml namespace used by this domain model when serializing\n"
  example: []
  syntax:
    content: public const string DomainModelXmlNamespace = "http://schemas.microsoft.com/dsltools/EFModel"
    return:
      type: System.String
    content.vb: Public Const DomainModelXmlNamespace As String = "http://schemas.microsoft.com/dsltools/EFModel"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.#ctor
  commentId: M:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.#ctor
  id: '#ctor'
  parent: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  langs:
  - csharp
  - vb
  name: EFModelSerializationBehaviorBase()
  nameWithType: EFModelSerializationBehaviorBase.EFModelSerializationBehaviorBase()
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.EFModelSerializationBehaviorBase()
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/Serializer.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/Serializer.cs
    startLine: 23333
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nProtected constructor to prevent public instantiation.\n"
  example: []
  syntax:
    content: protected EFModelSerializationBehaviorBase()
    content.vb: Protected Sub New
  overload: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes
  commentId: P:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes
  id: CustomSerializerTypes
  parent: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  langs:
  - csharp
  - vb
  name: CustomSerializerTypes
  nameWithType: EFModelSerializationBehaviorBase.CustomSerializerTypes
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/Serializer.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomSerializerTypes
    path: ../Dsl/GeneratedCode/Serializer.cs
    startLine: 23342
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nAllows custom serializers to be added.\nBase implementation doesn&apos;t do anything.\n"
  example: []
  syntax:
    content: protected virtual ReadOnlyCollection<DomainXmlSerializerDirectoryEntry> CustomSerializerTypes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry}
      description: Custom serializer types, null or empty list if there&apos;s no custom serializer types.
    content.vb: Protected Overridable ReadOnly Property CustomSerializerTypes As ReadOnlyCollection(Of DomainXmlSerializerDirectoryEntry)
  overload: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers
  commentId: P:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers
  id: AllSerializers
  parent: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  langs:
  - csharp
  - vb
  name: AllSerializers
  nameWithType: EFModelSerializationBehaviorBase.AllSerializers
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/Serializer.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllSerializers
    path: ../Dsl/GeneratedCode/Serializer.cs
    startLine: 23354
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nThis provides a mapping from DomainClass Id to DomainXmlSerializer implementation types.\n"
  example: []
  syntax:
    content: public override ReadOnlyCollection<DomainXmlSerializerDirectoryEntry> AllSerializers { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry}
    content.vb: Public Overrides ReadOnly Property AllSerializers As ReadOnlyCollection(Of DomainXmlSerializerDirectoryEntry)
  overridden: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllSerializers
  overload: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces
  commentId: P:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces
  id: AllNamespaces
  parent: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase
  langs:
  - csharp
  - vb
  name: AllNamespaces
  nameWithType: EFModelSerializationBehaviorBase.AllNamespaces
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/Serializer.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllNamespaces
    path: ../Dsl/GeneratedCode/Serializer.cs
    startLine: 23410
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nThis provides a mapping from xml namespaces to domain model implementation types.\n"
  example: []
  syntax:
    content: public override ReadOnlyCollection<DomainXmlSerializerNamespaceEntry> AllNamespaces { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry}
    content.vb: Public Overrides ReadOnly Property AllNamespaces As ReadOnlyCollection(Of DomainXmlSerializerNamespaceEntry)
  overridden: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllNamespaces
  overload: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Sawczyn.EFDesigner.EFModel
  commentId: N:Sawczyn.EFDesigner.EFModel
  name: Sawczyn.EFDesigner.EFModel
  nameWithType: Sawczyn.EFDesigner.EFModel
  fullName: Sawczyn.EFDesigner.EFModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
  commentId: T:Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: DomainXmlSerializationBehavior
  nameWithType: DomainXmlSerializationBehavior
  fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
- uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllPropertySerializers
  commentId: P:Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllPropertySerializers
  parent: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
  isExternal: true
  name: AllPropertySerializers
  nameWithType: DomainXmlSerializationBehavior.AllPropertySerializers
  fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllPropertySerializers
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.#ctor*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.#ctor
  name: EFModelSerializationBehaviorBase
  nameWithType: EFModelSerializationBehaviorBase.EFModelSerializationBehaviorBase
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.EFModelSerializationBehaviorBase
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes
  name: CustomSerializerTypes
  nameWithType: EFModelSerializationBehaviorBase.CustomSerializerTypes
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.CustomSerializerTypes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<DomainXmlSerializerDirectoryEntry>
  nameWithType: ReadOnlyCollection<DomainXmlSerializerDirectoryEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry>
  nameWithType.vb: ReadOnlyCollection(Of DomainXmlSerializerDirectoryEntry)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry)
  name.vb: ReadOnlyCollection(Of DomainXmlSerializerDirectoryEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry
    name: DomainXmlSerializerDirectoryEntry
    nameWithType: DomainXmlSerializerDirectoryEntry
    fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry
    name: DomainXmlSerializerDirectoryEntry
    nameWithType: DomainXmlSerializerDirectoryEntry
    fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectoryEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllSerializers
  commentId: P:Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllSerializers
  parent: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
  isExternal: true
  name: AllSerializers
  nameWithType: DomainXmlSerializationBehavior.AllSerializers
  fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllSerializers
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers
  name: AllSerializers
  nameWithType: EFModelSerializationBehaviorBase.AllSerializers
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllSerializers
- uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllNamespaces
  commentId: P:Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllNamespaces
  parent: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior
  isExternal: true
  name: AllNamespaces
  nameWithType: DomainXmlSerializationBehavior.AllNamespaces
  fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializationBehavior.AllNamespaces
- uid: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces
  name: AllNamespaces
  nameWithType: EFModelSerializationBehaviorBase.AllNamespaces
  fullName: Sawczyn.EFDesigner.EFModel.EFModelSerializationBehaviorBase.AllNamespaces
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<DomainXmlSerializerNamespaceEntry>
  nameWithType: ReadOnlyCollection<DomainXmlSerializerNamespaceEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry>
  nameWithType.vb: ReadOnlyCollection(Of DomainXmlSerializerNamespaceEntry)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry)
  name.vb: ReadOnlyCollection(Of DomainXmlSerializerNamespaceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry
    name: DomainXmlSerializerNamespaceEntry
    nameWithType: DomainXmlSerializerNamespaceEntry
    fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry
    name: DomainXmlSerializerNamespaceEntry
    nameWithType: DomainXmlSerializerNamespaceEntry
    fullName: Microsoft.VisualStudio.Modeling.DomainXmlSerializerNamespaceEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
