### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  id: ModelElementExtensions
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  children:
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  - Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  langs:
  - csharp
  - vb
  name: ModelElementExtensions
  nameWithType: ModelElementExtensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  type: Class
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/ModelElementExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ModelElementExtensions
    path: ../Dsl/CustomCode/Extensions/ModelElementExtensions.cs
    startLine: 7
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static class ModelElementExtensions
    content.vb: Public Module ModelElementExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  id: LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  langs:
  - csharp
  - vb
  name: LocateInDiagram(ModelElement)
  nameWithType: ModelElementExtensions.LocateInDiagram(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/ModelElementExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: LocateInDiagram
    path: ../Dsl/CustomCode/Extensions/ModelElementExtensions.cs
    startLine: 9
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static bool LocateInDiagram(this ModelElement element)
    parameters:
    - id: element
      type: Microsoft.VisualStudio.Modeling.ModelElement
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LocateInDiagram(element As ModelElement) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  id: GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  langs:
  - csharp
  - vb
  name: GetFirstShapeElement(ModelElement)
  nameWithType: ModelElementExtensions.GetFirstShapeElement(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/ModelElementExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetFirstShapeElement
    path: ../Dsl/CustomCode/Extensions/ModelElementExtensions.cs
    startLine: 23
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  syntax:
    content: public static ShapeElement GetFirstShapeElement(this ModelElement element)
    parameters:
    - id: element
      type: Microsoft.VisualStudio.Modeling.ModelElement
    return:
      type: Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFirstShapeElement(element As ModelElement) As ShapeElement
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  id: GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  langs:
  - csharp
  - vb
  name: GetCompartment(ModelElement, String)
  nameWithType: ModelElementExtensions.GetCompartment(ModelElement, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/ModelElementExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetCompartment
    path: ../Dsl/CustomCode/Extensions/ModelElementExtensions.cs
    startLine: 34
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  summary: "\nGets the named compartment in this element\n"
  example: []
  syntax:
    content: public static ElementListCompartment GetCompartment(this ModelElement element, string compartmentName)
    parameters:
    - id: element
      type: Microsoft.VisualStudio.Modeling.ModelElement
      description: ''
    - id: compartmentName
      type: System.String
      description: ''
    return:
      type: Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCompartment(element As ModelElement, compartmentName As String) As ElementListCompartment
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  id: InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  isExtensionMethod: true
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  langs:
  - csharp
  - vb
  name: InvalidateDiagrams(ModelElement)
  nameWithType: ModelElementExtensions.InvalidateDiagrams(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Extensions/ModelElementExtensions.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InvalidateDiagrams
    path: ../Dsl/CustomCode/Extensions/ModelElementExtensions.cs
    startLine: 46
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  summary: "\nCauses all diagrams to redraw\n"
  example: []
  syntax:
    content: public static void InvalidateDiagrams(this ModelElement element)
    parameters:
    - id: element
      type: Microsoft.VisualStudio.Modeling.ModelElement
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub InvalidateDiagrams(element As ModelElement)
  overload: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  commentId: N:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  nameWithType: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  name: LocateInDiagram
  nameWithType: ModelElementExtensions.LocateInDiagram
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
- uid: Microsoft.VisualStudio.Modeling.ModelElement
  commentId: T:Microsoft.VisualStudio.Modeling.ModelElement
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: Microsoft.VisualStudio.Modeling.ModelElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  name: GetFirstShapeElement
  nameWithType: ModelElementExtensions.GetFirstShapeElement
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
- uid: Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement
  commentId: T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement
  parent: Microsoft.VisualStudio.Modeling.Diagrams
  isExternal: true
  name: ShapeElement
  nameWithType: ShapeElement
  fullName: Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement
- uid: Microsoft.VisualStudio.Modeling.Diagrams
  commentId: N:Microsoft.VisualStudio.Modeling.Diagrams
  isExternal: true
  name: Microsoft.VisualStudio.Modeling.Diagrams
  nameWithType: Microsoft.VisualStudio.Modeling.Diagrams
  fullName: Microsoft.VisualStudio.Modeling.Diagrams
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  name: GetCompartment
  nameWithType: ModelElementExtensions.GetCompartment
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment
  commentId: T:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment
  parent: Microsoft.VisualStudio.Modeling.Diagrams
  isExternal: true
  name: ElementListCompartment
  nameWithType: ElementListCompartment
  fullName: Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  name: InvalidateDiagrams
  nameWithType: ModelElementExtensions.InvalidateDiagrams
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
