### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelAttribute
  id: ModelAttribute
  parent: Sawczyn.EFDesigner.EFModel
  children:
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoPropertyDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnNameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributesDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.DescriptionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayTextDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.DomainClassId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUniqueDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValueDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTrackingDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTrackingDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyTokenDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentityDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue(System.String,System.String)
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLengthDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLengthDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Name
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.NameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse(Sawczyn.EFDesigner.EFModel.ModelRoot,System.String)
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.PersistentDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnlyDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Required
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.RequiredDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibilityDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.StringTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.SummaryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverrideDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Type
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.TypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual
  - Sawczyn.EFDesigner.EFModel.ModelAttribute.VirtualDomainPropertyId
  langs:
  - csharp
  - vb
  name: ModelAttribute
  nameWithType: ModelAttribute
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute
  type: Class
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ModelAttribute
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5029
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDomainClass ModelAttribute\nAn attribute of a class.\n"
  example: []
  syntax:
    content: >-
      [ValidationState(ValidationState.Enabled)]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainModelOwner(typeof(EFModelDomainModel))]

      [CLSCompliant(true)]

      [DomainObjectId("8be1f7ab-85c8-4f57-8621-38e1207d8f8d")]

      public class ModelAttribute : ModelElement, IMergeElements, IModelElementInCompartment, IDisplaysWarning
    content.vb: >-
      <ValidationState(ValidationState.Enabled)>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainModelOwner(GetType(EFModelDomainModel))>

      <CLSCompliant(True)>

      <DomainObjectId("8be1f7ab-85c8-4f57-8621-38e1207d8f8d")>

      Public Class ModelAttribute
          Inherits ModelElement
          Implements IMergeElements, IModelElementInCompartment, IDisplaysWarning
  inheritance:
  - System.Object
  - Microsoft.VisualStudio.Modeling.ModelElement
  implements:
  - Microsoft.VisualStudio.Modeling.IMergeElements
  - Sawczyn.EFDesigner.EFModel.IModelElementInCompartment
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  inheritedMembers:
  - Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  - Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.Id
  - Microsoft.VisualStudio.Modeling.ModelElement.Partition
  - Microsoft.VisualStudio.Modeling.ModelElement.Store
  - Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute
    ctor: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute.#ctor(Microsoft.VisualStudio.Modeling.Validation.ValidationState)
    arguments:
    - type: Microsoft.VisualStudio.Modeling.Validation.ValidationState
      value: 1
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 8be1f7ab-85c8-4f57-8621-38e1207d8f8d
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement
  id: ParentModelElement
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ParentModelElement
  nameWithType: ModelAttribute.ParentModelElement
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ParentModelElement
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 18
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Gets the parent model element (ModelClass).
  example: []
  syntax:
    content: public IModelElementWithCompartments ParentModelElement { get; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
      description: The parent model element.
    content.vb: Public ReadOnly Property ParentModelElement As IModelElementWithCompartments
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement*
  implements:
  - Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.ParentModelElement
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName
  id: CompartmentName
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: CompartmentName
  nameWithType: ModelAttribute.CompartmentName
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CompartmentName
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 29
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Gets the name of the compartment holding this model element
  example: []
  syntax:
    content: public string CompartmentName { get; }
    parameters: []
    return:
      type: System.String
      description: The name of the compartment holding this model element.
    content.vb: Public ReadOnly Property CompartmentName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName*
  implements:
  - Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.CompartmentName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue
  id: GetHasWarningValue
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: GetHasWarningValue()
  nameWithType: ModelAttribute.GetHasWarningValue()
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetHasWarningValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 46
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Indicates if there are any model warnings in this element.
  example: []
  syntax:
    content: public bool GetHasWarningValue()
    return:
      type: System.Boolean
      description: True if model warnings exist, false otherwise.
    content.vb: Public Function GetHasWarningValue As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue*
  implements:
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning
  id: ResetWarning
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ResetWarning()
  nameWithType: ModelAttribute.ResetWarning()
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ResetWarning
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 50
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Resets the warning indicator
  example: []
  syntax:
    content: public void ResetWarning()
    content.vb: Public Sub ResetWarning
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning*
  implements:
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem
  id: RedrawItem
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: RedrawItem()
  nameWithType: ModelAttribute.RedrawItem()
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: RedrawItem
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 54
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Redraws the presentation element on any diagram rendering this model element
  example: []
  syntax:
    content: public void RedrawItem()
    content.vb: Public Sub RedrawItem
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem*
  implements:
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue
  id: SupportsInitialValue
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: SupportsInitialValue
  nameWithType: ModelAttribute.SupportsInitialValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SupportsInitialValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 66
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Gets a value indicating whether this attribute supports initial values.
  example: []
  syntax:
    content: public bool SupportsInitialValue { get; }
    parameters: []
    return:
      type: System.Boolean
      description: True if supports initial values, false if not.
    content.vb: Public ReadOnly Property SupportsInitialValue As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue(System.String,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue(System.String,System.String)
  id: IsValidInitialValue(System.String,System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsValidInitialValue(String, String)
  nameWithType: ModelAttribute.IsValidInitialValue(String, String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsValidInitialValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 102
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nTests if the InitialValue property is valid for the type indicated\n"
  example: []
  syntax:
    content: public bool IsValidInitialValue(string typeName = null, string initialValue = null)
    parameters:
    - id: typeName
      type: System.String
      description: Name of type to test. If typeName is null, Type property will be used. If initialValue is null, InitialValue property will be used
    - id: initialValue
      type: System.String
      description: Initial value to test
    return:
      type: System.Boolean
      description: true if InitialValue is a valid value for the type, or if initialValue is null or empty
    content.vb: Public Function IsValidInitialValue(typeName As String = Nothing, initialValue As String = Nothing) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType
  id: PrimitiveType
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: PrimitiveType
  nameWithType: ModelAttribute.PrimitiveType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: PrimitiveType
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 190
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nFrom internal class System.Data.Metadata.Edm.PrimitiveType in System.Data.Entity. Converts the attribute&apos;s CLR type to a C# primitive type.\n"
  example: []
  syntax:
    content: public string PrimitiveType { get; }
    parameters: []
    return:
      type: System.String
      description: Name of primitive type
    content.vb: Public ReadOnly Property PrimitiveType As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType
  id: FQPrimitiveType
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: FQPrimitiveType
  nameWithType: ModelAttribute.FQPrimitiveType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FQPrimitiveType
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 203
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Converts the attribute&apos;s CLR type to a C# primitive type.
  example: []
  syntax:
    content: public string FQPrimitiveType { get; }
    parameters: []
    return:
      type: System.String
      description: Name of primitive type, or the fully qualified name if the attribute is an enumeration
    content.vb: Public ReadOnly Property FQPrimitiveType As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType
  id: CLRType
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: CLRType
  nameWithType: ModelAttribute.CLRType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CLRType
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 221
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Converts a C# primitive type to a CLR type.
  example: []
  syntax:
    content: public string CLRType { get; }
    parameters: []
    return:
      type: System.String
      description: The type of the colour.
    content.vb: Public ReadOnly Property CLRType As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType(System.String)
  id: ToPrimitiveType(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ToPrimitiveType(String)
  nameWithType: ModelAttribute.ToPrimitiveType(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ToPrimitiveType
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 235
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nFrom internal class System.Data.Metadata.Edm.PrimitiveType in System.Data.Entity. Converts a CLR type to a C# primitive type.\n"
  example: []
  syntax:
    content: public static string ToPrimitiveType(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: CLR type
    return:
      type: System.String
      description: 'Name of primitive type given '
    content.vb: Public Shared Function ToPrimitiveType(typeName As String) As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType(System.String)
  id: ToCLRType(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ToCLRType(String)
  nameWithType: ModelAttribute.ToCLRType(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ToCLRType
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 286
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Converts a C# primitive type to a CLR type.
  example: []
  syntax:
    content: public static string ToCLRType(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: C# type
    return:
      type: System.String
      description: Matching CLR type.
    content.vb: Public Shared Function ToCLRType(typeName As String) As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue
  id: GetColumnNameValue
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: GetColumnNameValue()
  nameWithType: ModelAttribute.GetColumnNameValue()
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetColumnNameValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 325
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Gets the storage for the ColumnName property.
  example: []
  syntax:
    content: public string GetColumnNameValue()
    return:
      type: System.String
      description: The ColumnName value.
    content.vb: Public Function GetColumnNameValue As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue(System.String)
  id: SetColumnNameValue(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: SetColumnNameValue(String)
  nameWithType: ModelAttribute.SetColumnNameValue(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SetColumnNameValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 335
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Sets the storage for the ColumnName property.
  example: []
  syntax:
    content: public void SetColumnNameValue(string value)
    parameters:
    - id: value
      type: System.String
      description: The ColumnName value.
    content.vb: Public Sub SetColumnNameValue(value As String)
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue
  id: GetColumnTypeValue
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: GetColumnTypeValue()
  nameWithType: ModelAttribute.GetColumnTypeValue()
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetColumnTypeValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 351
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Gets the storage for the ColumnType property.
  example: []
  syntax:
    content: public string GetColumnTypeValue()
    return:
      type: System.String
      description: The ColumnType value.
    content.vb: Public Function GetColumnTypeValue As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue(System.String)
  id: SetColumnTypeValue(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: SetColumnTypeValue(String)
  nameWithType: ModelAttribute.SetColumnTypeValue(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SetColumnTypeValue
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 361
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Sets the storage for the ColumnType property.
  example: []
  syntax:
    content: public void SetColumnTypeValue(string value)
    parameters:
    - id: value
      type: System.String
      description: The ColumnType value.
    content.vb: Public Sub SetColumnTypeValue(value As String)
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString
  id: ToString
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModelAttribute.ToString()
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ToString
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 535
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: Returns a string that represents the current object.
  remarks: >
    Output is, in order:

    <ul>

    <li>Visibility</li>

    <li>Type (with optional &apos;?&apos; if not a required field</li>

    <li>Max length in brackets, if a string field and length is specified</li>

    <li>Name (with optional &apos;!&apos; if an identity field</li>

    <li>an equal sign (=) followed by an initializer, if an initializer is specified</li>

    </ul>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse(Sawczyn.EFDesigner.EFModel.ModelRoot,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse(Sawczyn.EFDesigner.EFModel.ModelRoot,System.String)
  id: Parse(Sawczyn.EFDesigner.EFModel.ModelRoot,System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Parse(ModelRoot, String)
  nameWithType: ModelAttribute.Parse(ModelRoot, String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse(Sawczyn.EFDesigner.EFModel.ModelRoot, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelAttribute.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Parse
    path: ../Dsl/CustomCode/Partials/ModelAttribute.cs
    startLine: 577
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nParses the input string to check for type validity.\n"
  example: []
  syntax:
    content: public static ParseResult Parse(ModelRoot modelRoot, string input)
    parameters:
    - id: modelRoot
      type: Sawczyn.EFDesigner.EFModel.ModelRoot
      description: Context in which to parse the input
    - id: input
      type: System.String
      description: String to parse
    return:
      type: Sawczyn.EFDesigner.EFModel.ParseResult
      description: ParseResult object if successful
    content.vb: Public Shared Function Parse(modelRoot As ModelRoot, input As String) As ParseResult
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if unable to parse inut string to a valid type for the model
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.DomainClassId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.DomainClassId
  id: DomainClassId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: DomainClassId
  nameWithType: ModelAttribute.DomainClassId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.DomainClassId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DomainClassId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5043
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nModelAttribute domain class Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DomainClassId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DomainClassId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ModelAttribute(Store, PropertyAssignment[])
  nameWithType: ModelAttribute.ModelAttribute(Store, PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelAttribute(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5049
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ModelAttribute(Store store, params PropertyAssignment[] propertyAssignments)
    parameters:
    - id: store
      type: Microsoft.VisualStudio.Modeling.Store
      description: Store where new element is to be created.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of domain property id/value pairs to set once the element is created.
    content.vb: Public Sub New(store As Store, ParamArray propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor*
  nameWithType.vb: ModelAttribute.ModelAttribute(Store, PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelAttribute(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: ModelAttribute(Store, PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ModelAttribute(Partition, PropertyAssignment[])
  nameWithType: ModelAttribute.ModelAttribute(Partition, PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelAttribute(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5059
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ModelAttribute(Partition partition, params PropertyAssignment[] propertyAssignments)
    parameters:
    - id: partition
      type: Microsoft.VisualStudio.Modeling.Partition
      description: Partition where new element is to be created.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of domain property id/value pairs to set once the element is created.
    content.vb: Public Sub New(partition As Partition, ParamArray propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor*
  nameWithType.vb: ModelAttribute.ModelAttribute(Partition, PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelAttribute(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: ModelAttribute(Partition, PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.TypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.TypeDomainPropertyId
  id: TypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: TypeDomainPropertyId
  nameWithType: ModelAttribute.TypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.TypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5069
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly TypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Type
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Type
  id: Type
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ModelAttribute.Type
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Type
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Type
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5080
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Type domain property.\nType of this attribute\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(AttributeTypeTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("7ccdef4e-9305-485f-abdc-7ee9afed3b83")]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(AttributeTypeTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("7ccdef4e-9305-485f-abdc-7ee9afed3b83")>

      Public Property Type As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Type*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.AttributeTypeTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 7ccdef4e-9305-485f-abdc-7ee9afed3b83
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValueDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValueDomainPropertyId
  id: InitialValueDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: InitialValueDomainPropertyId
  nameWithType: ModelAttribute.InitialValueDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValueDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InitialValueDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5159
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nInitialValue domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid InitialValueDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly InitialValueDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue
  id: InitialValue
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: InitialValue
  nameWithType: ModelAttribute.InitialValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InitialValue
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5170
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of InitialValue domain property.\nValue for attribute when first created\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("711a1ade-6ac9-4f06-be35-3f7d0aacd848")]

      public string InitialValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("711a1ade-6ac9-4f06-be35-3f7d0aacd848")>

      Public Property InitialValue As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 711a1ade-6ac9-4f06-be35-3f7d0aacd848
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentityDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentityDomainPropertyId
  id: IsIdentityDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsIdentityDomainPropertyId
  nameWithType: ModelAttribute.IsIdentityDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentityDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsIdentityDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5248
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsIdentity domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsIdentityDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsIdentityDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity
  id: IsIdentity
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsIdentity
  nameWithType: ModelAttribute.IsIdentity
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsIdentity
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5259
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsIdentity domain property.\nDoes this attribute represent the identity of the object?\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("ef3764a4-c46e-443d-86b6-968e828d6d3b")]

      public bool IsIdentity { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("ef3764a4-c46e-443d-86b6-968e828d6d3b")>

      Public Property IsIdentity As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ef3764a4-c46e-443d-86b6-968e828d6d3b
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.RequiredDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.RequiredDomainPropertyId
  id: RequiredDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: RequiredDomainPropertyId
  nameWithType: ModelAttribute.RequiredDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.RequiredDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: RequiredDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5336
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nRequired domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid RequiredDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly RequiredDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Required
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Required
  id: Required
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Required
  nameWithType: ModelAttribute.Required
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Required
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Required
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5348
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Required domain property.\nIf true, cannot be null (or the default value for the property type, if not\nnullable)\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("e3b492a9-5341-4694-afa5-cb566ae813a7")]

      public bool Required { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("e3b492a9-5341-4694-afa5-cb566ae813a7")>

      Public Property Required As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Required*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: e3b492a9-5341-4694-afa5-cb566ae813a7
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.PersistentDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.PersistentDomainPropertyId
  id: PersistentDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: PersistentDomainPropertyId
  nameWithType: ModelAttribute.PersistentDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.PersistentDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: PersistentDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5425
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nPersistent domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid PersistentDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly PersistentDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent
  id: Persistent
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Persistent
  nameWithType: ModelAttribute.Persistent
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Persistent
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5436
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Persistent domain property.\nAttribute will be stored in persistent storage\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("e19260c6-5ae0-43bc-82eb-dd2b4d234f9e")]

      public bool Persistent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("e19260c6-5ae0-43bc-82eb-dd2b4d234f9e")>

      Public Property Persistent As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: e19260c6-5ae0-43bc-82eb-dd2b4d234f9e
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLengthDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLengthDomainPropertyId
  id: MaxLengthDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: MaxLengthDomainPropertyId
  nameWithType: ModelAttribute.MaxLengthDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLengthDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MaxLengthDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5514
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nMaxLength domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid MaxLengthDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly MaxLengthDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength
  id: MaxLength
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: ModelAttribute.MaxLength
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MaxLength
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5525
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of MaxLength domain property.\nMaximum length of the string, 0 for no max length\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("8c128f2b-8f9f-4c8e-acf1-dd5488736b79")]

      public int MaxLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("8c128f2b-8f9f-4c8e-acf1-dd5488736b79")>

      Public Property MaxLength As Integer
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 8c128f2b-8f9f-4c8e-acf1-dd5488736b79
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedDomainPropertyId
  id: IndexedDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IndexedDomainPropertyId
  nameWithType: ModelAttribute.IndexedDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IndexedDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5602
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIndexed domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IndexedDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IndexedDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed
  id: Indexed
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Indexed
  nameWithType: ModelAttribute.Indexed
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Indexed
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5613
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Indexed domain property.\nShould this attribute create an index in the database?\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("59213f5b-9662-4f70-ade1-280d2d7ab77b")]

      public bool Indexed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("59213f5b-9662-4f70-ade1-280d2d7ab77b")>

      Public Property Indexed As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 59213f5b-9662-4f70-ade1-280d2d7ab77b
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUniqueDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUniqueDomainPropertyId
  id: IndexedUniqueDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IndexedUniqueDomainPropertyId
  nameWithType: ModelAttribute.IndexedUniqueDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUniqueDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IndexedUniqueDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5690
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIndexedUnique domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IndexedUniqueDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IndexedUniqueDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique
  id: IndexedUnique
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IndexedUnique
  nameWithType: ModelAttribute.IndexedUnique
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IndexedUnique
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5701
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IndexedUnique domain property.\nIf indexed, is the index a unique index?\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("a4f65b33-e958-4f04-9dd0-160ce72a9f5c")]

      public bool IndexedUnique { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("a4f65b33-e958-4f04-9dd0-160ce72a9f5c")>

      Public Property IndexedUnique As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a4f65b33-e958-4f04-9dd0-160ce72a9f5c
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.StringTypeDomainPropertyId
  id: StringTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: StringTypeDomainPropertyId
  nameWithType: ModelAttribute.StringTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: StringTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5778
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nStringType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid StringTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly StringTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType
  id: StringType
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: StringType
  nameWithType: ModelAttribute.StringType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: StringType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5789
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of StringType domain property.\nIf not empty, will create a standard validation annotation for this attribute.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("b129be88-1030-4ef1-9ba2-98a02aa40d2b")]

      public HTML5Type StringType { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.HTML5Type
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("b129be88-1030-4ef1-9ba2-98a02aa40d2b")>

      Public Property StringType As HTML5Type
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: b129be88-1030-4ef1-9ba2-98a02aa40d2b
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverrideDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverrideDomainPropertyId
  id: TableOverrideDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: TableOverrideDomainPropertyId
  nameWithType: ModelAttribute.TableOverrideDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverrideDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TableOverrideDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5866
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nTableOverride domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid TableOverrideDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly TableOverrideDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride
  id: TableOverride
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: TableOverride
  nameWithType: ModelAttribute.TableOverride
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TableOverride
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5878
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of TableOverride domain property.\nUnused - Alternate table to store this attribute. If empty, the class&apos;s table is\nused.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainObjectId("5e502e9e-7120-42d1-bd3b-27dfc42f3618")]

      public string TableOverride { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainObjectId("5e502e9e-7120-42d1-bd3b-27dfc42f3618")>

      Public Property TableOverride As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 5e502e9e-7120-42d1-bd3b-27dfc42f3618
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyTokenDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyTokenDomainPropertyId
  id: IsConcurrencyTokenDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsConcurrencyTokenDomainPropertyId
  nameWithType: ModelAttribute.IsConcurrencyTokenDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyTokenDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsConcurrencyTokenDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5956
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsConcurrencyToken domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsConcurrencyTokenDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsConcurrencyTokenDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken
  id: IsConcurrencyToken
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsConcurrencyToken
  nameWithType: ModelAttribute.IsConcurrencyToken
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsConcurrencyToken
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 5967
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsConcurrencyToken domain property.\nIf true, this property serves as the concurrency value for the class\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("875fc44f-1355-4b9e-b3bb-377ab3510f3b")]

      public bool IsConcurrencyToken { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("875fc44f-1355-4b9e-b3bb-377ab3510f3b")>

      Public Property IsConcurrencyToken As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 875fc44f-1355-4b9e-b3bb-377ab3510f3b
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityTypeDomainPropertyId
  id: IdentityTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IdentityTypeDomainPropertyId
  nameWithType: ModelAttribute.IdentityTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IdentityTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6044
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIdentityType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IdentityTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IdentityTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType
  id: IdentityType
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IdentityType
  nameWithType: ModelAttribute.IdentityType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IdentityType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6055
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IdentityType domain property.\nIf this property is an identity, how the value is generated\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("e52b2355-7c6c-4493-8012-291f4f679d7b")]

      public IdentityType IdentityType { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.IdentityType
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("e52b2355-7c6c-4493-8012-291f4f679d7b")>

      Public Property IdentityType As IdentityType
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: e52b2355-7c6c-4493-8012-291f4f679d7b
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.DescriptionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.DescriptionDomainPropertyId
  id: DescriptionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: DescriptionDomainPropertyId
  nameWithType: ModelAttribute.DescriptionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.DescriptionDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DescriptionDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6133
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDescription domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DescriptionDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DescriptionDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
  id: Description
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ModelAttribute.Description
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Description
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6144
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Description domain property.\nDetailed code documentation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("d974a312-57fe-42b3-b377-22fe01562356")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("d974a312-57fe-42b3-b377-22fe01562356")>

      Public Property Description As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Description*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: d974a312-57fe-42b3-b377-22fe01562356
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SummaryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.SummaryDomainPropertyId
  id: SummaryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: SummaryDomainPropertyId
  nameWithType: ModelAttribute.SummaryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SummaryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SummaryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6223
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nSummary domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid SummaryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly SummaryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary
  id: Summary
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: ModelAttribute.Summary
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Summary
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6234
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Summary domain property.\nBrief code documentation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("1ebd74c3-5011-48e6-b5c1-67d78293067d")]

      public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("1ebd74c3-5011-48e6-b5c1-67d78293067d")>

      Public Property Summary As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 1ebd74c3-5011-48e6-b5c1-67d78293067d
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.NameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.NameDomainPropertyId
  id: NameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: NameDomainPropertyId
  nameWithType: ModelAttribute.NameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.NameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: NameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6312
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid NameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly NameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Name
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Name
  id: Name
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModelAttribute.Name
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Name
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Name
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6323
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Name domain property.\nThe name of the property. Must be a valid C# symbol.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [ElementName(typeof(ModelAttributeNameProvider))]

      [DomainObjectId("df236d99-ef7c-419c-833d-a972bf8ccc52")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <ElementName(GetType(ModelAttributeNameProvider))>

      <DomainObjectId("df236d99-ef7c-419c-833d-a972bf8ccc52")>

      Public Property Name As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Name*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.ElementNameAttribute
    ctor: Microsoft.VisualStudio.Modeling.ElementNameAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.ModelAttributeNameProvider
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: df236d99-ef7c-419c-833d-a972bf8ccc52
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibilityDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibilityDomainPropertyId
  id: SetterVisibilityDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: SetterVisibilityDomainPropertyId
  nameWithType: ModelAttribute.SetterVisibilityDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibilityDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SetterVisibilityDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6402
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nSetterVisibility domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid SetterVisibilityDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly SetterVisibilityDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility
  id: SetterVisibility
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: SetterVisibility
  nameWithType: ModelAttribute.SetterVisibility
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SetterVisibility
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6413
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of SetterVisibility domain property.\nVisibility for property setter; getter is public\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("76cc7aca-4420-423c-891c-2d349c8b7bc4")]

      public SetterAccessModifier SetterVisibility { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.SetterAccessModifier
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("76cc7aca-4420-423c-891c-2d349c8b7bc4")>

      Public Property SetterVisibility As SetterAccessModifier
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 76cc7aca-4420-423c-891c-2d349c8b7bc4
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.VirtualDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.VirtualDomainPropertyId
  id: VirtualDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: VirtualDomainPropertyId
  nameWithType: ModelAttribute.VirtualDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.VirtualDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: VirtualDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6491
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nVirtual domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid VirtualDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly VirtualDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual
  id: Virtual
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: Virtual
  nameWithType: ModelAttribute.Virtual
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Virtual
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6502
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Virtual domain property.\nIf true, property will be generated with the &apos;virtual&apos; keyword\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("c416dac0-92c6-4b36-89cd-b76380a3c448")]

      public bool Virtual { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("c416dac0-92c6-4b36-89cd-b76380a3c448")>

      Public Property Virtual As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: c416dac0-92c6-4b36-89cd-b76380a3c448
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnlyDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnlyDomainPropertyId
  id: ReadOnlyDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ReadOnlyDomainPropertyId
  nameWithType: ModelAttribute.ReadOnlyDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnlyDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ReadOnlyDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6579
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nReadOnly domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ReadOnlyDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ReadOnlyDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly
  id: ReadOnly
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: ModelAttribute.ReadOnly
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ReadOnly
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6591
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ReadOnly domain property.\nIf true, no setter will be generated. Only valid for transient public\nproperties.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("d20e1491-e58d-4a3c-8c0a-24653cc38580")]

      public bool ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("d20e1491-e58d-4a3c-8c0a-24653cc38580")>

      Public Property ReadOnly As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: d20e1491-e58d-4a3c-8c0a-24653cc38580
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoPropertyDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoPropertyDomainPropertyId
  id: AutoPropertyDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: AutoPropertyDomainPropertyId
  nameWithType: ModelAttribute.AutoPropertyDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoPropertyDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AutoPropertyDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6668
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nAutoProperty domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid AutoPropertyDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly AutoPropertyDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty
  id: AutoProperty
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: AutoProperty
  nameWithType: ModelAttribute.AutoProperty
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AutoProperty
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6680
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of AutoProperty domain property.\nIf false, generates a backing field with a partial method to hook getting and\nsetting the property. If true, generates a simple auto property.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("bd0273dc-d3ea-44e2-8b01-f79d39ca0704")]

      public bool AutoProperty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("bd0273dc-d3ea-44e2-8b01-f79d39ca0704")>

      Public Property AutoProperty As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bd0273dc-d3ea-44e2-8b01-f79d39ca0704
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLengthDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLengthDomainPropertyId
  id: MinLengthDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: MinLengthDomainPropertyId
  nameWithType: ModelAttribute.MinLengthDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLengthDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MinLengthDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6758
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nMinLength domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid MinLengthDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly MinLengthDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength
  id: MinLength
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: MinLength
  nameWithType: ModelAttribute.MinLength
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MinLength
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6769
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of MinLength domain property.\nMinimum length of the string, 0 for no minimum length\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("7fe42ef4-9691-4db1-8219-59107c14478b")]

      public int MinLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("7fe42ef4-9691-4db1-8219-59107c14478b")>

      Public Property MinLength As Integer
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 7fe42ef4-9691-4db1-8219-59107c14478b
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnNameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnNameDomainPropertyId
  id: ColumnNameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ColumnNameDomainPropertyId
  nameWithType: ModelAttribute.ColumnNameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnNameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ColumnNameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6846
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nColumnName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ColumnNameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ColumnNameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName
  id: ColumnName
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ColumnName
  nameWithType: ModelAttribute.ColumnName
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ColumnName
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6852
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ColumnName domain property.\nThe name for the table column backing this property\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainProperty(Kind = DomainPropertyKind.CustomStorage)]

      [DomainObjectId("e4394dde-038f-4fea-a328-3b6bed8571f8")]

      public string ColumnName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainProperty(Kind:=DomainPropertyKind.CustomStorage)>

      <DomainObjectId("e4394dde-038f-4fea-a328-3b6bed8571f8")>

      Public Property ColumnName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Kind
      type: Microsoft.VisualStudio.Modeling.DomainPropertyKind
      value: 2
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: e4394dde-038f-4fea-a328-3b6bed8571f8
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTrackingDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTrackingDomainPropertyId
  id: IsColumnNameTrackingDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsColumnNameTrackingDomainPropertyId
  nameWithType: ModelAttribute.IsColumnNameTrackingDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTrackingDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsColumnNameTrackingDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6937
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsColumnNameTracking domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsColumnNameTrackingDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsColumnNameTrackingDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking
  id: IsColumnNameTracking
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsColumnNameTracking
  nameWithType: ModelAttribute.IsColumnNameTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsColumnNameTracking
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 6948
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsColumnNameTracking domain property.\nIf true, ModelAttribute.ColumnName tracks ModelAttribute.Name\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainObjectId("7e3b91ab-3859-4b80-9270-9adf7b46dbb3")]

      public bool IsColumnNameTracking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainObjectId("7e3b91ab-3859-4b80-9270-9adf7b46dbb3")>

      Public Property IsColumnNameTracking As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 7e3b91ab-3859-4b80-9270-9adf7b46dbb3
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnTypeDomainPropertyId
  id: ColumnTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ColumnTypeDomainPropertyId
  nameWithType: ModelAttribute.ColumnTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ColumnTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7026
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nColumnType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ColumnTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ColumnTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType
  id: ColumnType
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ColumnType
  nameWithType: ModelAttribute.ColumnType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ColumnType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7032
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ColumnType domain property.\nThe data type for the table column backing this property\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainProperty(Kind = DomainPropertyKind.CustomStorage)]

      [DomainObjectId("17cc5012-1352-4a08-9965-55dcecaa985f")]

      public string ColumnType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainProperty(Kind:=DomainPropertyKind.CustomStorage)>

      <DomainObjectId("17cc5012-1352-4a08-9965-55dcecaa985f")>

      Public Property ColumnType As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Kind
      type: Microsoft.VisualStudio.Modeling.DomainPropertyKind
      value: 2
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 17cc5012-1352-4a08-9965-55dcecaa985f
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTrackingDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTrackingDomainPropertyId
  id: IsColumnTypeTrackingDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsColumnTypeTrackingDomainPropertyId
  nameWithType: ModelAttribute.IsColumnTypeTrackingDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTrackingDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsColumnTypeTrackingDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7116
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsColumnTypeTracking domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsColumnTypeTrackingDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsColumnTypeTrackingDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking
  id: IsColumnTypeTracking
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: IsColumnTypeTracking
  nameWithType: ModelAttribute.IsColumnTypeTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsColumnTypeTracking
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7127
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsColumnTypeTracking domain property.\nIf true, ModelAttribute.ColumnType tracks ModelAttribute.Type\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainObjectId("8f4f2c30-d7cd-4ee6-aa6b-1bc1dc8fd13c")]

      public bool IsColumnTypeTracking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainObjectId("8f4f2c30-d7cd-4ee6-aa6b-1bc1dc8fd13c")>

      Public Property IsColumnTypeTracking As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 8f4f2c30-d7cd-4ee6-aa6b-1bc1dc8fd13c
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributesDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributesDomainPropertyId
  id: CustomAttributesDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: CustomAttributesDomainPropertyId
  nameWithType: ModelAttribute.CustomAttributesDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributesDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomAttributesDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7205
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCustomAttributes domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid CustomAttributesDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly CustomAttributesDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes
  id: CustomAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: CustomAttributes
  nameWithType: ModelAttribute.CustomAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomAttributes
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7217
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of CustomAttributes domain property.\nAny custom attributes to be generated for this element.  Will be passed through\nas entered.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("c54c284f-10d6-4a49-8fc1-0bcf4bab8c6f")]

      public string CustomAttributes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("c54c284f-10d6-4a49-8fc1-0bcf4bab8c6f")>

      Public Property CustomAttributes As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: c54c284f-10d6-4a49-8fc1-0bcf4bab8c6f
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayTextDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayTextDomainPropertyId
  id: DisplayTextDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: DisplayTextDomainPropertyId
  nameWithType: ModelAttribute.DisplayTextDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayTextDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DisplayTextDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7294
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDisplayText domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DisplayTextDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DisplayTextDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText
  id: DisplayText
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: DisplayText
  nameWithType: ModelAttribute.DisplayText
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DisplayText
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7305
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("7d65b45d-ff09-49c7-b1bc-ea80175686d8")]

      public string DisplayText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("7d65b45d-ff09-49c7-b1bc-ea80175686d8")>

      Public Property DisplayText As String
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 7d65b45d-ff09-49c7-b1bc-ea80175686d8
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass
  id: ModelClass
  parent: Sawczyn.EFDesigner.EFModel.ModelAttribute
  langs:
  - csharp
  - vb
  name: ModelClass
  nameWithType: ModelAttribute.ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ModelClass
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 7381
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets ModelClass.\n"
  example: []
  syntax:
    content: public virtual ModelClass ModelClass { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    content.vb: Public Overridable Property ModelClass As ModelClass
  overload: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Sawczyn.EFDesigner.EFModel
  commentId: N:Sawczyn.EFDesigner.EFModel
  name: Sawczyn.EFDesigner.EFModel
  nameWithType: Sawczyn.EFDesigner.EFModel
  fullName: Sawczyn.EFDesigner.EFModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualStudio.Modeling.ModelElement
  commentId: T:Microsoft.VisualStudio.Modeling.ModelElement
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: Microsoft.VisualStudio.Modeling.ModelElement
- uid: Microsoft.VisualStudio.Modeling.IMergeElements
  commentId: T:Microsoft.VisualStudio.Modeling.IMergeElements
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: IMergeElements
  nameWithType: IMergeElements
  fullName: Microsoft.VisualStudio.Modeling.IMergeElements
- uid: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment
  commentId: T:Sawczyn.EFDesigner.EFModel.IModelElementInCompartment
  parent: Sawczyn.EFDesigner.EFModel
  name: IModelElementInCompartment
  nameWithType: IModelElementInCompartment
  fullName: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  commentId: T:Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  parent: Sawczyn.EFDesigner.EFModel
  name: IDisplaysWarning
  nameWithType: IDisplaysWarning
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetDomainClass()
  nameWithType: ModelElement.GetDomainClass()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete(Guid[])
  nameWithType: ModelElement.Delete(Guid[])
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  nameWithType.vb: ModelElement.Delete(Guid())
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid())
  name.vb: Delete(Guid())
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleting()
  nameWithType: ModelElement.OnDeleting()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleted()
  nameWithType: ModelElement.OnDeleted()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnResurrected()
  nameWithType: ModelElement.OnResurrected()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy()
  nameWithType: ModelElement.Copy()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy(IEnumerable<Guid>)
  nameWithType: ModelElement.Copy(IEnumerable<Guid>)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ModelElement.Copy(IEnumerable(Of Guid))
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: Copy(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnCopy(ModelElement)
  nameWithType: ModelElement.OnCopy(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeDisconnect(ModelElement)
  nameWithType: ModelElement.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeConfigure(ElementGroup)
  nameWithType: ModelElement.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.CanMerge
    nameWithType: ModelElement.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeRelate
    nameWithType: ModelElement.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeDisconnect(ModelElement)
  nameWithType: ModelElement.IMergeElements.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: IMergeElements.MergeDisconnect
    nameWithType: ModelElement.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeConfigure(ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeConfigure
    nameWithType: ModelElement.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetBaseElement(ModelElement)
  nameWithType: ModelElement.GetBaseElement(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetAllExtensions(ModelElement)
  nameWithType: ModelElement.GetAllExtensions(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension<T>(ModelElement)
  nameWithType: ModelElement.GetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.GetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: GetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.GetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Guid)
  nameWithType: ModelElement.GetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Type)
  nameWithType: ModelElement.GetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension<T>(ModelElement)
  nameWithType: ModelElement.TryGetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.TryGetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: TryGetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension<T>
    nameWithType: ModelElement.TryGetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension(Of T)
    nameWithType: ModelElement.TryGetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.TryGetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Guid)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Type)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Guid)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Type)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.AddExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension<T>(ModelElement)
  nameWithType: ModelElement.AddExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.AddExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: AddExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension<T>
    nameWithType: ModelElement.AddExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension(Of T)
    nameWithType: ModelElement.AddExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.AddExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Guid)
  nameWithType: ModelElement.AddExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Type)
  nameWithType: ModelElement.AddExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.RemoveExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.RemoveExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Guid)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Type)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Id
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Id
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Id
  nameWithType: ModelElement.Id
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Id
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Partition
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Partition
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Partition
  nameWithType: ModelElement.Partition
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Partition
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Store
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Store
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Store
  nameWithType: ModelElement.Store
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Store
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsActive
  nameWithType: ModelElement.IsActive
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleted
  nameWithType: ModelElement.IsDeleted
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleting
  nameWithType: ModelElement.IsDeleting
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  name: LocateInDiagram()
  nameWithType: ModelElementExtensions.LocateInDiagram()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  name: GetFirstShapeElement()
  nameWithType: ModelElementExtensions.GetFirstShapeElement()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  name: GetCompartment(String)
  nameWithType: ModelElementExtensions.GetCompartment(String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  name: InvalidateDiagrams()
  nameWithType: ModelElementExtensions.InvalidateDiagrams()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: LocateInDiagram(ModelElement)
  nameWithType: ModelElementExtensions.LocateInDiagram(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: ModelElementExtensions
  nameWithType: ModelElementExtensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: GetFirstShapeElement(ModelElement)
  nameWithType: ModelElementExtensions.GetFirstShapeElement(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  isExternal: true
  name: GetCompartment(ModelElement, String)
  nameWithType: ModelElementExtensions.GetCompartment(ModelElement, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement, System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: InvalidateDiagrams(ModelElement)
  nameWithType: ModelElementExtensions.InvalidateDiagrams(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  commentId: N:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  nameWithType: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement
  name: ParentModelElement
  nameWithType: ModelAttribute.ParentModelElement
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ParentModelElement
- uid: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.ParentModelElement
  commentId: P:Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.ParentModelElement
  parent: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment
  name: ParentModelElement
  nameWithType: IModelElementInCompartment.ParentModelElement
  fullName: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.ParentModelElement
- uid: Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
  commentId: T:Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
  parent: Sawczyn.EFDesigner.EFModel
  name: IModelElementWithCompartments
  nameWithType: IModelElementWithCompartments
  fullName: Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName
  name: CompartmentName
  nameWithType: ModelAttribute.CompartmentName
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CompartmentName
- uid: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.CompartmentName
  commentId: P:Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.CompartmentName
  parent: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment
  name: CompartmentName
  nameWithType: IModelElementInCompartment.CompartmentName
  fullName: Sawczyn.EFDesigner.EFModel.IModelElementInCompartment.CompartmentName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue
  name: GetHasWarningValue
  nameWithType: ModelAttribute.GetHasWarningValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetHasWarningValue
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  commentId: M:Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  parent: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  name: GetHasWarningValue()
  nameWithType: IDisplaysWarning.GetHasWarningValue()
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
    name: GetHasWarningValue
    nameWithType: IDisplaysWarning.GetHasWarningValue
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
    name: GetHasWarningValue
    nameWithType: IDisplaysWarning.GetHasWarningValue
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning
  name: ResetWarning
  nameWithType: ModelAttribute.ResetWarning
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ResetWarning
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  commentId: M:Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  parent: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  name: ResetWarning()
  nameWithType: IDisplaysWarning.ResetWarning()
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
    name: ResetWarning
    nameWithType: IDisplaysWarning.ResetWarning
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
    name: ResetWarning
    nameWithType: IDisplaysWarning.ResetWarning
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem
  name: RedrawItem
  nameWithType: ModelAttribute.RedrawItem
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.RedrawItem
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  commentId: M:Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  parent: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  name: RedrawItem()
  nameWithType: IDisplaysWarning.RedrawItem()
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
    name: RedrawItem
    nameWithType: IDisplaysWarning.RedrawItem
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
    name: RedrawItem
    nameWithType: IDisplaysWarning.RedrawItem
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue
  name: SupportsInitialValue
  nameWithType: ModelAttribute.SupportsInitialValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SupportsInitialValue
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue
  name: IsValidInitialValue
  nameWithType: ModelAttribute.IsValidInitialValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsValidInitialValue
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType
  name: PrimitiveType
  nameWithType: ModelAttribute.PrimitiveType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.PrimitiveType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType
  name: FQPrimitiveType
  nameWithType: ModelAttribute.FQPrimitiveType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.FQPrimitiveType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType
  name: CLRType
  nameWithType: ModelAttribute.CLRType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CLRType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType
  name: ToPrimitiveType
  nameWithType: ModelAttribute.ToPrimitiveType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToPrimitiveType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType
  name: ToCLRType
  nameWithType: ModelAttribute.ToCLRType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToCLRType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue
  name: GetColumnNameValue
  nameWithType: ModelAttribute.GetColumnNameValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnNameValue
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue
  name: SetColumnNameValue
  nameWithType: ModelAttribute.SetColumnNameValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnNameValue
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue
  name: GetColumnTypeValue
  nameWithType: ModelAttribute.GetColumnTypeValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.GetColumnTypeValue
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue
  name: SetColumnTypeValue
  nameWithType: ModelAttribute.SetColumnTypeValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetColumnTypeValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString
  name: ToString
  nameWithType: ModelAttribute.ToString
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ToString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse
  name: Parse
  nameWithType: ModelAttribute.Parse
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Parse
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelRoot
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelRoot
  nameWithType: ModelRoot
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot
- uid: Sawczyn.EFDesigner.EFModel.ParseResult
  commentId: T:Sawczyn.EFDesigner.EFModel.ParseResult
  parent: Sawczyn.EFDesigner.EFModel
  name: ParseResult
  nameWithType: ParseResult
  fullName: Sawczyn.EFDesigner.EFModel.ParseResult
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.#ctor
  name: ModelAttribute
  nameWithType: ModelAttribute.ModelAttribute
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelAttribute
- uid: Microsoft.VisualStudio.Modeling.Store
  commentId: T:Microsoft.VisualStudio.Modeling.Store
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Store
  nameWithType: Store
  fullName: Microsoft.VisualStudio.Modeling.Store
- uid: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  isExternal: true
  name: PropertyAssignment[]
  nameWithType: PropertyAssignment[]
  fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  nameWithType.vb: PropertyAssignment()
  fullName.vb: Microsoft.VisualStudio.Modeling.PropertyAssignment()
  name.vb: PropertyAssignment()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.VisualStudio.Modeling.Partition
  commentId: T:Microsoft.VisualStudio.Modeling.Partition
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Partition
  nameWithType: Partition
  fullName: Microsoft.VisualStudio.Modeling.Partition
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Type*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Type
  name: Type
  nameWithType: ModelAttribute.Type
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Type
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue
  name: InitialValue
  nameWithType: ModelAttribute.InitialValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.InitialValue
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity
  name: IsIdentity
  nameWithType: ModelAttribute.IsIdentity
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsIdentity
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Required*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Required
  name: Required
  nameWithType: ModelAttribute.Required
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Required
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent
  name: Persistent
  nameWithType: ModelAttribute.Persistent
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Persistent
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength
  name: MaxLength
  nameWithType: ModelAttribute.MaxLength
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.MaxLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed
  name: Indexed
  nameWithType: ModelAttribute.Indexed
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Indexed
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique
  name: IndexedUnique
  nameWithType: ModelAttribute.IndexedUnique
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IndexedUnique
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType
  name: StringType
  nameWithType: ModelAttribute.StringType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.StringType
- uid: Sawczyn.EFDesigner.EFModel.HTML5Type
  commentId: T:Sawczyn.EFDesigner.EFModel.HTML5Type
  parent: Sawczyn.EFDesigner.EFModel
  name: HTML5Type
  nameWithType: HTML5Type
  fullName: Sawczyn.EFDesigner.EFModel.HTML5Type
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride
  name: TableOverride
  nameWithType: ModelAttribute.TableOverride
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.TableOverride
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken
  name: IsConcurrencyToken
  nameWithType: ModelAttribute.IsConcurrencyToken
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsConcurrencyToken
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType
  name: IdentityType
  nameWithType: ModelAttribute.IdentityType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IdentityType
- uid: Sawczyn.EFDesigner.EFModel.IdentityType
  commentId: T:Sawczyn.EFDesigner.EFModel.IdentityType
  parent: Sawczyn.EFDesigner.EFModel
  name: IdentityType
  nameWithType: IdentityType
  fullName: Sawczyn.EFDesigner.EFModel.IdentityType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Description*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
  name: Description
  nameWithType: ModelAttribute.Description
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Description
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary
  name: Summary
  nameWithType: ModelAttribute.Summary
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Summary
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Name*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Name
  name: Name
  nameWithType: ModelAttribute.Name
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Name
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility
  name: SetterVisibility
  nameWithType: ModelAttribute.SetterVisibility
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.SetterVisibility
- uid: Sawczyn.EFDesigner.EFModel.SetterAccessModifier
  commentId: T:Sawczyn.EFDesigner.EFModel.SetterAccessModifier
  parent: Sawczyn.EFDesigner.EFModel
  name: SetterAccessModifier
  nameWithType: SetterAccessModifier
  fullName: Sawczyn.EFDesigner.EFModel.SetterAccessModifier
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual
  name: Virtual
  nameWithType: ModelAttribute.Virtual
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.Virtual
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly
  name: ReadOnly
  nameWithType: ModelAttribute.ReadOnly
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty
  name: AutoProperty
  nameWithType: ModelAttribute.AutoProperty
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.AutoProperty
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength
  name: MinLength
  nameWithType: ModelAttribute.MinLength
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.MinLength
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName
  name: ColumnName
  nameWithType: ModelAttribute.ColumnName
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnName
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking
  name: IsColumnNameTracking
  nameWithType: ModelAttribute.IsColumnNameTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnNameTracking
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType
  name: ColumnType
  nameWithType: ModelAttribute.ColumnType
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ColumnType
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking
  name: IsColumnTypeTracking
  nameWithType: ModelAttribute.IsColumnTypeTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.IsColumnTypeTracking
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes
  name: CustomAttributes
  nameWithType: ModelAttribute.CustomAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.CustomAttributes
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText
  name: DisplayText
  nameWithType: ModelAttribute.DisplayText
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayText
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass
  name: ModelClass
  nameWithType: ModelAttribute.ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute.ModelClass
- uid: Sawczyn.EFDesigner.EFModel.ModelClass
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelClass
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelClass
  nameWithType: ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass
