### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  commentId: T:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  id: EFModelHelpKeywordHelperBase
  parent: Sawczyn.EFDesigner.EFModel
  children:
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.#ctor
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword(Microsoft.VisualStudio.Modeling.DomainPropertyInfo)
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword(Microsoft.VisualStudio.Modeling.DomainRoleInfo)
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword(Microsoft.VisualStudio.Modeling.ModelElement)
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize
  langs:
  - csharp
  - vb
  name: EFModelHelpKeywordHelperBase
  nameWithType: EFModelHelpKeywordHelperBase
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  type: Class
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EFModelHelpKeywordHelperBase
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 45
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nHelper class used to map shapes and model elements to F1 help keywords.\n"
  example: []
  syntax:
    content: public abstract class EFModelHelpKeywordHelperBase
    content.vb: Public MustInherit Class EFModelHelpKeywordHelperBase
  inheritance:
  - System.Object
  derivedClasses:
  - Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelper
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.#ctor
  commentId: M:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.#ctor
  id: '#ctor'
  parent: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  langs:
  - csharp
  - vb
  name: EFModelHelpKeywordHelperBase()
  nameWithType: EFModelHelpKeywordHelperBase.EFModelHelpKeywordHelperBase()
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.EFModelHelpKeywordHelperBase()
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 52
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructs a new EFModelHelpKeywordHelperBase.\n"
  example: []
  syntax:
    content: protected EFModelHelpKeywordHelperBase()
    content.vb: Protected Sub New
  overload: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize
  commentId: M:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize
  id: Initialize
  parent: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: EFModelHelpKeywordHelperBase.Initialize()
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize()
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Initialize
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 58
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCalled to initialize the HelpKeywords dictionary.  Derived classes may override this to add custom keywords to the collection.\n"
  example: []
  syntax:
    content: protected virtual void Initialize()
    content.vb: Protected Overridable Sub Initialize
  overload: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords
  commentId: P:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords
  id: HelpKeywords
  parent: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  langs:
  - csharp
  - vb
  name: HelpKeywords
  nameWithType: EFModelHelpKeywordHelperBase.HelpKeywords
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: HelpKeywords
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 68
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCollection of key/value pairs describing help keywords for this DSL.\nKeys are strings such as domain class names that describe elements of the DSL.\nValues are corresponding help keywords.\n"
  example: []
  syntax:
    content: protected IDictionary<string, string> HelpKeywords { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Protected ReadOnly Property HelpKeywords As IDictionary(Of String, String)
  overload: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword(Microsoft.VisualStudio.Modeling.ModelElement)
  id: GetHelpKeyword(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  langs:
  - csharp
  - vb
  name: GetHelpKeyword(ModelElement)
  nameWithType: EFModelHelpKeywordHelperBase.GetHelpKeyword(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword(Microsoft.VisualStudio.Modeling.ModelElement)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetHelpKeyword
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 85
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets the help keyword associated with the given shape or model element instance.\n"
  example: []
  syntax:
    content: public virtual string GetHelpKeyword(ModelElement modelElement)
    parameters:
    - id: modelElement
      type: Microsoft.VisualStudio.Modeling.ModelElement
    return:
      type: System.String
      description: Help keyword, or empty string if there is no associated help keyword.
    content.vb: Public Overridable Function GetHelpKeyword(modelElement As ModelElement) As String
  overload: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword(Microsoft.VisualStudio.Modeling.DomainRoleInfo)
  commentId: M:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword(Microsoft.VisualStudio.Modeling.DomainRoleInfo)
  id: GetDomainRoleHelpKeyword(Microsoft.VisualStudio.Modeling.DomainRoleInfo)
  parent: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  langs:
  - csharp
  - vb
  name: GetDomainRoleHelpKeyword(DomainRoleInfo)
  nameWithType: EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword(DomainRoleInfo)
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword(Microsoft.VisualStudio.Modeling.DomainRoleInfo)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetDomainRoleHelpKeyword
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 107
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets the help keyword associated with the given domain role.\n"
  example: []
  syntax:
    content: public virtual string GetDomainRoleHelpKeyword(DomainRoleInfo domainRole)
    parameters:
    - id: domainRole
      type: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    return:
      type: System.String
      description: Help keyword, or empty string if there is no associated help keyword.
    content.vb: Public Overridable Function GetDomainRoleHelpKeyword(domainRole As DomainRoleInfo) As String
  overload: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword(Microsoft.VisualStudio.Modeling.DomainPropertyInfo)
  commentId: M:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword(Microsoft.VisualStudio.Modeling.DomainPropertyInfo)
  id: GetDomainPropertyHelpKeyword(Microsoft.VisualStudio.Modeling.DomainPropertyInfo)
  parent: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase
  langs:
  - csharp
  - vb
  name: GetDomainPropertyHelpKeyword(DomainPropertyInfo)
  nameWithType: EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword(DomainPropertyInfo)
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword(Microsoft.VisualStudio.Modeling.DomainPropertyInfo)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/HelpKeywordHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetDomainPropertyHelpKeyword
    path: ../Dsl/GeneratedCode/HelpKeywordHelper.cs
    startLine: 129
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets the help keyword associated with the given domain property.\n"
  example: []
  syntax:
    content: public virtual string GetDomainPropertyHelpKeyword(DomainPropertyInfo domainProperty)
    parameters:
    - id: domainProperty
      type: Microsoft.VisualStudio.Modeling.DomainPropertyInfo
    return:
      type: System.String
      description: Help keyword, or empty string if there is no associated help keyword.
    content.vb: Public Overridable Function GetDomainPropertyHelpKeyword(domainProperty As DomainPropertyInfo) As String
  overload: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Sawczyn.EFDesigner.EFModel
  commentId: N:Sawczyn.EFDesigner.EFModel
  name: Sawczyn.EFDesigner.EFModel
  nameWithType: Sawczyn.EFDesigner.EFModel
  fullName: Sawczyn.EFDesigner.EFModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.#ctor*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.#ctor
  name: EFModelHelpKeywordHelperBase
  nameWithType: EFModelHelpKeywordHelperBase.EFModelHelpKeywordHelperBase
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.EFModelHelpKeywordHelperBase
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize
  name: Initialize
  nameWithType: EFModelHelpKeywordHelperBase.Initialize
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.Initialize
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords
  name: HelpKeywords
  nameWithType: EFModelHelpKeywordHelperBase.HelpKeywords
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.HelpKeywords
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword
  name: GetHelpKeyword
  nameWithType: EFModelHelpKeywordHelperBase.GetHelpKeyword
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetHelpKeyword
- uid: Microsoft.VisualStudio.Modeling.ModelElement
  commentId: T:Microsoft.VisualStudio.Modeling.ModelElement
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: Microsoft.VisualStudio.Modeling.ModelElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword
  name: GetDomainRoleHelpKeyword
  nameWithType: EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainRoleHelpKeyword
- uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
  commentId: T:Microsoft.VisualStudio.Modeling.DomainRoleInfo
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: DomainRoleInfo
  nameWithType: DomainRoleInfo
  fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
- uid: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword
  name: GetDomainPropertyHelpKeyword
  nameWithType: EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword
  fullName: Sawczyn.EFDesigner.EFModel.EFModelHelpKeywordHelperBase.GetDomainPropertyHelpKeyword
- uid: Microsoft.VisualStudio.Modeling.DomainPropertyInfo
  commentId: T:Microsoft.VisualStudio.Modeling.DomainPropertyInfo
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: DomainPropertyInfo
  nameWithType: DomainPropertyInfo
  fullName: Microsoft.VisualStudio.Modeling.DomainPropertyInfo
