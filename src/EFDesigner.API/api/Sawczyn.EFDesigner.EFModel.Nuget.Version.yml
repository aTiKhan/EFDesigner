### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version
  commentId: T:Sawczyn.EFDesigner.EFModel.Nuget.Version
  id: Version
  parent: Sawczyn.EFDesigner.EFModel.Nuget
  children:
  - Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads
  - Sawczyn.EFDesigner.EFModel.Nuget.Version.Id
  - Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Version
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version
  type: Class
  source:
    remote:
      path: src/Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Version
    path: ../Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
    startLine: 3
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.Nuget
  syntax:
    content: public class Version
    content.vb: Public Class Version
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion
  commentId: P:Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion
  id: VersionVersion
  parent: Sawczyn.EFDesigner.EFModel.Nuget.Version
  langs:
  - csharp
  - vb
  name: VersionVersion
  nameWithType: Version.VersionVersion
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: VersionVersion
    path: ../Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
    startLine: 5
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.Nuget
  syntax:
    content: >-
      [JsonProperty("version")]

      public string VersionVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("version")>

      Public Property VersionVersion As String
  overload: Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: version
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads
  commentId: P:Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads
  id: Downloads
  parent: Sawczyn.EFDesigner.EFModel.Nuget.Version
  langs:
  - csharp
  - vb
  name: Downloads
  nameWithType: Version.Downloads
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Downloads
    path: ../Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
    startLine: 8
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.Nuget
  syntax:
    content: >-
      [JsonProperty("downloads")]

      public long Downloads { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty("downloads")>

      Public Property Downloads As Long
  overload: Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: downloads
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version.Id
  commentId: P:Sawczyn.EFDesigner.EFModel.Nuget.Version.Id
  id: Id
  parent: Sawczyn.EFDesigner.EFModel.Nuget.Version
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Version.Id
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version.Id
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Id
    path: ../Dsl/CustomCode/Utilities/Nuget/Models/Version.cs
    startLine: 11
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel.Nuget
  syntax:
    content: >-
      [JsonProperty("@id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("@id")>

      Public Property Id As String
  overload: Sawczyn.EFDesigner.EFModel.Nuget.Version.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '@id'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sawczyn.EFDesigner.EFModel.Nuget
  commentId: N:Sawczyn.EFDesigner.EFModel.Nuget
  name: Sawczyn.EFDesigner.EFModel.Nuget
  nameWithType: Sawczyn.EFDesigner.EFModel.Nuget
  fullName: Sawczyn.EFDesigner.EFModel.Nuget
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion
  name: VersionVersion
  nameWithType: Version.VersionVersion
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version.VersionVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads
  name: Downloads
  nameWithType: Version.Downloads
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version.Downloads
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Sawczyn.EFDesigner.EFModel.Nuget.Version.Id*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.Nuget.Version.Id
  name: Id
  nameWithType: Version.Id
  fullName: Sawczyn.EFDesigner.EFModel.Nuget.Version.Id
