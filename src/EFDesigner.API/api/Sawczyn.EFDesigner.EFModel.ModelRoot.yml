### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelRoot
  id: ModelRoot
  parent: Sawczyn.EFDesigner.EFModel
  children:
  - Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled
  - Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabledDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages
  - Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChainsDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Classes
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Comments
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefaultDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringNameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectoryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchemaDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccessDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClassDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Description
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DescriptionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.DomainClassId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccessDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerNameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectoryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory
  - Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectoryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Enums
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator
  - Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker
  - Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarkerDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.FullName
  - Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum
  - Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy
  - Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategyDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages
  - Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackagesDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled
  - Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabledDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace
  - Sawczyn.EFDesigner.EFModel.ModelRoot.NamespaceDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion
  - Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged(System.String,System.String)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged(System.String,System.String)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged(System.String,System.String)
  - Sawczyn.EFDesigner.EFModel.ModelRoot.PluralizationService
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabledDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletesDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesignerDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes
  - Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory
  - Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectoryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Summary
  - Sawczyn.EFDesigner.EFModel.ModelRoot.SummaryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave
  - Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSaveDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelRoot.Types
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes
  - Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes
  - Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation
  - Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentationDomainPropertyId
  langs:
  - csharp
  - vb
  name: ModelRoot
  nameWithType: ModelRoot
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot
  type: Class
  source:
    remote:
      path: src/Dsl/GeneratedCode/SerializationHelper.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ModelRoot
    path: ../Dsl/GeneratedCode/SerializationHelper.cs
    startLine: 1554
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDomainClass ModelRoot\n"
  example: []
  syntax:
    content: >-
      [ValidationState(ValidationState.Enabled)]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainModelOwner(typeof(EFModelDomainModel))]

      [CLSCompliant(true)]

      [DomainObjectId("95532cb8-3452-4b09-a654-aeb2e2d0b3ad")]

      [ValidationState(ValidationState.Enabled)]

      public class ModelRoot : ModelElement, IMergeElements
    content.vb: >-
      <ValidationState(ValidationState.Enabled)>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainModelOwner(GetType(EFModelDomainModel))>

      <CLSCompliant(True)>

      <DomainObjectId("95532cb8-3452-4b09-a654-aeb2e2d0b3ad")>

      <ValidationState(ValidationState.Enabled)>

      Public Class ModelRoot
          Inherits ModelElement
          Implements IMergeElements
  inheritance:
  - System.Object
  - Microsoft.VisualStudio.Modeling.ModelElement
  implements:
  - Microsoft.VisualStudio.Modeling.IMergeElements
  inheritedMembers:
  - Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  - Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.Id
  - Microsoft.VisualStudio.Modeling.ModelElement.Partition
  - Microsoft.VisualStudio.Modeling.ModelElement.Store
  - Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute
    ctor: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute.#ctor(Microsoft.VisualStudio.Modeling.Validation.ValidationState)
    arguments:
    - type: Microsoft.VisualStudio.Modeling.Validation.ValidationState
      value: 1
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 95532cb8-3452-4b09-a654-aeb2e2d0b3ad
  - type: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute
    ctor: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute.#ctor(Microsoft.VisualStudio.Modeling.Validation.ValidationState)
    arguments:
    - type: Microsoft.VisualStudio.Modeling.Validation.ValidationState
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.PluralizationService
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.PluralizationService
  id: PluralizationService
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: PluralizationService
  nameWithType: ModelRoot.PluralizationService
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.PluralizationService
  type: Field
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: PluralizationService
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 14
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public static readonly PluralizationService PluralizationService
    return:
      type: System.Data.Entity.Design.PluralizationServices.PluralizationService
    content.vb: Public Shared ReadOnly PluralizationService As PluralizationService
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator
  id: ExecuteValidator
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ExecuteValidator
  nameWithType: ModelRoot.ExecuteValidator
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ExecuteValidator
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 16
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public static Action ExecuteValidator { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Shared Property ExecuteValidator As Action
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.FullName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.FullName
  id: FullName
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: ModelRoot.FullName
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.FullName
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FullName
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 30
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public string FullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.FullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Types
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Types
  id: Types
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: ModelRoot.Types
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Types
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Types
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 33
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public LinkedElementCollection<ModelClass> Types { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public ReadOnly Property Types As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Types*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes
  id: SpatialTypes
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: SpatialTypes
  nameWithType: ModelRoot.SpatialTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SpatialTypes
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 43
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public string[] SpatialTypes { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property SpatialTypes As String()
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes
  id: ValidTypes
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ValidTypes
  nameWithType: ModelRoot.ValidTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ValidTypes
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 71
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public string[] ValidTypes { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property ValidTypes As String()
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes
  id: ValidCLRTypes
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ValidCLRTypes
  nameWithType: ModelRoot.ValidCLRTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ValidCLRTypes
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 97
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public string[] ValidCLRTypes { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property ValidCLRTypes As String()
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes
  id: ValidIdentityAttributeTypes
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ValidIdentityAttributeTypes
  nameWithType: ModelRoot.ValidIdentityAttributeTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ValidIdentityAttributeTypes
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 134
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public string[] ValidIdentityAttributeTypes { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property ValidIdentityAttributeTypes As String()
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType(System.String)
  id: IsValidCLRType(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: IsValidCLRType(String)
  nameWithType: ModelRoot.IsValidCLRType(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsValidCLRType
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 150
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public bool IsValidCLRType(string type)
    parameters:
    - id: type
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsValidCLRType(type As String) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion
  id: NuGetPackageVersion
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: NuGetPackageVersion
  nameWithType: ModelRoot.NuGetPackageVersion
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: NuGetPackageVersion
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 159
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public NuGetDisplay NuGetPackageVersion { get; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.NuGetDisplay
    content.vb: Public ReadOnly Property NuGetPackageVersion As NuGetDisplay
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages
  id: CanLoadNugetPackages
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: CanLoadNugetPackages
  nameWithType: ModelRoot.CanLoadNugetPackages
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CanLoadNugetPackages
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 171
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDslPackage might set this to false depending on whether or not it can find the resources needed to load Nuget packages\n"
  example: []
  syntax:
    content: public static bool CanLoadNugetPackages { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property CanLoadNugetPackages As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum
  id: GetEntityFrameworkPackageVersionNum
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: GetEntityFrameworkPackageVersionNum()
  nameWithType: ModelRoot.GetEntityFrameworkPackageVersionNum()
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetEntityFrameworkPackageVersionNum
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 174
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public double GetEntityFrameworkPackageVersionNum()
    return:
      type: System.Double
    content.vb: Public Function GetEntityFrameworkPackageVersionNum As Double
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged(System.String,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged(System.String,System.String)
  id: OnDatabaseSchemaChanged(System.String,System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: OnDatabaseSchemaChanged(String, String)
  nameWithType: ModelRoot.OnDatabaseSchemaChanged(String, String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: OnDatabaseSchemaChanged
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 217
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: protected virtual void OnDatabaseSchemaChanged(string oldValue, string newValue)
    parameters:
    - id: oldValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Protected Overridable Sub OnDatabaseSchemaChanged(oldValue As String, newValue As String)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged(System.String,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged(System.String,System.String)
  id: OnNamespaceChanged(System.String,System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: OnNamespaceChanged(String, String)
  nameWithType: ModelRoot.OnNamespaceChanged(String, String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: OnNamespaceChanged
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 240
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: protected virtual void OnNamespaceChanged(string oldValue, string newValue)
    parameters:
    - id: oldValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Protected Overridable Sub OnNamespaceChanged(oldValue As String, newValue As String)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged(System.String,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged(System.String,System.String)
  id: OnCollectionClassChanged(System.String,System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: OnCollectionClassChanged(String, String)
  nameWithType: ModelRoot.OnCollectionClassChanged(String, String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelRoot.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: OnCollectionClassChanged
    path: ../Dsl/CustomCode/Partials/ModelRoot.cs
    startLine: 261
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: protected virtual void OnCollectionClassChanged(string oldValue, string newValue)
    parameters:
    - id: oldValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Protected Overridable Sub OnCollectionClassChanged(oldValue As String, newValue As String)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DomainClassId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DomainClassId
  id: DomainClassId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DomainClassId
  nameWithType: ModelRoot.DomainClassId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DomainClassId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DomainClassId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 30
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nModelRoot domain class Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DomainClassId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DomainClassId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ModelRoot(Store, PropertyAssignment[])
  nameWithType: ModelRoot.ModelRoot(Store, PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ModelRoot(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 36
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ModelRoot(Store store, params PropertyAssignment[] propertyAssignments)
    parameters:
    - id: store
      type: Microsoft.VisualStudio.Modeling.Store
      description: Store where new element is to be created.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of domain property id/value pairs to set once the element is created.
    content.vb: Public Sub New(store As Store, ParamArray propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor*
  nameWithType.vb: ModelRoot.ModelRoot(Store, PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelRoot.ModelRoot(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: ModelRoot(Store, PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ModelRoot(Partition, PropertyAssignment[])
  nameWithType: ModelRoot.ModelRoot(Partition, PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ModelRoot(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 46
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ModelRoot(Partition partition, params PropertyAssignment[] propertyAssignments)
    parameters:
    - id: partition
      type: Microsoft.VisualStudio.Modeling.Partition
      description: Partition where new element is to be created.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of domain property id/value pairs to set once the element is created.
    content.vb: Public Sub New(partition As Partition, ParamArray propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor*
  nameWithType.vb: ModelRoot.ModelRoot(Partition, PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelRoot.ModelRoot(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: ModelRoot(Partition, PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabledDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabledDomainPropertyId
  id: LazyLoadingEnabledDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: LazyLoadingEnabledDomainPropertyId
  nameWithType: ModelRoot.LazyLoadingEnabledDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabledDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: LazyLoadingEnabledDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 56
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nLazyLoadingEnabled domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid LazyLoadingEnabledDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly LazyLoadingEnabledDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled
  id: LazyLoadingEnabled
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: LazyLoadingEnabled
  nameWithType: ModelRoot.LazyLoadingEnabled
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: LazyLoadingEnabled
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 67
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of LazyLoadingEnabled domain property.\nIf true, entity container will use lazy loading\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("9c8d4478-0eec-40bf-b805-ce3b6ba9ea1a")]

      public bool LazyLoadingEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("9c8d4478-0eec-40bf-b805-ce3b6ba9ea1a")>

      Public Property LazyLoadingEnabled As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 9c8d4478-0eec-40bf-b805-ce3b6ba9ea1a
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccessDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccessDomainPropertyId
  id: EntityContainerAccessDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityContainerAccessDomainPropertyId
  nameWithType: ModelRoot.EntityContainerAccessDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccessDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityContainerAccessDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 145
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nEntityContainerAccess domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid EntityContainerAccessDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly EntityContainerAccessDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess
  id: EntityContainerAccess
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityContainerAccess
  nameWithType: ModelRoot.EntityContainerAccess
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityContainerAccess
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 156
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of EntityContainerAccess domain property.\nCode visibility for entity container\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("a75bed72-bf5e-47eb-bf7d-6a7d899f9d94")]

      public ContainerAccess EntityContainerAccess { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ContainerAccess
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("a75bed72-bf5e-47eb-bf7d-6a7d899f9d94")>

      Public Property EntityContainerAccess As ContainerAccess
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a75bed72-bf5e-47eb-bf7d-6a7d899f9d94
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerNameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerNameDomainPropertyId
  id: EntityContainerNameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityContainerNameDomainPropertyId
  nameWithType: ModelRoot.EntityContainerNameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerNameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityContainerNameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 234
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nEntityContainerName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid EntityContainerNameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly EntityContainerNameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName
  id: EntityContainerName
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityContainerName
  nameWithType: ModelRoot.EntityContainerName
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityContainerName
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 245
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of EntityContainerName domain property.\nName of entity container class\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [ElementName]

      [DomainObjectId("881415e1-2291-493d-aad9-1abcb667b5cd")]

      public string EntityContainerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <ElementName>

      <DomainObjectId("881415e1-2291-493d-aad9-1abcb667b5cd")>

      Public Property EntityContainerName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.ElementNameAttribute
    ctor: Microsoft.VisualStudio.Modeling.ElementNameAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 881415e1-2291-493d-aad9-1abcb667b5cd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.NamespaceDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.NamespaceDomainPropertyId
  id: NamespaceDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: NamespaceDomainPropertyId
  nameWithType: ModelRoot.NamespaceDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.NamespaceDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: NamespaceDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 323
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nNamespace domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid NamespaceDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly NamespaceDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace
  id: Namespace
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: ModelRoot.Namespace
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Namespace
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 334
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Namespace domain property.\nNamespace for all generated classes\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("259ca9ae-0772-41d4-90b5-abd10888e839")]

      public string Namespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("259ca9ae-0772-41d4-90b5-abd10888e839")>

      Public Property Namespace As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 259ca9ae-0772-41d4-90b5-abd10888e839
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerTypeDomainPropertyId
  id: DatabaseInitializerTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DatabaseInitializerTypeDomainPropertyId
  nameWithType: ModelRoot.DatabaseInitializerTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseInitializerTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 411
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDatabaseInitializerType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DatabaseInitializerTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DatabaseInitializerTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType
  id: DatabaseInitializerType
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DatabaseInitializerType
  nameWithType: ModelRoot.DatabaseInitializerType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseInitializerType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 423
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DatabaseInitializerType domain property.\nInitialization strategy to synchronize the underlying database when an instance\nof this context is used for the first time\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("5b68cf01-65fe-4270-b96f-a3e519b9bb98")]

      public DatabaseInitializerKind DatabaseInitializerType { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("5b68cf01-65fe-4270-b96f-a3e519b9bb98")>

      Public Property DatabaseInitializerType As DatabaseInitializerKind
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 5b68cf01-65fe-4270-b96f-a3e519b9bb98
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringDomainPropertyId
  id: ConnectionStringDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ConnectionStringDomainPropertyId
  nameWithType: ModelRoot.ConnectionStringDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConnectionStringDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 501
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConnectionString domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ConnectionStringDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ConnectionStringDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString
  id: ConnectionString
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: ModelRoot.ConnectionString
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConnectionString
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 512
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ConnectionString domain property.\nConnection string to use. Mutually exclusive with ConnectionStringName\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("4f313ccf-48d3-4a0c-a5bb-713c2e86df2e")]

      public string ConnectionString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("4f313ccf-48d3-4a0c-a5bb-713c2e86df2e")>

      Public Property ConnectionString As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 4f313ccf-48d3-4a0c-a5bb-713c2e86df2e
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabledDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabledDomainPropertyId
  id: AutomaticMigrationsEnabledDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: AutomaticMigrationsEnabledDomainPropertyId
  nameWithType: ModelRoot.AutomaticMigrationsEnabledDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabledDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AutomaticMigrationsEnabledDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 590
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nAutomaticMigrationsEnabled domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid AutomaticMigrationsEnabledDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly AutomaticMigrationsEnabledDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled
  id: AutomaticMigrationsEnabled
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: AutomaticMigrationsEnabled
  nameWithType: ModelRoot.AutomaticMigrationsEnabled
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AutomaticMigrationsEnabled
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 601
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of AutomaticMigrationsEnabled domain property.\nIf true, automatic database migrations will be run when changes are detected.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("c455eaf6-f38b-49de-b72e-477d73931dc1")]

      public bool AutomaticMigrationsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("c455eaf6-f38b-49de-b72e-477d73931dc1")>

      Public Property AutomaticMigrationsEnabled As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: c455eaf6-f38b-49de-b72e-477d73931dc1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectoryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectoryDomainPropertyId
  id: EntityOutputDirectoryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityOutputDirectoryDomainPropertyId
  nameWithType: ModelRoot.EntityOutputDirectoryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectoryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityOutputDirectoryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 678
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nEntityOutputDirectory domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid EntityOutputDirectoryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly EntityOutputDirectoryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory
  id: EntityOutputDirectory
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityOutputDirectory
  nameWithType: ModelRoot.EntityOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityOutputDirectory
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 689
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of EntityOutputDirectory domain property.\nOutput directory for entities\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ProjectDirectoryTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("368a7c8c-e0db-40ef-b678-dbc4580d9e54")]

      public string EntityOutputDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(ProjectDirectoryTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("368a7c8c-e0db-40ef-b678-dbc4580d9e54")>

      Public Property EntityOutputDirectory As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.ProjectDirectoryTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 368a7c8c-e0db-40ef-b678-dbc4580d9e54
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectoryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectoryDomainPropertyId
  id: ContextOutputDirectoryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ContextOutputDirectoryDomainPropertyId
  nameWithType: ModelRoot.ContextOutputDirectoryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectoryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ContextOutputDirectoryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 767
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nContextOutputDirectory domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ContextOutputDirectoryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ContextOutputDirectoryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory
  id: ContextOutputDirectory
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ContextOutputDirectory
  nameWithType: ModelRoot.ContextOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ContextOutputDirectory
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 778
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ContextOutputDirectory domain property.\nProject directory for DbContext-related files\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ProjectDirectoryTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("9e0ffa12-8733-40d2-8819-73740de7fecf")]

      public string ContextOutputDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(ProjectDirectoryTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("9e0ffa12-8733-40d2-8819-73740de7fecf")>

      Public Property ContextOutputDirectory As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.ProjectDirectoryTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 9e0ffa12-8733-40d2-8819-73740de7fecf
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectoryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectoryDomainPropertyId
  id: EnumOutputDirectoryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EnumOutputDirectoryDomainPropertyId
  nameWithType: ModelRoot.EnumOutputDirectoryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectoryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EnumOutputDirectoryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 856
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nEnumOutputDirectory domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid EnumOutputDirectoryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly EnumOutputDirectoryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory
  id: EnumOutputDirectory
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EnumOutputDirectory
  nameWithType: ModelRoot.EnumOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EnumOutputDirectory
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 867
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of EnumOutputDirectory domain property.\nProject directory for enums\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ProjectDirectoryTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("5de798f2-310f-40f7-8188-37690e6691b5")]

      public string EnumOutputDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(ProjectDirectoryTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("5de798f2-310f-40f7-8188-37690e6691b5")>

      Public Property EnumOutputDirectory As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.ProjectDirectoryTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 5de798f2-310f-40f7-8188-37690e6691b5
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchemaDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchemaDomainPropertyId
  id: DatabaseSchemaDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DatabaseSchemaDomainPropertyId
  nameWithType: ModelRoot.DatabaseSchemaDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchemaDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseSchemaDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 945
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDatabaseSchema domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DatabaseSchemaDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DatabaseSchemaDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema
  id: DatabaseSchema
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DatabaseSchema
  nameWithType: ModelRoot.DatabaseSchema
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseSchema
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 956
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DatabaseSchema domain property.\nThe schema to use for table creation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("02d27f11-3c30-4837-a56a-d63f0e629d95")]

      public string DatabaseSchema { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("02d27f11-3c30-4837-a56a-d63f0e629d95")>

      Public Property DatabaseSchema As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 02d27f11-3c30-4837-a56a-d63f0e629d95
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefaultDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefaultDomainPropertyId
  id: ConcurrencyDefaultDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ConcurrencyDefaultDomainPropertyId
  nameWithType: ModelRoot.ConcurrencyDefaultDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefaultDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConcurrencyDefaultDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1034
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConcurrencyDefault domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ConcurrencyDefaultDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ConcurrencyDefaultDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault
  id: ConcurrencyDefault
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ConcurrencyDefault
  nameWithType: ModelRoot.ConcurrencyDefault
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConcurrencyDefault
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1045
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ConcurrencyDefault domain property.\nDefault concurrency handling strategy\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("e4bc45f1-94fd-480e-a6f9-3cb22c7fd469")]

      public Concurrency ConcurrencyDefault { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.Concurrency
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("e4bc45f1-94fd-480e-a6f9-3cb22c7fd469")>

      Public Property ConcurrencyDefault As Concurrency
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: e4bc45f1-94fd-480e-a6f9-3cb22c7fd469
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarkerDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarkerDomainPropertyId
  id: FileNameMarkerDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: FileNameMarkerDomainPropertyId
  nameWithType: ModelRoot.FileNameMarkerDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarkerDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FileNameMarkerDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1123
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nFileNameMarker domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid FileNameMarkerDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly FileNameMarkerDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker
  id: FileNameMarker
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: FileNameMarker
  nameWithType: ModelRoot.FileNameMarker
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FileNameMarker
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1134
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of FileNameMarker domain property.\nFile name suffix for generated files (e.g., foo.generated.cs)\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("3dc4c543-b044-44ca-af38-31cf29555403")]

      public string FileNameMarker { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("3dc4c543-b044-44ca-af38-31cf29555403")>

      Public Property FileNameMarker As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 3dc4c543-b044-44ca-af38-31cf29555403
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersionDomainPropertyId
  id: EntityFrameworkVersionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityFrameworkVersionDomainPropertyId
  nameWithType: ModelRoot.EntityFrameworkVersionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersionDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityFrameworkVersionDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1212
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nEntityFrameworkVersion domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid EntityFrameworkVersionDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly EntityFrameworkVersionDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion
  id: EntityFrameworkVersion
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityFrameworkVersion
  nameWithType: ModelRoot.EntityFrameworkVersion
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityFrameworkVersion
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1223
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of EntityFrameworkVersion domain property.\nVersion of Entity Framework for validation and generated code\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("b4e314ff-3c4b-4e1e-8309-8d35dacdc19e")]

      public EFVersion EntityFrameworkVersion { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.EFVersion
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("b4e314ff-3c4b-4e1e-8309-8d35dacdc19e")>

      Public Property EntityFrameworkVersion As EFVersion
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: b4e314ff-3c4b-4e1e-8309-8d35dacdc19e
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringNameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringNameDomainPropertyId
  id: ConnectionStringNameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ConnectionStringNameDomainPropertyId
  nameWithType: ModelRoot.ConnectionStringNameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringNameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConnectionStringNameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1301
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConnectionStringName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ConnectionStringNameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ConnectionStringNameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName
  id: ConnectionStringName
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ConnectionStringName
  nameWithType: ModelRoot.ConnectionStringName
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConnectionStringName
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1313
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ConnectionStringName domain property.\nName of connection string in config file. Mutually exclusive with\nConnectionString\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("effa53ce-9269-49ed-afb1-232905a85ec2")]

      public string ConnectionStringName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("effa53ce-9269-49ed-afb1-232905a85ec2")>

      Public Property ConnectionStringName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: effa53ce-9269-49ed-afb1-232905a85ec2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChainsDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChainsDomainPropertyId
  id: ChopMethodChainsDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ChopMethodChainsDomainPropertyId
  nameWithType: ModelRoot.ChopMethodChainsDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChainsDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ChopMethodChainsDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1390
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nChopMethodChains domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ChopMethodChainsDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ChopMethodChainsDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains
  id: ChopMethodChains
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ChopMethodChains
  nameWithType: ModelRoot.ChopMethodChains
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ChopMethodChains
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1401
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ChopMethodChains domain property.\nWill chop generated code method chains\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("c28462ae-e9b9-47e6-86c2-4efe0ab6e1c1")]

      public bool ChopMethodChains { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("c28462ae-e9b9-47e6-86c2-4efe0ab6e1c1")>

      Public Property ChopMethodChains As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: c28462ae-e9b9-47e6-86c2-4efe0ab6e1c1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategyDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategyDomainPropertyId
  id: InheritanceStrategyDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: InheritanceStrategyDomainPropertyId
  nameWithType: ModelRoot.InheritanceStrategyDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategyDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InheritanceStrategyDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1479
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nInheritanceStrategy domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid InheritanceStrategyDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly InheritanceStrategyDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy
  id: InheritanceStrategy
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: InheritanceStrategy
  nameWithType: ModelRoot.InheritanceStrategy
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InheritanceStrategy
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1490
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of InheritanceStrategy domain property.\nHow tables will be created/used to handle inheritance\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("3ea27de3-f83c-44d8-bba5-c1886f65b182")]

      public CodeStrategy InheritanceStrategy { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.CodeStrategy
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("3ea27de3-f83c-44d8-bba5-c1886f65b182")>

      Public Property InheritanceStrategy As CodeStrategy
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 3ea27de3-f83c-44d8-bba5-c1886f65b182
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClassDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClassDomainPropertyId
  id: DefaultCollectionClassDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DefaultCollectionClassDomainPropertyId
  nameWithType: ModelRoot.DefaultCollectionClassDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClassDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DefaultCollectionClassDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1569
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDefaultCollectionClass domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DefaultCollectionClassDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DefaultCollectionClassDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass
  id: DefaultCollectionClass
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DefaultCollectionClass
  nameWithType: ModelRoot.DefaultCollectionClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DefaultCollectionClass
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1581
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: >-
      [TypeConverter(typeof(CollectionTypeTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("b33a36f3-c01d-4e65-9946-17e68d78ea6c")]

      public string DefaultCollectionClass { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(CollectionTypeTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("b33a36f3-c01d-4e65-9946-17e68d78ea6c")>

      Public Property DefaultCollectionClass As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.CollectionTypeTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: b33a36f3-c01d-4e65-9946-17e68d78ea6c
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabledDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabledDomainPropertyId
  id: ProxyGenerationEnabledDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ProxyGenerationEnabledDomainPropertyId
  nameWithType: ModelRoot.ProxyGenerationEnabledDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabledDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ProxyGenerationEnabledDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1660
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nProxyGenerationEnabled domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ProxyGenerationEnabledDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ProxyGenerationEnabledDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled
  id: ProxyGenerationEnabled
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ProxyGenerationEnabled
  nameWithType: ModelRoot.ProxyGenerationEnabled
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ProxyGenerationEnabled
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1671
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ProxyGenerationEnabled domain property.\nIf true, context will generate proxies for POCO entities\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("c4dd4e17-94aa-44e7-8cb8-35f7c1a6d374")]

      public bool ProxyGenerationEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("c4dd4e17-94aa-44e7-8cb8-35f7c1a6d374")>

      Public Property ProxyGenerationEnabled As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: c4dd4e17-94aa-44e7-8cb8-35f7c1a6d374
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSaveDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSaveDomainPropertyId
  id: TransformOnSaveDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: TransformOnSaveDomainPropertyId
  nameWithType: ModelRoot.TransformOnSaveDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSaveDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TransformOnSaveDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1749
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nTransformOnSave domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid TransformOnSaveDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly TransformOnSaveDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave
  id: TransformOnSave
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: TransformOnSave
  nameWithType: ModelRoot.TransformOnSave
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TransformOnSave
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1760
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of TransformOnSave domain property.\nIf true, will run Transform All Templates when this model is saved\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("0b0ccc1d-e8ea-4dab-9517-b7412cda307e")]

      public bool TransformOnSave { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("0b0ccc1d-e8ea-4dab-9517-b7412cda307e")>

      Public Property TransformOnSave As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 0b0ccc1d-e8ea-4dab-9517-b7412cda307e
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityTypeDomainPropertyId
  id: DefaultIdentityTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DefaultIdentityTypeDomainPropertyId
  nameWithType: ModelRoot.DefaultIdentityTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DefaultIdentityTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1838
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDefaultIdentityType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DefaultIdentityTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DefaultIdentityTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType
  id: DefaultIdentityType
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DefaultIdentityType
  nameWithType: ModelRoot.DefaultIdentityType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DefaultIdentityType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1849
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DefaultIdentityType domain property.\nDefault type for ID properties in new classes\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(IdentityAttributeTypeTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("07688b4c-ba00-4e51-9abd-7353a4df233d")]

      public string DefaultIdentityType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(IdentityAttributeTypeTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("07688b4c-ba00-4e51-9abd-7353a4df233d")>

      Public Property DefaultIdentityType As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 07688b4c-ba00-4e51-9abd-7353a4df233d
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletesDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletesDomainPropertyId
  id: ShowCascadeDeletesDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ShowCascadeDeletesDomainPropertyId
  nameWithType: ModelRoot.ShowCascadeDeletesDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletesDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ShowCascadeDeletesDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1928
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nShowCascadeDeletes domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ShowCascadeDeletesDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ShowCascadeDeletesDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes
  id: ShowCascadeDeletes
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ShowCascadeDeletes
  nameWithType: ModelRoot.ShowCascadeDeletes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ShowCascadeDeletes
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 1939
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ShowCascadeDeletes domain property.\nIf true, will display cascade deleted associations as dashed red lines\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("267e37bd-159f-4b8b-88c3-f1561bf576e0")]

      public bool ShowCascadeDeletes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("267e37bd-159f-4b8b-88c3-f1561bf576e0")>

      Public Property ShowCascadeDeletes As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 267e37bd-159f-4b8b-88c3-f1561bf576e0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseTypeDomainPropertyId
  id: DatabaseTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DatabaseTypeDomainPropertyId
  nameWithType: ModelRoot.DatabaseTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2016
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDatabaseType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DatabaseTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DatabaseTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType
  id: DatabaseType
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DatabaseType
  nameWithType: ModelRoot.DatabaseType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2028
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DatabaseType domain property.\nDatabase manifest token. Optimization if runtime database type is known and\nunchanging, and only valid for SqlServer.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("35be1c55-6c42-45bf-af62-16d00dbf80c4")]

      public DatabaseKind DatabaseType { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.DatabaseKind
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("35be1c55-6c42-45bf-af62-16d00dbf80c4")>

      Public Property DatabaseType As DatabaseKind
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 35be1c55-6c42-45bf-af62-16d00dbf80c4
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentationDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentationDomainPropertyId
  id: WarnOnMissingDocumentationDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: WarnOnMissingDocumentationDomainPropertyId
  nameWithType: ModelRoot.WarnOnMissingDocumentationDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentationDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: WarnOnMissingDocumentationDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2104
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nWarnOnMissingDocumentation domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid WarnOnMissingDocumentationDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly WarnOnMissingDocumentationDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation
  id: WarnOnMissingDocumentation
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: WarnOnMissingDocumentation
  nameWithType: ModelRoot.WarnOnMissingDocumentation
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: WarnOnMissingDocumentation
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2115
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of WarnOnMissingDocumentation domain property.\nIf true, will generate warnings when summary documentation is missing\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("247aa399-3d89-4b48-baeb-992e8cb3d47a")]

      public bool WarnOnMissingDocumentation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("247aa399-3d89-4b48-baeb-992e8cb3d47a")>

      Public Property WarnOnMissingDocumentation As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 247aa399-3d89-4b48-baeb-992e8cb3d47a
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersionDomainPropertyId
  id: EntityFrameworkPackageVersionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityFrameworkPackageVersionDomainPropertyId
  nameWithType: ModelRoot.EntityFrameworkPackageVersionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersionDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityFrameworkPackageVersionDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2193
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nEntityFrameworkPackageVersion domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid EntityFrameworkPackageVersionDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly EntityFrameworkPackageVersionDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion
  id: EntityFrameworkPackageVersion
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: EntityFrameworkPackageVersion
  nameWithType: ModelRoot.EntityFrameworkPackageVersion
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EntityFrameworkPackageVersion
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2204
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of EntityFrameworkPackageVersion domain property.\nVersion of Entity Framework code for validation and generated code\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(EFPackageVersionTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("2a16f8e1-9e68-43ce-b625-5e68e8497abb")]

      public string EntityFrameworkPackageVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(EFPackageVersionTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("2a16f8e1-9e68-43ce-b625-5e68e8497abb")>

      Public Property EntityFrameworkPackageVersion As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFPackageVersionTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 2a16f8e1-9e68-43ce-b625-5e68e8497abb
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectoryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectoryDomainPropertyId
  id: StructOutputDirectoryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: StructOutputDirectoryDomainPropertyId
  nameWithType: ModelRoot.StructOutputDirectoryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectoryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: StructOutputDirectoryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2283
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nStructOutputDirectory domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid StructOutputDirectoryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly StructOutputDirectoryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory
  id: StructOutputDirectory
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: StructOutputDirectory
  nameWithType: ModelRoot.StructOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: StructOutputDirectory
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2294
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of StructOutputDirectory domain property.\nProject directory for generated structures (owned/complex types)\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ProjectDirectoryTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("35350509-1856-4ca7-884a-1cee2552eef9")]

      public string StructOutputDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(ProjectDirectoryTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("35350509-1856-4ca7-884a-1cee2552eef9")>

      Public Property StructOutputDirectory As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.ProjectDirectoryTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 35350509-1856-4ca7-884a-1cee2552eef9
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackagesDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackagesDomainPropertyId
  id: InstallNuGetPackagesDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: InstallNuGetPackagesDomainPropertyId
  nameWithType: ModelRoot.InstallNuGetPackagesDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackagesDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InstallNuGetPackagesDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2372
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nInstallNuGetPackages domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid InstallNuGetPackagesDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly InstallNuGetPackagesDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages
  id: InstallNuGetPackages
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: InstallNuGetPackages
  nameWithType: ModelRoot.InstallNuGetPackages
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: InstallNuGetPackages
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2384
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of InstallNuGetPackages domain property.\nOn save, should the editor install/remove Entity Framework Nuget packages to\nmatch the model&apos;s EF version settings?\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("77fab320-8888-42b8-9a70-23c5b7a9610e")]

      public AutomaticAction InstallNuGetPackages { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.AutomaticAction
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("77fab320-8888-42b8-9a70-23c5b7a9610e")>

      Public Property InstallNuGetPackages As AutomaticAction
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/InstallNuGetPackages.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 77fab320-8888-42b8-9a70-23c5b7a9610e
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccessDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccessDomainPropertyId
  id: DbSetAccessDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DbSetAccessDomainPropertyId
  nameWithType: ModelRoot.DbSetAccessDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccessDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DbSetAccessDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2462
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDbSetAccess domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DbSetAccessDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DbSetAccessDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess
  id: DbSetAccess
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DbSetAccess
  nameWithType: ModelRoot.DbSetAccess
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DbSetAccess
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2473
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DbSetAccess domain property.\nCode visibility for DbSets\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("950f6c9e-3977-4968-aa8f-697ffb49ac4a")]

      public ContainerAccess DbSetAccess { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ContainerAccess
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("950f6c9e-3977-4968-aa8f-697ffb49ac4a")>

      Public Property DbSetAccess As ContainerAccess
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 950f6c9e-3977-4968-aa8f-697ffb49ac4a
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DescriptionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.DescriptionDomainPropertyId
  id: DescriptionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: DescriptionDomainPropertyId
  nameWithType: ModelRoot.DescriptionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DescriptionDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DescriptionDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2551
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDescription domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DescriptionDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DescriptionDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Description
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Description
  id: Description
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ModelRoot.Description
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Description
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Description
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2562
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Description domain property.\nDetailed code documentation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Description.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("a95a5645-b5d5-4b11-b177-d674cee91290")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Description.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("a95a5645-b5d5-4b11-b177-d674cee91290")>

      Public Property Description As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Description*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Description.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a95a5645-b5d5-4b11-b177-d674cee91290
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.SummaryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.SummaryDomainPropertyId
  id: SummaryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: SummaryDomainPropertyId
  nameWithType: ModelRoot.SummaryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.SummaryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SummaryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2641
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nSummary domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid SummaryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly SummaryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Summary
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Summary
  id: Summary
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: ModelRoot.Summary
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Summary
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Summary
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2652
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Summary domain property.\nBrief code documentation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("a25a2ffe-9ae9-408b-a346-056805de6975")]

      public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("a25a2ffe-9ae9-408b-a346-056805de6975")>

      Public Property Summary As String
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Summary*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a25a2ffe-9ae9-408b-a346-056805de6975
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesignerDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesignerDomainPropertyId
  id: ShowWarningsInDesignerDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ShowWarningsInDesignerDomainPropertyId
  nameWithType: ModelRoot.ShowWarningsInDesignerDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesignerDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ShowWarningsInDesignerDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2730
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nShowWarningsInDesigner domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ShowWarningsInDesignerDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ShowWarningsInDesignerDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner
  id: ShowWarningsInDesigner
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: ShowWarningsInDesigner
  nameWithType: ModelRoot.ShowWarningsInDesigner
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ShowWarningsInDesigner
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2742
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ShowWarningsInDesigner domain property.\nIf true, will display warning glyphs with tooltips when model elements have\nnon-fatal issues detected\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("b79884bd-572a-444c-b64e-24d66c8efc29")]

      public bool ShowWarningsInDesigner { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("b79884bd-572a-444c-b64e-24d66c8efc29")>

      Public Property ShowWarningsInDesigner As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: b79884bd-572a-444c-b64e-24d66c8efc29
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Comments
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Comments
  id: Comments
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Comments
  nameWithType: ModelRoot.Comments
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Comments
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Comments
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2820
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Comments.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<Comment> Comments { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.Comment}
    content.vb: Public Overridable ReadOnly Property Comments As LinkedElementCollection(Of Comment)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Comments*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Enums
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Enums
  id: Enums
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Enums
  nameWithType: ModelRoot.Enums
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Enums
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Enums
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2835
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Enums.\nNo description available\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelEnum> Enums { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelEnum}
    content.vb: Public Overridable ReadOnly Property Enums As LinkedElementCollection(Of ModelEnum)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Enums*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Classes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelRoot.Classes
  id: Classes
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: Classes
  nameWithType: ModelRoot.Classes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Classes
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Classes
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2850
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Classes.\nDescription for Sawczyn.EFDesigner.EFModel.ModelRootHasClasses.ModelRoot\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelClass> Classes { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property Classes As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.Classes*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  id: CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelRoot.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CanMerge
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2871
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nReturns a value indicating whether the source element represented by the\nspecified root ProtoElement can be added to this element.\n"
  example: []
  syntax:
    content: protected override bool CanMerge(ProtoElementBase rootElement, ElementGroupPrototype elementGroupPrototype)
    parameters:
    - id: rootElement
      type: Microsoft.VisualStudio.Modeling.ProtoElementBase
      description: "\nThe root ProtoElement representing a source element.  This can be null, \nin which case the ElementGroupPrototype does not contain an ProtoElements\nand the code should inspect the ElementGroupPrototype context information.\n"
    - id: elementGroupPrototype
      type: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
      description: The ElementGroupPrototype that contains the root ProtoElement.
    return:
      type: System.Boolean
      description: true if the source element represented by the ProtoElement can be added to this target element.
    content.vb: Protected Overrides Function CanMerge(rootElement As ProtoElementBase, elementGroupPrototype As ElementGroupPrototype) As Boolean
  overridden: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  id: MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelRoot.MergeRelate(ModelElement, ElementGroup)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MergeRelate
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2910
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCalled by the Merge process to create a relationship between \nthis target element and the specified source element. \nTypically, a parent-child relationship is established\nbetween the target element (the parent) and the source element \n(the child), but any relationship can be established.\n"
  remarks: "\nThis method is overriden to create the relationship between the target element and the specified source element.\nThe base method does nothing.\n"
  example: []
  syntax:
    content: protected override void MergeRelate(ModelElement sourceElement, ElementGroup elementGroup)
    parameters:
    - id: sourceElement
      type: Microsoft.VisualStudio.Modeling.ModelElement
      description: The element that is to be related to this model element.
    - id: elementGroup
      type: Microsoft.VisualStudio.Modeling.ElementGroup
      description: The group of source ModelElements that have been rehydrated into the target store.
    content.vb: Protected Overrides Sub MergeRelate(sourceElement As ModelElement, elementGroup As ElementGroup)
  overridden: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  id: MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.ModelRoot
  langs:
  - csharp
  - vb
  name: MergeDisconnect(ModelElement)
  nameWithType: ModelRoot.MergeDisconnect(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MergeDisconnect
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 2962
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nPerforms operation opposite to MergeRelate - i.e. disconnects a given\nelement from the current one (removes links created by MergeRelate).\n"
  example: []
  syntax:
    content: protected override void MergeDisconnect(ModelElement sourceElement)
    parameters:
    - id: sourceElement
      type: Microsoft.VisualStudio.Modeling.ModelElement
      description: Element to be unmerged/disconnected.
    content.vb: Protected Overrides Sub MergeDisconnect(sourceElement As ModelElement)
  overridden: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  overload: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Sawczyn.EFDesigner.EFModel
  commentId: N:Sawczyn.EFDesigner.EFModel
  name: Sawczyn.EFDesigner.EFModel
  nameWithType: Sawczyn.EFDesigner.EFModel
  fullName: Sawczyn.EFDesigner.EFModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualStudio.Modeling.ModelElement
  commentId: T:Microsoft.VisualStudio.Modeling.ModelElement
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: Microsoft.VisualStudio.Modeling.ModelElement
- uid: Microsoft.VisualStudio.Modeling.IMergeElements
  commentId: T:Microsoft.VisualStudio.Modeling.IMergeElements
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: IMergeElements
  nameWithType: IMergeElements
  fullName: Microsoft.VisualStudio.Modeling.IMergeElements
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetDomainClass()
  nameWithType: ModelElement.GetDomainClass()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete(Guid[])
  nameWithType: ModelElement.Delete(Guid[])
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  nameWithType.vb: ModelElement.Delete(Guid())
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid())
  name.vb: Delete(Guid())
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleting()
  nameWithType: ModelElement.OnDeleting()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleted()
  nameWithType: ModelElement.OnDeleted()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnResurrected()
  nameWithType: ModelElement.OnResurrected()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy()
  nameWithType: ModelElement.Copy()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy(IEnumerable<Guid>)
  nameWithType: ModelElement.Copy(IEnumerable<Guid>)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ModelElement.Copy(IEnumerable(Of Guid))
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: Copy(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnCopy(ModelElement)
  nameWithType: ModelElement.OnCopy(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeConfigure(ElementGroup)
  nameWithType: ModelElement.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.CanMerge
    nameWithType: ModelElement.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeRelate
    nameWithType: ModelElement.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeDisconnect(ModelElement)
  nameWithType: ModelElement.IMergeElements.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: IMergeElements.MergeDisconnect
    nameWithType: ModelElement.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeConfigure(ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeConfigure
    nameWithType: ModelElement.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetBaseElement(ModelElement)
  nameWithType: ModelElement.GetBaseElement(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetAllExtensions(ModelElement)
  nameWithType: ModelElement.GetAllExtensions(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension<T>(ModelElement)
  nameWithType: ModelElement.GetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.GetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: GetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.GetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Guid)
  nameWithType: ModelElement.GetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Type)
  nameWithType: ModelElement.GetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension<T>(ModelElement)
  nameWithType: ModelElement.TryGetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.TryGetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: TryGetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension<T>
    nameWithType: ModelElement.TryGetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension(Of T)
    nameWithType: ModelElement.TryGetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.TryGetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Guid)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Type)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Guid)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Type)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.AddExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension<T>(ModelElement)
  nameWithType: ModelElement.AddExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.AddExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: AddExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension<T>
    nameWithType: ModelElement.AddExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension(Of T)
    nameWithType: ModelElement.AddExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.AddExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Guid)
  nameWithType: ModelElement.AddExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Type)
  nameWithType: ModelElement.AddExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.RemoveExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.RemoveExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Guid)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Type)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Id
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Id
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Id
  nameWithType: ModelElement.Id
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Id
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Partition
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Partition
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Partition
  nameWithType: ModelElement.Partition
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Partition
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Store
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Store
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Store
  nameWithType: ModelElement.Store
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Store
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsActive
  nameWithType: ModelElement.IsActive
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleted
  nameWithType: ModelElement.IsDeleted
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleting
  nameWithType: ModelElement.IsDeleting
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  name: LocateInDiagram()
  nameWithType: ModelElementExtensions.LocateInDiagram()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  name: GetFirstShapeElement()
  nameWithType: ModelElementExtensions.GetFirstShapeElement()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  name: GetCompartment(String)
  nameWithType: ModelElementExtensions.GetCompartment(String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  name: InvalidateDiagrams()
  nameWithType: ModelElementExtensions.InvalidateDiagrams()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: LocateInDiagram(ModelElement)
  nameWithType: ModelElementExtensions.LocateInDiagram(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: ModelElementExtensions
  nameWithType: ModelElementExtensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: GetFirstShapeElement(ModelElement)
  nameWithType: ModelElementExtensions.GetFirstShapeElement(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  isExternal: true
  name: GetCompartment(ModelElement, String)
  nameWithType: ModelElementExtensions.GetCompartment(ModelElement, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement, System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: InvalidateDiagrams(ModelElement)
  nameWithType: ModelElementExtensions.InvalidateDiagrams(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  commentId: N:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  nameWithType: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  commentId: T:System.Data.Entity.Design.PluralizationServices.PluralizationService
  parent: System.Data.Entity.Design.PluralizationServices
  isExternal: true
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
- uid: System.Data.Entity.Design.PluralizationServices
  commentId: N:System.Data.Entity.Design.PluralizationServices
  isExternal: true
  name: System.Data.Entity.Design.PluralizationServices
  nameWithType: System.Data.Entity.Design.PluralizationServices
  fullName: System.Data.Entity.Design.PluralizationServices
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator
  name: ExecuteValidator
  nameWithType: ModelRoot.ExecuteValidator
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ExecuteValidator
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.FullName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.FullName
  name: FullName
  nameWithType: ModelRoot.FullName
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.FullName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Types*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Types
  name: Types
  nameWithType: ModelRoot.Types
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Types
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  name: LinkedElementCollection<ModelClass>
  nameWithType: LinkedElementCollection<ModelClass>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<Sawczyn.EFDesigner.EFModel.ModelClass>
  nameWithType.vb: LinkedElementCollection(Of ModelClass)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.ModelClass)
  name.vb: LinkedElementCollection(Of ModelClass)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  isExternal: true
  name: LinkedElementCollection<T>
  nameWithType: LinkedElementCollection<T>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<T>
  nameWithType.vb: LinkedElementCollection(Of T)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of T)
  name.vb: LinkedElementCollection(Of T)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes
  name: SpatialTypes
  nameWithType: ModelRoot.SpatialTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.SpatialTypes
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes
  name: ValidTypes
  nameWithType: ModelRoot.ValidTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidTypes
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes
  name: ValidCLRTypes
  nameWithType: ModelRoot.ValidCLRTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidCLRTypes
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes
  name: ValidIdentityAttributeTypes
  nameWithType: ModelRoot.ValidIdentityAttributeTypes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ValidIdentityAttributeTypes
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType
  name: IsValidCLRType
  nameWithType: ModelRoot.IsValidCLRType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.IsValidCLRType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion
  name: NuGetPackageVersion
  nameWithType: ModelRoot.NuGetPackageVersion
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.NuGetPackageVersion
- uid: Sawczyn.EFDesigner.EFModel.NuGetDisplay
  commentId: T:Sawczyn.EFDesigner.EFModel.NuGetDisplay
  parent: Sawczyn.EFDesigner.EFModel
  name: NuGetDisplay
  nameWithType: NuGetDisplay
  fullName: Sawczyn.EFDesigner.EFModel.NuGetDisplay
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages
  name: CanLoadNugetPackages
  nameWithType: ModelRoot.CanLoadNugetPackages
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.CanLoadNugetPackages
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum
  name: GetEntityFrameworkPackageVersionNum
  nameWithType: ModelRoot.GetEntityFrameworkPackageVersionNum
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.GetEntityFrameworkPackageVersionNum
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged
  name: OnDatabaseSchemaChanged
  nameWithType: ModelRoot.OnDatabaseSchemaChanged
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.OnDatabaseSchemaChanged
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged
  name: OnNamespaceChanged
  nameWithType: ModelRoot.OnNamespaceChanged
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.OnNamespaceChanged
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged
  name: OnCollectionClassChanged
  nameWithType: ModelRoot.OnCollectionClassChanged
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.OnCollectionClassChanged
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.#ctor
  name: ModelRoot
  nameWithType: ModelRoot.ModelRoot
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ModelRoot
- uid: Microsoft.VisualStudio.Modeling.Store
  commentId: T:Microsoft.VisualStudio.Modeling.Store
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Store
  nameWithType: Store
  fullName: Microsoft.VisualStudio.Modeling.Store
- uid: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  isExternal: true
  name: PropertyAssignment[]
  nameWithType: PropertyAssignment[]
  fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  nameWithType.vb: PropertyAssignment()
  fullName.vb: Microsoft.VisualStudio.Modeling.PropertyAssignment()
  name.vb: PropertyAssignment()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.VisualStudio.Modeling.Partition
  commentId: T:Microsoft.VisualStudio.Modeling.Partition
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Partition
  nameWithType: Partition
  fullName: Microsoft.VisualStudio.Modeling.Partition
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled
  name: LazyLoadingEnabled
  nameWithType: ModelRoot.LazyLoadingEnabled
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.LazyLoadingEnabled
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess
  name: EntityContainerAccess
  nameWithType: ModelRoot.EntityContainerAccess
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerAccess
- uid: Sawczyn.EFDesigner.EFModel.ContainerAccess
  commentId: T:Sawczyn.EFDesigner.EFModel.ContainerAccess
  parent: Sawczyn.EFDesigner.EFModel
  name: ContainerAccess
  nameWithType: ContainerAccess
  fullName: Sawczyn.EFDesigner.EFModel.ContainerAccess
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName
  name: EntityContainerName
  nameWithType: ModelRoot.EntityContainerName
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityContainerName
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace
  name: Namespace
  nameWithType: ModelRoot.Namespace
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Namespace
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType
  name: DatabaseInitializerType
  nameWithType: ModelRoot.DatabaseInitializerType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseInitializerType
- uid: Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind
  commentId: T:Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind
  parent: Sawczyn.EFDesigner.EFModel
  name: DatabaseInitializerKind
  nameWithType: DatabaseInitializerKind
  fullName: Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString
  name: ConnectionString
  nameWithType: ModelRoot.ConnectionString
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionString
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled
  name: AutomaticMigrationsEnabled
  nameWithType: ModelRoot.AutomaticMigrationsEnabled
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.AutomaticMigrationsEnabled
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory
  name: EntityOutputDirectory
  nameWithType: ModelRoot.EntityOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityOutputDirectory
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory
  name: ContextOutputDirectory
  nameWithType: ModelRoot.ContextOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ContextOutputDirectory
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory
  name: EnumOutputDirectory
  nameWithType: ModelRoot.EnumOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EnumOutputDirectory
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema
  name: DatabaseSchema
  nameWithType: ModelRoot.DatabaseSchema
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseSchema
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault
  name: ConcurrencyDefault
  nameWithType: ModelRoot.ConcurrencyDefault
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConcurrencyDefault
- uid: Sawczyn.EFDesigner.EFModel.Concurrency
  commentId: T:Sawczyn.EFDesigner.EFModel.Concurrency
  parent: Sawczyn.EFDesigner.EFModel
  name: Concurrency
  nameWithType: Concurrency
  fullName: Sawczyn.EFDesigner.EFModel.Concurrency
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker
  name: FileNameMarker
  nameWithType: ModelRoot.FileNameMarker
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.FileNameMarker
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion
  name: EntityFrameworkVersion
  nameWithType: ModelRoot.EntityFrameworkVersion
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkVersion
- uid: Sawczyn.EFDesigner.EFModel.EFVersion
  commentId: T:Sawczyn.EFDesigner.EFModel.EFVersion
  parent: Sawczyn.EFDesigner.EFModel
  name: EFVersion
  nameWithType: EFVersion
  fullName: Sawczyn.EFDesigner.EFModel.EFVersion
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName
  name: ConnectionStringName
  nameWithType: ModelRoot.ConnectionStringName
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ConnectionStringName
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains
  name: ChopMethodChains
  nameWithType: ModelRoot.ChopMethodChains
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ChopMethodChains
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy
  name: InheritanceStrategy
  nameWithType: ModelRoot.InheritanceStrategy
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.InheritanceStrategy
- uid: Sawczyn.EFDesigner.EFModel.CodeStrategy
  commentId: T:Sawczyn.EFDesigner.EFModel.CodeStrategy
  parent: Sawczyn.EFDesigner.EFModel
  name: CodeStrategy
  nameWithType: CodeStrategy
  fullName: Sawczyn.EFDesigner.EFModel.CodeStrategy
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass
  name: DefaultCollectionClass
  nameWithType: ModelRoot.DefaultCollectionClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultCollectionClass
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled
  name: ProxyGenerationEnabled
  nameWithType: ModelRoot.ProxyGenerationEnabled
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ProxyGenerationEnabled
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave
  name: TransformOnSave
  nameWithType: ModelRoot.TransformOnSave
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.TransformOnSave
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType
  name: DefaultIdentityType
  nameWithType: ModelRoot.DefaultIdentityType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DefaultIdentityType
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes
  name: ShowCascadeDeletes
  nameWithType: ModelRoot.ShowCascadeDeletes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowCascadeDeletes
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType
  name: DatabaseType
  nameWithType: ModelRoot.DatabaseType
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DatabaseType
- uid: Sawczyn.EFDesigner.EFModel.DatabaseKind
  commentId: T:Sawczyn.EFDesigner.EFModel.DatabaseKind
  parent: Sawczyn.EFDesigner.EFModel
  name: DatabaseKind
  nameWithType: DatabaseKind
  fullName: Sawczyn.EFDesigner.EFModel.DatabaseKind
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation
  name: WarnOnMissingDocumentation
  nameWithType: ModelRoot.WarnOnMissingDocumentation
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.WarnOnMissingDocumentation
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion
  name: EntityFrameworkPackageVersion
  nameWithType: ModelRoot.EntityFrameworkPackageVersion
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.EntityFrameworkPackageVersion
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory
  name: StructOutputDirectory
  nameWithType: ModelRoot.StructOutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.StructOutputDirectory
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages
  name: InstallNuGetPackages
  nameWithType: ModelRoot.InstallNuGetPackages
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.InstallNuGetPackages
- uid: Sawczyn.EFDesigner.EFModel.AutomaticAction
  commentId: T:Sawczyn.EFDesigner.EFModel.AutomaticAction
  parent: Sawczyn.EFDesigner.EFModel
  name: AutomaticAction
  nameWithType: AutomaticAction
  fullName: Sawczyn.EFDesigner.EFModel.AutomaticAction
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess
  name: DbSetAccess
  nameWithType: ModelRoot.DbSetAccess
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.DbSetAccess
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Description*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Description
  name: Description
  nameWithType: ModelRoot.Description
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Description
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Summary*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Summary
  name: Summary
  nameWithType: ModelRoot.Summary
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Summary
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner
  name: ShowWarningsInDesigner
  nameWithType: ModelRoot.ShowWarningsInDesigner
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.ShowWarningsInDesigner
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Comments*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Comments
  name: Comments
  nameWithType: ModelRoot.Comments
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Comments
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.Comment}
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.Comment}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  name: LinkedElementCollection<Comment>
  nameWithType: LinkedElementCollection<Comment>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<Sawczyn.EFDesigner.EFModel.Comment>
  nameWithType.vb: LinkedElementCollection(Of Comment)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.Comment)
  name.vb: LinkedElementCollection(Of Comment)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.Comment
    name: Comment
    nameWithType: Comment
    fullName: Sawczyn.EFDesigner.EFModel.Comment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.Comment
    name: Comment
    nameWithType: Comment
    fullName: Sawczyn.EFDesigner.EFModel.Comment
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Enums*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Enums
  name: Enums
  nameWithType: ModelRoot.Enums
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Enums
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelEnum}
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelEnum}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  name: LinkedElementCollection<ModelEnum>
  nameWithType: LinkedElementCollection<ModelEnum>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<Sawczyn.EFDesigner.EFModel.ModelEnum>
  nameWithType.vb: LinkedElementCollection(Of ModelEnum)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.ModelEnum)
  name.vb: LinkedElementCollection(Of ModelEnum)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelEnum
    name: ModelEnum
    nameWithType: ModelEnum
    fullName: Sawczyn.EFDesigner.EFModel.ModelEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelEnum
    name: ModelEnum
    nameWithType: ModelEnum
    fullName: Sawczyn.EFDesigner.EFModel.ModelEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.Classes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.Classes
  name: Classes
  nameWithType: ModelRoot.Classes
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.Classes
- uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge
  name: CanMerge
  nameWithType: ModelRoot.CanMerge
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.CanMerge
- uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
  commentId: T:Microsoft.VisualStudio.Modeling.ProtoElementBase
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ProtoElementBase
  nameWithType: ProtoElementBase
  fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
- uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
  commentId: T:Microsoft.VisualStudio.Modeling.ElementGroupPrototype
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ElementGroupPrototype
  nameWithType: ElementGroupPrototype
  fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate
  name: MergeRelate
  nameWithType: ModelRoot.MergeRelate
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeRelate
- uid: Microsoft.VisualStudio.Modeling.ElementGroup
  commentId: T:Microsoft.VisualStudio.Modeling.ElementGroup
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ElementGroup
  nameWithType: ElementGroup
  fullName: Microsoft.VisualStudio.Modeling.ElementGroup
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeDisconnect(ModelElement)
  nameWithType: ModelElement.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect
  name: MergeDisconnect
  nameWithType: ModelRoot.MergeDisconnect
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot.MergeDisconnect
