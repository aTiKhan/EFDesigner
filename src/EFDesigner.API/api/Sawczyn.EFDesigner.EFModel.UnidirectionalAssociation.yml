### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  commentId: T:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  id: UnidirectionalAssociation
  parent: Sawczyn.EFDesigner.EFModel
  children:
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DomainClassId
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSourceDomainRoleId
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget
  - Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTargetDomainRoleId
  langs:
  - csharp
  - vb
  name: UnidirectionalAssociation
  nameWithType: UnidirectionalAssociation
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  type: Class
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalAssociation
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1812
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDomainRelationship UnidirectionalAssociation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainModelOwner(typeof(EFModelDomainModel))]

      [CLSCompliant(true)]

      [DomainRelationship(AllowsDuplicates = true)]

      [DomainObjectId("71aa98ea-ecd0-4096-b185-5c63efa364eb")]

      public class UnidirectionalAssociation : Association, IMergeElements, IDisplaysWarning
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainModelOwner(GetType(EFModelDomainModel))>

      <CLSCompliant(True)>

      <DomainRelationship(AllowsDuplicates:=True)>

      <DomainObjectId("71aa98ea-ecd0-4096-b185-5c63efa364eb")>

      Public Class UnidirectionalAssociation
          Inherits Association
          Implements IMergeElements, IDisplaysWarning
  inheritance:
  - System.Object
  - Microsoft.VisualStudio.Modeling.ModelElement
  - Microsoft.VisualStudio.Modeling.ElementLink
  - Sawczyn.EFDesigner.EFModel.Association
  implements:
  - Microsoft.VisualStudio.Modeling.IMergeElements
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  inheritedMembers:
  - Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
  - Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
  - Sawczyn.EFDesigner.EFModel.Association.hasWarning
  - Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
  - Sawczyn.EFDesigner.EFModel.Association.ResetWarning
  - Sawczyn.EFDesigner.EFModel.Association.RedrawItem
  - Sawczyn.EFDesigner.EFModel.Association.SourceDomainRoleId
  - Sawczyn.EFDesigner.EFModel.Association.GetSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.Association.TargetDomainRoleId
  - Sawczyn.EFDesigner.EFModel.Association.GetTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicity
  - Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicity
  - Sawczyn.EFDesigner.EFModel.Association.TargetPropertyNameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetPropertyName
  - Sawczyn.EFDesigner.EFModel.Association.PersistentDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.Persistent
  - Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplayDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplay
  - Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplayDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplay
  - Sawczyn.EFDesigner.EFModel.Association.SourceDeleteActionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.SourceDeleteAction
  - Sawczyn.EFDesigner.EFModel.Association.TargetDeleteActionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetDeleteAction
  - Sawczyn.EFDesigner.EFModel.Association.CollectionClassDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.CollectionClass
  - Sawczyn.EFDesigner.EFModel.Association.TargetDescriptionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetDescription
  - Sawczyn.EFDesigner.EFModel.Association.TargetSummaryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetSummary
  - Sawczyn.EFDesigner.EFModel.Association.SummaryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.Summary
  - Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTrackingDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTracking
  - Sawczyn.EFDesigner.EFModel.Association.SourceRoleDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.SourceRole
  - Sawczyn.EFDesigner.EFModel.Association.TargetRoleDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetRole
  - Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocationDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocation
  - Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributesDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributes
  - Sawczyn.EFDesigner.EFModel.Association.TargetDisplayTextDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetDisplayText
  - Sawczyn.EFDesigner.EFModel.Association.TargetAutoPropertyDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.Association.TargetAutoProperty
  - Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
  - Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink)
  - Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex(Microsoft.VisualStudio.Modeling.DomainRoleInfo,System.Int32)
  - Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
  - Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
  - Microsoft.VisualStudio.Modeling.ElementLink.LinkedElements
  - Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  - Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.Id
  - Microsoft.VisualStudio.Modeling.ModelElement.Partition
  - Microsoft.VisualStudio.Modeling.ModelElement.Store
  - Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: Microsoft.VisualStudio.Modeling.DomainRelationshipAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainRelationshipAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowsDuplicates
      type: System.Boolean
      value: true
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 71aa98ea-ecd0-4096-b185-5c63efa364eb
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DomainClassId
  commentId: F:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DomainClassId
  id: DomainClassId
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: DomainClassId
  nameWithType: UnidirectionalAssociation.DomainClassId
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DomainClassId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DomainClassId
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1825
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nUnidirectionalAssociation domain class Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DomainClassId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DomainClassId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  id: '#ctor(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)'
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalAssociation(ModelClass, ModelClass)
  nameWithType: UnidirectionalAssociation.UnidirectionalAssociation(ModelClass, ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Sawczyn.EFDesigner.EFModel.ModelClass, Sawczyn.EFDesigner.EFModel.ModelClass)
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1834
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\nCreates a UnidirectionalAssociation link in the same Partition as the given ModelClass\n"
  example: []
  syntax:
    content: public UnidirectionalAssociation(ModelClass source, ModelClass target)
    parameters:
    - id: source
      type: Sawczyn.EFDesigner.EFModel.ModelClass
      description: ModelClass to use as the source of the relationship.
    - id: target
      type: Sawczyn.EFDesigner.EFModel.ModelClass
      description: ModelClass to use as the target of the relationship.
    content.vb: Public Sub New(source As ModelClass, target As ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalAssociation(Store, RoleAssignment[])
  nameWithType: UnidirectionalAssociation.UnidirectionalAssociation(Store, RoleAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.RoleAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1844
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public UnidirectionalAssociation(Store store, params RoleAssignment[] roleAssignments)
    parameters:
    - id: store
      type: Microsoft.VisualStudio.Modeling.Store
      description: Store where new link is to be created.
    - id: roleAssignments
      type: Microsoft.VisualStudio.Modeling.RoleAssignment[]
      description: List of relationship role assignments.
    content.vb: Public Sub New(store As Store, ParamArray roleAssignments As RoleAssignment())
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor*
  nameWithType.vb: UnidirectionalAssociation.UnidirectionalAssociation(Store, RoleAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.RoleAssignment())
  name.vb: UnidirectionalAssociation(Store, RoleAssignment())
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalAssociation(Store, RoleAssignment[], PropertyAssignment[])
  nameWithType: UnidirectionalAssociation.UnidirectionalAssociation(Store, RoleAssignment[], PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.RoleAssignment[], Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1855
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public UnidirectionalAssociation(Store store, RoleAssignment[] roleAssignments, PropertyAssignment[] propertyAssignments)
    parameters:
    - id: store
      type: Microsoft.VisualStudio.Modeling.Store
      description: Store where new link is to be created.
    - id: roleAssignments
      type: Microsoft.VisualStudio.Modeling.RoleAssignment[]
      description: List of relationship role assignments.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of properties assignments to set on the new link.
    content.vb: Public Sub New(store As Store, roleAssignments As RoleAssignment(), propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor*
  nameWithType.vb: UnidirectionalAssociation.UnidirectionalAssociation(Store, RoleAssignment(), PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.RoleAssignment(), Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: UnidirectionalAssociation(Store, RoleAssignment(), PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalAssociation(Partition, RoleAssignment[])
  nameWithType: UnidirectionalAssociation.UnidirectionalAssociation(Partition, RoleAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.RoleAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1865
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public UnidirectionalAssociation(Partition partition, params RoleAssignment[] roleAssignments)
    parameters:
    - id: partition
      type: Microsoft.VisualStudio.Modeling.Partition
      description: Partition where new link is to be created.
    - id: roleAssignments
      type: Microsoft.VisualStudio.Modeling.RoleAssignment[]
      description: List of relationship role assignments.
    content.vb: Public Sub New(partition As Partition, ParamArray roleAssignments As RoleAssignment())
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor*
  nameWithType.vb: UnidirectionalAssociation.UnidirectionalAssociation(Partition, RoleAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.RoleAssignment())
  name.vb: UnidirectionalAssociation(Partition, RoleAssignment())
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalAssociation(Partition, RoleAssignment[], PropertyAssignment[])
  nameWithType: UnidirectionalAssociation.UnidirectionalAssociation(Partition, RoleAssignment[], PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.RoleAssignment[], Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1876
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public UnidirectionalAssociation(Partition partition, RoleAssignment[] roleAssignments, PropertyAssignment[] propertyAssignments)
    parameters:
    - id: partition
      type: Microsoft.VisualStudio.Modeling.Partition
      description: Partition where new link is to be created.
    - id: roleAssignments
      type: Microsoft.VisualStudio.Modeling.RoleAssignment[]
      description: List of relationship role assignments.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of properties assignments to set on the new link.
    content.vb: Public Sub New(partition As Partition, roleAssignments As RoleAssignment(), propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor*
  nameWithType.vb: UnidirectionalAssociation.UnidirectionalAssociation(Partition, RoleAssignment(), PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.RoleAssignment(), Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: UnidirectionalAssociation(Partition, RoleAssignment(), PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSourceDomainRoleId
  commentId: F:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSourceDomainRoleId
  id: UnidirectionalSourceDomainRoleId
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalSourceDomainRoleId
  nameWithType: UnidirectionalAssociation.UnidirectionalSourceDomainRoleId
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSourceDomainRoleId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalSourceDomainRoleId
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1886
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nUnidirectionalSource domain role Id.\n"
  example: []
  syntax:
    content: public static readonly Guid UnidirectionalSourceDomainRoleId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly UnidirectionalSourceDomainRoleId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource
  commentId: P:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource
  id: UnidirectionalSource
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalSource
  nameWithType: UnidirectionalAssociation.UnidirectionalSource
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalSource
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1891
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDomainRole UnidirectionalSource\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainRole(DomainRoleOrder.Source, PropertyName = "UnidirectionalTargets", PropertyDisplayNameKey = "Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.PropertyDisplayName", PropagatesCopy = PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = Multiplicity.ZeroMany)]

      [DomainObjectId("2ece6e4a-4505-4e70-8f12-59525acae945")]

      public virtual ModelClass UnidirectionalSource { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainRole(DomainRoleOrder.Source, PropertyName:="UnidirectionalTargets", PropertyDisplayNameKey:="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.PropertyDisplayName", PropagatesCopy:=PropagatesCopyOption.DoNotPropagateCopy, Multiplicity:=Multiplicity.ZeroMany)>

      <DomainObjectId("2ece6e4a-4505-4e70-8f12-59525acae945")>

      Public Overridable Property UnidirectionalSource As ModelClass
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainRoleAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainRoleAttribute.#ctor(Microsoft.VisualStudio.Modeling.DomainRoleOrder)
    arguments:
    - type: Microsoft.VisualStudio.Modeling.DomainRoleOrder
      value: 0
    namedArguments:
    - name: PropertyName
      type: System.String
      value: UnidirectionalTargets
    - name: PropertyDisplayNameKey
      type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.PropertyDisplayName
    - name: PropagatesCopy
      type: Microsoft.VisualStudio.Modeling.PropagatesCopyOption
      value: 0
    - name: Multiplicity
      type: Microsoft.VisualStudio.Modeling.Multiplicity
      value: 0
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 2ece6e4a-4505-4e70-8f12-59525acae945
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  id: GetUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: GetUnidirectionalSources(ModelClass)
  nameWithType: UnidirectionalAssociation.GetUnidirectionalSources(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetUnidirectionalSources
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1914
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of UnidirectionalSources.\n"
  example: []
  syntax:
    content: public static LinkedElementCollection<ModelClass> GetUnidirectionalSources(ModelClass element)
    parameters:
    - id: element
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Shared Function GetUnidirectionalSources(element As ModelClass) As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source
  commentId: P:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source
  id: Source
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: UnidirectionalAssociation.Source
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Source
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1926
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets the element playing UnidirectionalSource domain role.\n"
  example: []
  syntax:
    content: public override ModelClass Source { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    content.vb: Public Overrides Property Source As ModelClass
  overridden: Sawczyn.EFDesigner.EFModel.Association.Source
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTargetDomainRoleId
  commentId: F:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTargetDomainRoleId
  id: UnidirectionalTargetDomainRoleId
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalTargetDomainRoleId
  nameWithType: UnidirectionalAssociation.UnidirectionalTargetDomainRoleId
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTargetDomainRoleId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalTargetDomainRoleId
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1946
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nUnidirectionalTarget domain role Id.\n"
  example: []
  syntax:
    content: public static readonly Guid UnidirectionalTargetDomainRoleId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly UnidirectionalTargetDomainRoleId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget
  commentId: P:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget
  id: UnidirectionalTarget
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: UnidirectionalTarget
  nameWithType: UnidirectionalAssociation.UnidirectionalTarget
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalTarget
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1951
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDomainRole UnidirectionalTarget\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainRole(DomainRoleOrder.Target, PropertyName = "UnidirectionalSources", PropertyDisplayNameKey = "Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.PropertyDisplayName", PropagatesCopy = PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = Multiplicity.ZeroMany)]

      [DomainObjectId("0cd8b649-09aa-4c6b-9e7a-95088c246e5f")]

      public virtual ModelClass UnidirectionalTarget { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainRole(DomainRoleOrder.Target, PropertyName:="UnidirectionalSources", PropertyDisplayNameKey:="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.PropertyDisplayName", PropagatesCopy:=PropagatesCopyOption.DoNotPropagateCopy, Multiplicity:=Multiplicity.ZeroMany)>

      <DomainObjectId("0cd8b649-09aa-4c6b-9e7a-95088c246e5f")>

      Public Overridable Property UnidirectionalTarget As ModelClass
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainRoleAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainRoleAttribute.#ctor(Microsoft.VisualStudio.Modeling.DomainRoleOrder)
    arguments:
    - type: Microsoft.VisualStudio.Modeling.DomainRoleOrder
      value: 1
    namedArguments:
    - name: PropertyName
      type: System.String
      value: UnidirectionalSources
    - name: PropertyDisplayNameKey
      type: System.String
      value: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.PropertyDisplayName
    - name: PropagatesCopy
      type: Microsoft.VisualStudio.Modeling.PropagatesCopyOption
      value: 0
    - name: Multiplicity
      type: Microsoft.VisualStudio.Modeling.Multiplicity
      value: 0
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 0cd8b649-09aa-4c6b-9e7a-95088c246e5f
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  id: GetUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: GetUnidirectionalTargets(ModelClass)
  nameWithType: UnidirectionalAssociation.GetUnidirectionalTargets(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetUnidirectionalTargets
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1974
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of UnidirectionalTargets.\n"
  example: []
  syntax:
    content: public static LinkedElementCollection<ModelClass> GetUnidirectionalTargets(ModelClass element)
    parameters:
    - id: element
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Shared Function GetUnidirectionalTargets(element As ModelClass) As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target
  commentId: P:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target
  id: Target
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: UnidirectionalAssociation.Target
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Target
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 1986
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets the element playing UnidirectionalTarget domain role.\n"
  example: []
  syntax:
    content: public override ModelClass Target { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    content.vb: Public Overrides Property Target As ModelClass
  overridden: Sawczyn.EFDesigner.EFModel.Association.Target
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  id: GetLinksToUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: GetLinksToUnidirectionalTargets(ModelClass)
  nameWithType: UnidirectionalAssociation.GetLinksToUnidirectionalTargets(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetLinksToUnidirectionalTargets
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 2005
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGet the list of UnidirectionalAssociation links to a ModelClass.\n"
  example: []
  syntax:
    content: public static ReadOnlyCollection<UnidirectionalAssociation> GetLinksToUnidirectionalTargets(ModelClass unidirectionalSourceInstance)
    parameters:
    - id: unidirectionalSourceInstance
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation}
    content.vb: Public Shared Function GetLinksToUnidirectionalTargets(unidirectionalSourceInstance As ModelClass) As ReadOnlyCollection(Of UnidirectionalAssociation)
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  id: GetLinksToUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: GetLinksToUnidirectionalSources(ModelClass)
  nameWithType: UnidirectionalAssociation.GetLinksToUnidirectionalSources(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetLinksToUnidirectionalSources
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 2016
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGet the list of UnidirectionalAssociation links to a ModelClass.\n"
  example: []
  syntax:
    content: public static ReadOnlyCollection<UnidirectionalAssociation> GetLinksToUnidirectionalSources(ModelClass unidirectionalTargetInstance)
    parameters:
    - id: unidirectionalTargetInstance
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation}
    content.vb: Public Shared Function GetLinksToUnidirectionalSources(unidirectionalTargetInstance As ModelClass) As ReadOnlyCollection(Of UnidirectionalAssociation)
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  id: GetLinks(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  langs:
  - csharp
  - vb
  name: GetLinks(ModelClass, ModelClass)
  nameWithType: UnidirectionalAssociation.GetLinks(ModelClass, ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks(Sawczyn.EFDesigner.EFModel.ModelClass, Sawczyn.EFDesigner.EFModel.ModelClass)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainRelationships.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetLinks
    path: ../Dsl/GeneratedCode/DomainRelationships.cs
    startLine: 2028
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGet any UnidirectionalAssociation links between a given ModelClass and a ModelClass.\n"
  example: []
  syntax:
    content: public static ReadOnlyCollection<UnidirectionalAssociation> GetLinks(ModelClass source, ModelClass target)
    parameters:
    - id: source
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    - id: target
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation}
    content.vb: Public Shared Function GetLinks(source As ModelClass, target As ModelClass) As ReadOnlyCollection(Of UnidirectionalAssociation)
  overload: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sawczyn.EFDesigner.EFModel
  commentId: N:Sawczyn.EFDesigner.EFModel
  name: Sawczyn.EFDesigner.EFModel
  nameWithType: Sawczyn.EFDesigner.EFModel
  fullName: Sawczyn.EFDesigner.EFModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualStudio.Modeling.ModelElement
  commentId: T:Microsoft.VisualStudio.Modeling.ModelElement
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: Microsoft.VisualStudio.Modeling.ModelElement
- uid: Microsoft.VisualStudio.Modeling.ElementLink
  commentId: T:Microsoft.VisualStudio.Modeling.ElementLink
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ElementLink
  nameWithType: ElementLink
  fullName: Microsoft.VisualStudio.Modeling.ElementLink
- uid: Sawczyn.EFDesigner.EFModel.Association
  commentId: T:Sawczyn.EFDesigner.EFModel.Association
  parent: Sawczyn.EFDesigner.EFModel
  name: Association
  nameWithType: Association
  fullName: Sawczyn.EFDesigner.EFModel.Association
- uid: Microsoft.VisualStudio.Modeling.IMergeElements
  commentId: T:Microsoft.VisualStudio.Modeling.IMergeElements
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: IMergeElements
  nameWithType: IMergeElements
  fullName: Microsoft.VisualStudio.Modeling.IMergeElements
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  commentId: T:Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  parent: Sawczyn.EFDesigner.EFModel
  name: IDisplaysWarning
  nameWithType: IDisplaysWarning
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
- uid: Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetSourceMultiplicityDisplayValue()
  nameWithType: Association.GetSourceMultiplicityDisplayValue()
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
    name: GetSourceMultiplicityDisplayValue
    nameWithType: Association.GetSourceMultiplicityDisplayValue
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
    name: GetSourceMultiplicityDisplayValue
    nameWithType: Association.GetSourceMultiplicityDisplayValue
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetSourceMultiplicityDisplayValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetTargetMultiplicityDisplayValue()
  nameWithType: Association.GetTargetMultiplicityDisplayValue()
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
    name: GetTargetMultiplicityDisplayValue
    nameWithType: Association.GetTargetMultiplicityDisplayValue
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
    name: GetTargetMultiplicityDisplayValue
    nameWithType: Association.GetTargetMultiplicityDisplayValue
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetTargetMultiplicityDisplayValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.hasWarning
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.hasWarning
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: hasWarning
  nameWithType: Association.hasWarning
  fullName: Sawczyn.EFDesigner.EFModel.Association.hasWarning
- uid: Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetHasWarningValue()
  nameWithType: Association.GetHasWarningValue()
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
    name: GetHasWarningValue
    nameWithType: Association.GetHasWarningValue
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
    name: GetHasWarningValue
    nameWithType: Association.GetHasWarningValue
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetHasWarningValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.ResetWarning
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.ResetWarning
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: ResetWarning()
  nameWithType: Association.ResetWarning()
  fullName: Sawczyn.EFDesigner.EFModel.Association.ResetWarning()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.ResetWarning
    name: ResetWarning
    nameWithType: Association.ResetWarning
    fullName: Sawczyn.EFDesigner.EFModel.Association.ResetWarning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.ResetWarning
    name: ResetWarning
    nameWithType: Association.ResetWarning
    fullName: Sawczyn.EFDesigner.EFModel.Association.ResetWarning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.RedrawItem
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.RedrawItem
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: RedrawItem()
  nameWithType: Association.RedrawItem()
  fullName: Sawczyn.EFDesigner.EFModel.Association.RedrawItem()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.RedrawItem
    name: RedrawItem
    nameWithType: Association.RedrawItem
    fullName: Sawczyn.EFDesigner.EFModel.Association.RedrawItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.RedrawItem
    name: RedrawItem
    nameWithType: Association.RedrawItem
    fullName: Sawczyn.EFDesigner.EFModel.Association.RedrawItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceDomainRoleId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.SourceDomainRoleId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceDomainRoleId
  nameWithType: Association.SourceDomainRoleId
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceDomainRoleId
- uid: Sawczyn.EFDesigner.EFModel.Association.GetSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetSources(ModelClass)
  nameWithType: Association.GetSources(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetSources(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetSources
    nameWithType: Association.GetSources
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetSources
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetSources(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetSources
    nameWithType: Association.GetSources
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetSources
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDomainRoleId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetDomainRoleId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDomainRoleId
  nameWithType: Association.TargetDomainRoleId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDomainRoleId
- uid: Sawczyn.EFDesigner.EFModel.Association.GetTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetTargets(ModelClass)
  nameWithType: Association.GetTargets(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetTargets
    nameWithType: Association.GetTargets
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetTargets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetTargets
    nameWithType: Association.GetTargets
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetTargets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceMultiplicityDomainPropertyId
  nameWithType: Association.SourceMultiplicityDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicity
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicity
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceMultiplicity
  nameWithType: Association.SourceMultiplicity
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicity
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetMultiplicityDomainPropertyId
  nameWithType: Association.TargetMultiplicityDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicity
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicity
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetMultiplicity
  nameWithType: Association.TargetMultiplicity
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicity
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetPropertyNameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetPropertyNameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetPropertyNameDomainPropertyId
  nameWithType: Association.TargetPropertyNameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetPropertyNameDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetPropertyName
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetPropertyName
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetPropertyName
  nameWithType: Association.TargetPropertyName
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetPropertyName
- uid: Sawczyn.EFDesigner.EFModel.Association.PersistentDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.PersistentDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: PersistentDomainPropertyId
  nameWithType: Association.PersistentDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.PersistentDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.Persistent
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.Persistent
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: Persistent
  nameWithType: Association.Persistent
  fullName: Sawczyn.EFDesigner.EFModel.Association.Persistent
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplayDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplayDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceMultiplicityDisplayDomainPropertyId
  nameWithType: Association.SourceMultiplicityDisplayDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplayDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplay
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplay
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceMultiplicityDisplay
  nameWithType: Association.SourceMultiplicityDisplay
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceMultiplicityDisplay
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplayDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplayDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetMultiplicityDisplayDomainPropertyId
  nameWithType: Association.TargetMultiplicityDisplayDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplayDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplay
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplay
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetMultiplicityDisplay
  nameWithType: Association.TargetMultiplicityDisplay
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetMultiplicityDisplay
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceDeleteActionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.SourceDeleteActionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceDeleteActionDomainPropertyId
  nameWithType: Association.SourceDeleteActionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceDeleteActionDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceDeleteAction
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.SourceDeleteAction
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceDeleteAction
  nameWithType: Association.SourceDeleteAction
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceDeleteAction
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDeleteActionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetDeleteActionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDeleteActionDomainPropertyId
  nameWithType: Association.TargetDeleteActionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDeleteActionDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDeleteAction
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetDeleteAction
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDeleteAction
  nameWithType: Association.TargetDeleteAction
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDeleteAction
- uid: Sawczyn.EFDesigner.EFModel.Association.CollectionClassDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.CollectionClassDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: CollectionClassDomainPropertyId
  nameWithType: Association.CollectionClassDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.CollectionClassDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.CollectionClass
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.CollectionClass
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: CollectionClass
  nameWithType: Association.CollectionClass
  fullName: Sawczyn.EFDesigner.EFModel.Association.CollectionClass
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDescriptionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetDescriptionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDescriptionDomainPropertyId
  nameWithType: Association.TargetDescriptionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDescriptionDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDescription
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetDescription
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDescription
  nameWithType: Association.TargetDescription
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDescription
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetSummaryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetSummaryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetSummaryDomainPropertyId
  nameWithType: Association.TargetSummaryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetSummaryDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetSummary
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetSummary
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetSummary
  nameWithType: Association.TargetSummary
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetSummary
- uid: Sawczyn.EFDesigner.EFModel.Association.SummaryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.SummaryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SummaryDomainPropertyId
  nameWithType: Association.SummaryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.SummaryDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.Summary
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.Summary
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: Summary
  nameWithType: Association.Summary
  fullName: Sawczyn.EFDesigner.EFModel.Association.Summary
- uid: Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTrackingDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTrackingDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: IsCollectionClassTrackingDomainPropertyId
  nameWithType: Association.IsCollectionClassTrackingDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTrackingDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTracking
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTracking
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: IsCollectionClassTracking
  nameWithType: Association.IsCollectionClassTracking
  fullName: Sawczyn.EFDesigner.EFModel.Association.IsCollectionClassTracking
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceRoleDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.SourceRoleDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceRoleDomainPropertyId
  nameWithType: Association.SourceRoleDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceRoleDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.SourceRole
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.SourceRole
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: SourceRole
  nameWithType: Association.SourceRole
  fullName: Sawczyn.EFDesigner.EFModel.Association.SourceRole
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetRoleDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetRoleDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetRoleDomainPropertyId
  nameWithType: Association.TargetRoleDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetRoleDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetRole
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetRole
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetRole
  nameWithType: Association.TargetRole
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetRole
- uid: Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocationDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocationDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: ForeignKeyLocationDomainPropertyId
  nameWithType: Association.ForeignKeyLocationDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocationDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocation
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocation
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: ForeignKeyLocation
  nameWithType: Association.ForeignKeyLocation
  fullName: Sawczyn.EFDesigner.EFModel.Association.ForeignKeyLocation
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributesDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributesDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetCustomAttributesDomainPropertyId
  nameWithType: Association.TargetCustomAttributesDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributesDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributes
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetCustomAttributes
  nameWithType: Association.TargetCustomAttributes
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetCustomAttributes
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDisplayTextDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetDisplayTextDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDisplayTextDomainPropertyId
  nameWithType: Association.TargetDisplayTextDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDisplayTextDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetDisplayText
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetDisplayText
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetDisplayText
  nameWithType: Association.TargetDisplayText
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetDisplayText
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetAutoPropertyDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.Association.TargetAutoPropertyDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetAutoPropertyDomainPropertyId
  nameWithType: Association.TargetAutoPropertyDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetAutoPropertyDomainPropertyId
- uid: Sawczyn.EFDesigner.EFModel.Association.TargetAutoProperty
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.TargetAutoProperty
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: TargetAutoProperty
  nameWithType: Association.TargetAutoProperty
  fullName: Sawczyn.EFDesigner.EFModel.Association.TargetAutoProperty
- uid: Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetLinksToTargets(ModelClass)
  nameWithType: Association.GetLinksToTargets(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetLinksToTargets
    nameWithType: Association.GetLinksToTargets
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetLinksToTargets
    nameWithType: Association.GetLinksToTargets
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetLinksToTargets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: GetLinksToSources(ModelClass)
  nameWithType: Association.GetLinksToSources(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources(Sawczyn.EFDesigner.EFModel.ModelClass)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetLinksToSources
    nameWithType: Association.GetLinksToSources
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: GetLinksToSources
    nameWithType: Association.GetLinksToSources
    fullName: Sawczyn.EFDesigner.EFModel.Association.GetLinksToSources
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
  commentId: M:Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
  parent: Microsoft.VisualStudio.Modeling.ElementLink
  isExternal: true
  name: GetDomainRelationship()
  nameWithType: ElementLink.GetDomainRelationship()
  fullName: Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
    name: GetDomainRelationship
    nameWithType: ElementLink.GetDomainRelationship
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
    name: GetDomainRelationship
    nameWithType: ElementLink.GetDomainRelationship
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.GetDomainRelationship
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink)
  commentId: M:Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink)
  parent: Microsoft.VisualStudio.Modeling.ElementLink
  isExternal: true
  name: MoveBefore(DomainRoleInfo, ElementLink)
  nameWithType: ElementLink.MoveBefore(DomainRoleInfo, ElementLink)
  fullName: Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink)
    name: MoveBefore
    nameWithType: ElementLink.MoveBefore
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink)
    name: MoveBefore
    nameWithType: ElementLink.MoveBefore
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.MoveBefore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex(Microsoft.VisualStudio.Modeling.DomainRoleInfo,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex(Microsoft.VisualStudio.Modeling.DomainRoleInfo,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ElementLink
  isExternal: true
  name: MoveToIndex(DomainRoleInfo, Int32)
  nameWithType: ElementLink.MoveToIndex(DomainRoleInfo, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex(Microsoft.VisualStudio.Modeling.DomainRoleInfo, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex(Microsoft.VisualStudio.Modeling.DomainRoleInfo,System.Int32)
    name: MoveToIndex
    nameWithType: ElementLink.MoveToIndex
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex(Microsoft.VisualStudio.Modeling.DomainRoleInfo,System.Int32)
    name: MoveToIndex
    nameWithType: ElementLink.MoveToIndex
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.MoveToIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ElementLink
  isExternal: true
  name: OnRolePlayerChanging(DomainRoleInfo, ModelElement, ModelElement, Int32)
  nameWithType: ElementLink.OnRolePlayerChanging(DomainRoleInfo, ModelElement, ModelElement, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ModelElement, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
    name: OnRolePlayerChanging
    nameWithType: ElementLink.OnRolePlayerChanging
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
    name: OnRolePlayerChanging
    nameWithType: ElementLink.OnRolePlayerChanging
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ElementLink
  isExternal: true
  name: OnRolePlayerChanged(DomainRoleInfo, ModelElement, ModelElement, Int32)
  nameWithType: ElementLink.OnRolePlayerChanged(DomainRoleInfo, ModelElement, ModelElement, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ModelElement, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
    name: OnRolePlayerChanged
    nameWithType: ElementLink.OnRolePlayerChanged
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)
    name: OnRolePlayerChanged
    nameWithType: ElementLink.OnRolePlayerChanged
    fullName: Microsoft.VisualStudio.Modeling.ElementLink.OnRolePlayerChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ElementLink.LinkedElements
  commentId: P:Microsoft.VisualStudio.Modeling.ElementLink.LinkedElements
  parent: Microsoft.VisualStudio.Modeling.ElementLink
  isExternal: true
  name: LinkedElements
  nameWithType: ElementLink.LinkedElements
  fullName: Microsoft.VisualStudio.Modeling.ElementLink.LinkedElements
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetDomainClass()
  nameWithType: ModelElement.GetDomainClass()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete(Guid[])
  nameWithType: ModelElement.Delete(Guid[])
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  nameWithType.vb: ModelElement.Delete(Guid())
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid())
  name.vb: Delete(Guid())
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleting()
  nameWithType: ModelElement.OnDeleting()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleted()
  nameWithType: ModelElement.OnDeleted()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnResurrected()
  nameWithType: ModelElement.OnResurrected()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy()
  nameWithType: ModelElement.Copy()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy(IEnumerable<Guid>)
  nameWithType: ModelElement.Copy(IEnumerable<Guid>)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ModelElement.Copy(IEnumerable(Of Guid))
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: Copy(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnCopy(ModelElement)
  nameWithType: ModelElement.OnCopy(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeDisconnect(ModelElement)
  nameWithType: ModelElement.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeConfigure(ElementGroup)
  nameWithType: ModelElement.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.CanMerge
    nameWithType: ModelElement.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeRelate
    nameWithType: ModelElement.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeDisconnect(ModelElement)
  nameWithType: ModelElement.IMergeElements.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: IMergeElements.MergeDisconnect
    nameWithType: ModelElement.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeConfigure(ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeConfigure
    nameWithType: ModelElement.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetBaseElement(ModelElement)
  nameWithType: ModelElement.GetBaseElement(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetAllExtensions(ModelElement)
  nameWithType: ModelElement.GetAllExtensions(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension<T>(ModelElement)
  nameWithType: ModelElement.GetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.GetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: GetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.GetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Guid)
  nameWithType: ModelElement.GetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Type)
  nameWithType: ModelElement.GetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension<T>(ModelElement)
  nameWithType: ModelElement.TryGetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.TryGetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: TryGetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension<T>
    nameWithType: ModelElement.TryGetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension(Of T)
    nameWithType: ModelElement.TryGetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.TryGetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Guid)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Type)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Guid)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Type)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.AddExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension<T>(ModelElement)
  nameWithType: ModelElement.AddExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.AddExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: AddExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension<T>
    nameWithType: ModelElement.AddExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension(Of T)
    nameWithType: ModelElement.AddExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.AddExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Guid)
  nameWithType: ModelElement.AddExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Type)
  nameWithType: ModelElement.AddExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.RemoveExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.RemoveExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Guid)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Type)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Id
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Id
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Id
  nameWithType: ModelElement.Id
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Id
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Partition
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Partition
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Partition
  nameWithType: ModelElement.Partition
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Partition
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Store
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Store
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Store
  nameWithType: ModelElement.Store
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Store
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsActive
  nameWithType: ModelElement.IsActive
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleted
  nameWithType: ModelElement.IsDeleted
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleting
  nameWithType: ModelElement.IsDeleting
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  name: LocateInDiagram()
  nameWithType: ModelElementExtensions.LocateInDiagram()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  name: GetFirstShapeElement()
  nameWithType: ModelElementExtensions.GetFirstShapeElement()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  name: GetCompartment(String)
  nameWithType: ModelElementExtensions.GetCompartment(String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  name: InvalidateDiagrams()
  nameWithType: ModelElementExtensions.InvalidateDiagrams()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: LocateInDiagram(ModelElement)
  nameWithType: ModelElementExtensions.LocateInDiagram(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: ModelElementExtensions
  nameWithType: ModelElementExtensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: GetFirstShapeElement(ModelElement)
  nameWithType: ModelElementExtensions.GetFirstShapeElement(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  isExternal: true
  name: GetCompartment(ModelElement, String)
  nameWithType: ModelElementExtensions.GetCompartment(ModelElement, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement, System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: InvalidateDiagrams(ModelElement)
  nameWithType: ModelElementExtensions.InvalidateDiagrams(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  commentId: N:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  nameWithType: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.#ctor
  name: UnidirectionalAssociation
  nameWithType: UnidirectionalAssociation.UnidirectionalAssociation
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalAssociation
- uid: Sawczyn.EFDesigner.EFModel.ModelClass
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelClass
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelClass
  nameWithType: ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass
- uid: Microsoft.VisualStudio.Modeling.Store
  commentId: T:Microsoft.VisualStudio.Modeling.Store
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Store
  nameWithType: Store
  fullName: Microsoft.VisualStudio.Modeling.Store
- uid: Microsoft.VisualStudio.Modeling.RoleAssignment[]
  isExternal: true
  name: RoleAssignment[]
  nameWithType: RoleAssignment[]
  fullName: Microsoft.VisualStudio.Modeling.RoleAssignment[]
  nameWithType.vb: RoleAssignment()
  fullName.vb: Microsoft.VisualStudio.Modeling.RoleAssignment()
  name.vb: RoleAssignment()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.RoleAssignment
    name: RoleAssignment
    nameWithType: RoleAssignment
    fullName: Microsoft.VisualStudio.Modeling.RoleAssignment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.RoleAssignment
    name: RoleAssignment
    nameWithType: RoleAssignment
    fullName: Microsoft.VisualStudio.Modeling.RoleAssignment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  isExternal: true
  name: PropertyAssignment[]
  nameWithType: PropertyAssignment[]
  fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  nameWithType.vb: PropertyAssignment()
  fullName.vb: Microsoft.VisualStudio.Modeling.PropertyAssignment()
  name.vb: PropertyAssignment()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.VisualStudio.Modeling.Partition
  commentId: T:Microsoft.VisualStudio.Modeling.Partition
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Partition
  nameWithType: Partition
  fullName: Microsoft.VisualStudio.Modeling.Partition
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource
  name: UnidirectionalSource
  nameWithType: UnidirectionalAssociation.UnidirectionalSource
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalSource
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources
  name: GetUnidirectionalSources
  nameWithType: UnidirectionalAssociation.GetUnidirectionalSources
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalSources
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  name: LinkedElementCollection<ModelClass>
  nameWithType: LinkedElementCollection<ModelClass>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<Sawczyn.EFDesigner.EFModel.ModelClass>
  nameWithType.vb: LinkedElementCollection(Of ModelClass)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.ModelClass)
  name.vb: LinkedElementCollection(Of ModelClass)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  isExternal: true
  name: LinkedElementCollection<T>
  nameWithType: LinkedElementCollection<T>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<T>
  nameWithType.vb: LinkedElementCollection(Of T)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of T)
  name.vb: LinkedElementCollection(Of T)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.Association.Source
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.Source
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: Source
  nameWithType: Association.Source
  fullName: Sawczyn.EFDesigner.EFModel.Association.Source
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source
  name: Source
  nameWithType: UnidirectionalAssociation.Source
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Source
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget
  name: UnidirectionalTarget
  nameWithType: UnidirectionalAssociation.UnidirectionalTarget
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.UnidirectionalTarget
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets
  name: GetUnidirectionalTargets
  nameWithType: UnidirectionalAssociation.GetUnidirectionalTargets
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetUnidirectionalTargets
- uid: Sawczyn.EFDesigner.EFModel.Association.Target
  commentId: P:Sawczyn.EFDesigner.EFModel.Association.Target
  parent: Sawczyn.EFDesigner.EFModel.Association
  name: Target
  nameWithType: Association.Target
  fullName: Sawczyn.EFDesigner.EFModel.Association.Target
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target
  name: Target
  nameWithType: UnidirectionalAssociation.Target
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Target
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets
  name: GetLinksToUnidirectionalTargets
  nameWithType: UnidirectionalAssociation.GetLinksToUnidirectionalTargets
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalTargets
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<UnidirectionalAssociation>
  nameWithType: ReadOnlyCollection<UnidirectionalAssociation>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation>
  nameWithType.vb: ReadOnlyCollection(Of UnidirectionalAssociation)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation)
  name.vb: ReadOnlyCollection(Of UnidirectionalAssociation)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
    name: UnidirectionalAssociation
    nameWithType: UnidirectionalAssociation
    fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
    name: UnidirectionalAssociation
    nameWithType: UnidirectionalAssociation
    fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources
  name: GetLinksToUnidirectionalSources
  nameWithType: UnidirectionalAssociation.GetLinksToUnidirectionalSources
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinksToUnidirectionalSources
- uid: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks
  name: GetLinks
  nameWithType: UnidirectionalAssociation.GetLinks
  fullName: Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.GetLinks
