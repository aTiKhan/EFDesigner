### YamlMime:ManagedReference
items:
- uid: Sawczyn.EFDesigner.EFModel.ModelClass
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelClass
  id: ModelClass
  parent: Sawczyn.EFDesigner.EFModel
  children:
  - Sawczyn.EFDesigner.EFModel.ModelClass.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.ModelClass.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  - Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames
  - Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  - Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  - Sawczyn.EFDesigner.EFModel.ModelClass.Attributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass
  - Sawczyn.EFDesigner.EFModel.ModelClass.BaseClassDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources
  - Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets
  - Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency
  - Sawczyn.EFDesigner.EFModel.ModelClass.ConcurrencyDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributesDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces
  - Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfacesDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema
  - Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchemaDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName
  - Sawczyn.EFDesigner.EFModel.ModelClass.DbSetNameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.Description
  - Sawczyn.EFDesigner.EFModel.ModelClass.DescriptionDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.DomainClassId
  - Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency
  - Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelClass.FullName
  - Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue
  - Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue
  - Sawczyn.EFDesigner.EFModel.ModelClass.GlyphTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed(System.String)
  - Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames
  - Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify
  - Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotifyDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstractDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTrackingDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentTypeDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTrackingDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking
  - Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTrackingDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  - Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot
  - Sawczyn.EFDesigner.EFModel.ModelClass.Name
  - Sawczyn.EFDesigner.EFModel.ModelClass.NameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.Namespace
  - Sawczyn.EFDesigner.EFModel.ModelClass.NamespaceDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory
  - Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectoryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties
  - Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem
  - Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes
  - Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  - Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning
  - Sawczyn.EFDesigner.EFModel.ModelClass.Sources
  - Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses
  - Sawczyn.EFDesigner.EFModel.ModelClass.Summary
  - Sawczyn.EFDesigner.EFModel.ModelClass.SummaryDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.Superclass
  - Sawczyn.EFDesigner.EFModel.ModelClass.TableName
  - Sawczyn.EFDesigner.EFModel.ModelClass.TableNameDomainPropertyId
  - Sawczyn.EFDesigner.EFModel.ModelClass.Targets
  - Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources
  - Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets
  langs:
  - csharp
  - vb
  name: ModelClass
  nameWithType: ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  type: Class
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ModelClass
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 11
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDomainClass ModelClass\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainModelOwner(typeof(EFModelDomainModel))]

      [CLSCompliant(true)]

      [DomainObjectId("237aa10f-ae74-41be-bdcf-56d97de6e4c8")]

      [ValidationState(ValidationState.Enabled)]

      public class ModelClass : DesignElement, IMergeElements, IModelElementWithCompartments, IDisplaysWarning
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainModelOwner(GetType(EFModelDomainModel))>

      <CLSCompliant(True)>

      <DomainObjectId("237aa10f-ae74-41be-bdcf-56d97de6e4c8")>

      <ValidationState(ValidationState.Enabled)>

      Public Class ModelClass
          Inherits DesignElement
          Implements IMergeElements, IModelElementWithCompartments, IDisplaysWarning
  inheritance:
  - System.Object
  - Microsoft.VisualStudio.Modeling.ModelElement
  - Sawczyn.EFDesigner.EFModel.DesignElement
  implements:
  - Microsoft.VisualStudio.Modeling.IMergeElements
  - Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  inheritedMembers:
  - Sawczyn.EFDesigner.EFModel.DesignElement.Comments
  - Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete
  - Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  - Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy
  - Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  - Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  - Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  - Microsoft.VisualStudio.Modeling.ModelElement.Id
  - Microsoft.VisualStudio.Modeling.ModelElement.Partition
  - Microsoft.VisualStudio.Modeling.ModelElement.Store
  - Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  - Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Sawczyn.EFDesigner.EFModel.ModelClass.Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass)
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  - Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainModelOwnerAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 237aa10f-ae74-41be-bdcf-56d97de6e4c8
  - type: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute
    ctor: Microsoft.VisualStudio.Modeling.Validation.ValidationStateAttribute.#ctor(Microsoft.VisualStudio.Modeling.Validation.ValidationState)
    arguments:
    - type: Microsoft.VisualStudio.Modeling.Validation.ValidationState
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DomainClassId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.DomainClassId
  id: DomainClassId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: DomainClassId
  nameWithType: ModelClass.DomainClassId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DomainClassId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DomainClassId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3033
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nModelClass domain class Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DomainClassId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DomainClassId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ModelClass(Store, PropertyAssignment[])
  nameWithType: ModelClass.ModelClass(Store, PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ModelClass(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3039
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ModelClass(Store store, params PropertyAssignment[] propertyAssignments)
    parameters:
    - id: store
      type: Microsoft.VisualStudio.Modeling.Store
      description: Store where new element is to be created.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of domain property id/value pairs to set once the element is created.
    content.vb: Public Sub New(store As Store, ParamArray propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.#ctor*
  nameWithType.vb: ModelClass.ModelClass(Store, PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelClass.ModelClass(Microsoft.VisualStudio.Modeling.Store, Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: ModelClass(Store, PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  id: '#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])'
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ModelClass(Partition, PropertyAssignment[])
  nameWithType: ModelClass.ModelClass(Partition, PropertyAssignment[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ModelClass(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.PropertyAssignment[])
  type: Constructor
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: .ctor
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3049
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ModelClass(Partition partition, params PropertyAssignment[] propertyAssignments)
    parameters:
    - id: partition
      type: Microsoft.VisualStudio.Modeling.Partition
      description: Partition where new element is to be created.
    - id: propertyAssignments
      type: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
      description: List of domain property id/value pairs to set once the element is created.
    content.vb: Public Sub New(partition As Partition, ParamArray propertyAssignments As PropertyAssignment())
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.#ctor*
  nameWithType.vb: ModelClass.ModelClass(Partition, PropertyAssignment())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelClass.ModelClass(Microsoft.VisualStudio.Modeling.Partition, Microsoft.VisualStudio.Modeling.PropertyAssignment())
  name.vb: ModelClass(Partition, PropertyAssignment())
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstractDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstractDomainPropertyId
  id: IsAbstractDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsAbstractDomainPropertyId
  nameWithType: ModelClass.IsAbstractDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstractDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsAbstractDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3059
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsAbstract domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsAbstractDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsAbstractDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract
  id: IsAbstract
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsAbstract
  nameWithType: ModelClass.IsAbstract
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsAbstract
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3070
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsAbstract domain property.\nIf true, this will be generated as an abstract class\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("40e0f86d-e0a7-4e3b-8f83-817fcdfc3ad5")]

      public bool IsAbstract { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("40e0f86d-e0a7-4e3b-8f83-817fcdfc3ad5")>

      Public Property IsAbstract As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 40e0f86d-e0a7-4e3b-8f83-817fcdfc3ad5
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.TableNameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.TableNameDomainPropertyId
  id: TableNameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: TableNameDomainPropertyId
  nameWithType: ModelClass.TableNameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.TableNameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TableNameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3147
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nTableName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid TableNameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly TableNameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.TableName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.TableName
  id: TableName
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: TableName
  nameWithType: ModelClass.TableName
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.TableName
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: TableName
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3158
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of TableName domain property.\nName of the database table storing data for this class\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/TableName.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("a674bf44-2df3-44dc-a954-5122556ce4ac")]

      public string TableName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/TableName.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("a674bf44-2df3-44dc-a954-5122556ce4ac")>

      Public Property TableName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.TableName*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/TableName.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a674bf44-2df3-44dc-a954-5122556ce4ac
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchemaDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchemaDomainPropertyId
  id: DatabaseSchemaDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: DatabaseSchemaDomainPropertyId
  nameWithType: ModelClass.DatabaseSchemaDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchemaDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseSchemaDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3236
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDatabaseSchema domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DatabaseSchemaDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DatabaseSchemaDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema
  id: DatabaseSchema
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: DatabaseSchema
  nameWithType: ModelClass.DatabaseSchema
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DatabaseSchema
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3243
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DatabaseSchema domain property.\nThe schema to use for table creation. Overrides default schema for model if\npresent.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainProperty(Kind = DomainPropertyKind.CustomStorage)]

      [DomainObjectId("03075c04-06b6-4b97-a78a-b3be2c9526d7")]

      public string DatabaseSchema { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainProperty(Kind:=DomainPropertyKind.CustomStorage)>

      <DomainObjectId("03075c04-06b6-4b97-a78a-b3be2c9526d7")>

      Public Property DatabaseSchema As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Kind
      type: Microsoft.VisualStudio.Modeling.DomainPropertyKind
      value: 2
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 03075c04-06b6-4b97-a78a-b3be2c9526d7
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ConcurrencyDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.ConcurrencyDomainPropertyId
  id: ConcurrencyDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ConcurrencyDomainPropertyId
  nameWithType: ModelClass.ConcurrencyDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ConcurrencyDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ConcurrencyDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3329
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nConcurrency domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ConcurrencyDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ConcurrencyDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency
  id: Concurrency
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Concurrency
  nameWithType: ModelClass.Concurrency
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Concurrency
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3340
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Concurrency domain property.\nOverridden concurrency handling strategy.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("156da044-640c-466a-898d-73114c0f54e8")]

      public ConcurrencyOverride Concurrency { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ConcurrencyOverride
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("156da044-640c-466a-898d-73114c0f54e8")>

      Public Property Concurrency As ConcurrencyOverride
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 156da044-640c-466a-898d-73114c0f54e8
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTrackingDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTrackingDomainPropertyId
  id: IsDatabaseSchemaTrackingDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsDatabaseSchemaTrackingDomainPropertyId
  nameWithType: ModelClass.IsDatabaseSchemaTrackingDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTrackingDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsDatabaseSchemaTrackingDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3418
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsDatabaseSchemaTracking domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsDatabaseSchemaTrackingDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsDatabaseSchemaTrackingDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking
  id: IsDatabaseSchemaTracking
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsDatabaseSchemaTracking
  nameWithType: ModelClass.IsDatabaseSchemaTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsDatabaseSchemaTracking
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3429
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsDatabaseSchemaTracking domain property.\nIf true, ModelClass.DatabaseSchema tracks ModelRoot.DatabaseSchema\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainObjectId("d1bf6501-cc7e-4994-848f-6dbdcbf21900")]

      public bool IsDatabaseSchemaTracking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainObjectId("d1bf6501-cc7e-4994-848f-6dbdcbf21900")>

      Public Property IsDatabaseSchemaTracking As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: d1bf6501-cc7e-4994-848f-6dbdcbf21900
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.NamespaceDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.NamespaceDomainPropertyId
  id: NamespaceDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: NamespaceDomainPropertyId
  nameWithType: ModelClass.NamespaceDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.NamespaceDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: NamespaceDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3507
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nNamespace domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid NamespaceDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly NamespaceDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Namespace
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Namespace
  id: Namespace
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: ModelClass.Namespace
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Namespace
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Namespace
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3513
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Namespace domain property.\nOverrides default namespace\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainProperty(Kind = DomainPropertyKind.CustomStorage)]

      [DomainObjectId("60009c33-0083-41d8-bd9a-159d9d9c5b5c")]

      public string Namespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainProperty(Kind:=DomainPropertyKind.CustomStorage)>

      <DomainObjectId("60009c33-0083-41d8-bd9a-159d9d9c5b5c")>

      Public Property Namespace As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Namespace*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Kind
      type: Microsoft.VisualStudio.Modeling.DomainPropertyKind
      value: 2
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 60009c33-0083-41d8-bd9a-159d9d9c5b5c
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTrackingDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTrackingDomainPropertyId
  id: IsNamespaceTrackingDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsNamespaceTrackingDomainPropertyId
  nameWithType: ModelClass.IsNamespaceTrackingDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTrackingDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsNamespaceTrackingDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3598
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsNamespaceTracking domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsNamespaceTrackingDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsNamespaceTrackingDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking
  id: IsNamespaceTracking
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsNamespaceTracking
  nameWithType: ModelClass.IsNamespaceTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsNamespaceTracking
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3609
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsNamespaceTracking domain property.\nIf true, ModelClass.Namespace tracks ModelRoot.Namespace\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainObjectId("a65b337d-e60f-427e-9c30-bd39e95b8d72")]

      public bool IsNamespaceTracking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainObjectId("a65b337d-e60f-427e-9c30-bd39e95b8d72")>

      Public Property IsNamespaceTracking As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a65b337d-e60f-427e-9c30-bd39e95b8d72
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetNameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.DbSetNameDomainPropertyId
  id: DbSetNameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: DbSetNameDomainPropertyId
  nameWithType: ModelClass.DbSetNameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetNameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DbSetNameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3687
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDbSetName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DbSetNameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DbSetNameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName
  id: DbSetName
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: DbSetName
  nameWithType: ModelClass.DbSetName
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DbSetName
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3698
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of DbSetName domain property.\nName of this class&apos;s container variable in the generated context\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("bbdbf0f5-65fa-405f-bc5b-36fe3b43c6e4")]

      public string DbSetName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("bbdbf0f5-65fa-405f-bc5b-36fe3b43c6e4")>

      Public Property DbSetName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bbdbf0f5-65fa-405f-bc5b-36fe3b43c6e4
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.NameDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.NameDomainPropertyId
  id: NameDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: NameDomainPropertyId
  nameWithType: ModelClass.NameDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.NameDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: NameDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3775
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nName domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid NameDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly NameDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Name
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Name
  id: Name
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModelClass.Name
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Name
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Name
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3785
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Name domain property.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Name.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Name.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Name.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [ElementName(typeof(ModelClassNameProvider))]

      [DomainObjectId("1f3ff088-f688-4573-b2c5-a8b2b64ec10c")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Name.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Name.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Name.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <ElementName(GetType(ModelClassNameProvider))>

      <DomainObjectId("1f3ff088-f688-4573-b2c5-a8b2b64ec10c")>

      Public Property Name As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Name*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Name.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Name.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Name.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.ElementNameAttribute
    ctor: Microsoft.VisualStudio.Modeling.ElementNameAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.ModelClassNameProvider
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 1f3ff088-f688-4573-b2c5-a8b2b64ec10c
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotifyDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotifyDomainPropertyId
  id: ImplementNotifyDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ImplementNotifyDomainPropertyId
  nameWithType: ModelClass.ImplementNotifyDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotifyDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ImplementNotifyDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3864
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nImplementNotify domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid ImplementNotifyDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly ImplementNotifyDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify
  id: ImplementNotify
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ImplementNotify
  nameWithType: ModelClass.ImplementNotify
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ImplementNotify
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3875
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of ImplementNotify domain property.\nShould this class implement INotifyPropertyChanged?\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("268b5655-43ae-4871-b7e7-2ea7e003d485")]

      public bool ImplementNotify { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("268b5655-43ae-4871-b7e7-2ea7e003d485")>

      Public Property ImplementNotify As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 268b5655-43ae-4871-b7e7-2ea7e003d485
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfacesDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfacesDomainPropertyId
  id: CustomInterfacesDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: CustomInterfacesDomainPropertyId
  nameWithType: ModelClass.CustomInterfacesDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfacesDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomInterfacesDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3952
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCustomInterfaces domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid CustomInterfacesDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly CustomInterfacesDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces
  id: CustomInterfaces
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: CustomInterfaces
  nameWithType: ModelClass.CustomInterfaces
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomInterfaces
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 3964
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of CustomInterfaces domain property.\nOptional comma-separated list of interfaces that will be added to the class\ndefinition\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("55789969-4fcd-4e41-bf8a-69cf0dd70265")]

      public string CustomInterfaces { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("55789969-4fcd-4e41-bf8a-69cf0dd70265")>

      Public Property CustomInterfaces As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 55789969-4fcd-4e41-bf8a-69cf0dd70265
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentTypeDomainPropertyId
  id: IsDependentTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsDependentTypeDomainPropertyId
  nameWithType: ModelClass.IsDependentTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsDependentTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4041
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsDependentType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsDependentTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsDependentTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType
  id: IsDependentType
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsDependentType
  nameWithType: ModelClass.IsDependentType
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsDependentType
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4053
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsDependentType domain property.\nIs this a completely dependent type that will only exist associated to another\nobject?\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("21a0cf45-971e-40dd-8940-afafa5985d7f")]

      public bool IsDependentType { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("21a0cf45-971e-40dd-8940-afafa5985d7f")>

      Public Property IsDependentType As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 21a0cf45-971e-40dd-8940-afafa5985d7f
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectoryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectoryDomainPropertyId
  id: OutputDirectoryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: OutputDirectoryDomainPropertyId
  nameWithType: ModelClass.OutputDirectoryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectoryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: OutputDirectoryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4130
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nOutputDirectory domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid OutputDirectoryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly OutputDirectoryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory
  id: OutputDirectory
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: OutputDirectory
  nameWithType: ModelClass.OutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: OutputDirectory
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4136
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of OutputDirectory domain property.\nOverrides default output directory\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainProperty(Kind = DomainPropertyKind.CustomStorage)]

      [DomainObjectId("7b385981-572c-4f6f-81aa-5de8608c3914")]

      public string OutputDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainProperty(Kind:=DomainPropertyKind.CustomStorage)>

      <DomainObjectId("7b385981-572c-4f6f-81aa-5de8608c3914")>

      Public Property OutputDirectory As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Kind
      type: Microsoft.VisualStudio.Modeling.DomainPropertyKind
      value: 2
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 7b385981-572c-4f6f-81aa-5de8608c3914
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTrackingDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTrackingDomainPropertyId
  id: IsOutputDirectoryTrackingDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsOutputDirectoryTrackingDomainPropertyId
  nameWithType: ModelClass.IsOutputDirectoryTrackingDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTrackingDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsOutputDirectoryTrackingDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4221
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nIsOutputDirectoryTracking domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid IsOutputDirectoryTrackingDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly IsOutputDirectoryTrackingDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking
  id: IsOutputDirectoryTracking
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IsOutputDirectoryTracking
  nameWithType: ModelClass.IsOutputDirectoryTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IsOutputDirectoryTracking
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4232
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of IsOutputDirectoryTracking domain property.\nIf true, ModelClass.OutputDirectory tracks ModelRoot.EntityOutputDirectory\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [Browsable(false)]

      [DomainObjectId("8045d89c-6c9a-4775-92bc-841a7f6fe7d3")]

      public bool IsOutputDirectoryTracking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <Browsable(False)>

      <DomainObjectId("8045d89c-6c9a-4775-92bc-841a7f6fe7d3")>

      Public Property IsOutputDirectoryTracking As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 8045d89c-6c9a-4775-92bc-841a7f6fe7d3
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.GlyphTypeDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.GlyphTypeDomainPropertyId
  id: GlyphTypeDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: GlyphTypeDomainPropertyId
  nameWithType: ModelClass.GlyphTypeDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.GlyphTypeDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GlyphTypeDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4310
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGlyphType domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid GlyphTypeDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly GlyphTypeDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DescriptionDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.DescriptionDomainPropertyId
  id: DescriptionDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: DescriptionDomainPropertyId
  nameWithType: ModelClass.DescriptionDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DescriptionDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: DescriptionDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4376
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nDescription domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid DescriptionDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly DescriptionDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Description
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Description
  id: Description
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ModelClass.Description
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Description
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Description
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4387
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Description domain property.\nDetailed code documentation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Description.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Description.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Description.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("4b0b6237-2bfc-4be6-a088-271fe34b89ec")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Description.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Description.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Description.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("4b0b6237-2bfc-4be6-a088-271fe34b89ec")>

      Public Property Description As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Description*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Description.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Description.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Description.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 4b0b6237-2bfc-4be6-a088-271fe34b89ec
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.SummaryDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.SummaryDomainPropertyId
  id: SummaryDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: SummaryDomainPropertyId
  nameWithType: ModelClass.SummaryDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.SummaryDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: SummaryDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4466
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nSummary domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid SummaryDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly SummaryDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Summary
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Summary
  id: Summary
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: ModelClass.Summary
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Summary
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Summary
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4477
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of Summary domain property.\nBrief code documentation\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Summary.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("5ff45bb4-658f-412e-8cdc-2593d9ea3d37")]

      public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/Summary.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("5ff45bb4-658f-412e-8cdc-2593d9ea3d37")>

      Public Property Summary As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Summary*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Summary.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 5ff45bb4-658f-412e-8cdc-2593d9ea3d37
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClassDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.BaseClassDomainPropertyId
  id: BaseClassDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: BaseClassDomainPropertyId
  nameWithType: ModelClass.BaseClassDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClassDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: BaseClassDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4555
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nBaseClass domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid BaseClassDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly BaseClassDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass
  id: BaseClass
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: BaseClass
  nameWithType: ModelClass.BaseClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: BaseClass
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4561
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of BaseClass domain property.\nExposes Superclass property in property editor\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(BaseClassTypeConverter))]

      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainProperty(Kind = DomainPropertyKind.CustomStorage)]

      [DomainObjectId("ed7ce317-4ceb-479e-98d0-d7fd9eb858f0")]

      public string BaseClass { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <TypeConverter(GetType(BaseClassTypeConverter))>

      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainProperty(Kind:=DomainPropertyKind.CustomStorage)>

      <DomainObjectId("ed7ce317-4ceb-479e-98d0-d7fd9eb858f0")>

      Public Property BaseClass As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.BaseClassTypeConverter
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Kind
      type: Microsoft.VisualStudio.Modeling.DomainPropertyKind
      value: 2
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ed7ce317-4ceb-479e-98d0-d7fd9eb858f0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributesDomainPropertyId
  commentId: F:Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributesDomainPropertyId
  id: CustomAttributesDomainPropertyId
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: CustomAttributesDomainPropertyId
  nameWithType: ModelClass.CustomAttributesDomainPropertyId
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributesDomainPropertyId
  type: Field
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomAttributesDomainPropertyId
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4646
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCustomAttributes domain property Id.\n"
  example: []
  syntax:
    content: public static readonly Guid CustomAttributesDomainPropertyId
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly CustomAttributesDomainPropertyId As Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes
  id: CustomAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: CustomAttributes
  nameWithType: ModelClass.CustomAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CustomAttributes
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4658
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets the value of CustomAttributes domain property.\nAny custom attributes to be generated for this element.  Will be passed through\nas entered.\n"
  example: []
  syntax:
    content: >-
      [DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.DisplayName", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Category", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Description", typeof(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")]

      [DomainObjectId("cae77164-7b85-4c67-8fa4-88f945353e92")]

      public string CustomAttributes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DisplayNameResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.DisplayName", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <CategoryResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Category", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DescriptionResource("Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Description", GetType(EFModelDomainModel), "Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx")>

      <DomainObjectId("cae77164-7b85-4c67-8fa4-88f945353e92")>

      Public Property CustomAttributes As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes*
  attributes:
  - type: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DisplayNameResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.DisplayName
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.CategoryResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Category
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute
    ctor: Microsoft.VisualStudio.Modeling.Design.DescriptionResourceAttribute.#ctor(System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Description
    - type: System.Type
      value: Sawczyn.EFDesigner.EFModel.EFModelDomainModel
    - type: System.String
      value: Sawczyn.EFDesigner.EFModel.GeneratedCode.DomainModelResx
  - type: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute
    ctor: Microsoft.VisualStudio.Modeling.DomainObjectIdAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cae77164-7b85-4c67-8fa4-88f945353e92
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Targets
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Targets
  id: Targets
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Targets
  nameWithType: ModelClass.Targets
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Targets
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Targets
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4735
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Targets.\n"
  example: []
  syntax:
    content: public virtual ReadOnlyLinkedElementCollection<ModelClass> Targets { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property Targets As ReadOnlyLinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Targets*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Sources
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Sources
  id: Sources
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: ModelClass.Sources
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Sources
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Sources
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4749
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Sources.\n"
  example: []
  syntax:
    content: public virtual ReadOnlyLinkedElementCollection<ModelClass> Sources { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property Sources As ReadOnlyLinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Sources*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets
  id: UnidirectionalTargets
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: UnidirectionalTargets
  nameWithType: ModelClass.UnidirectionalTargets
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalTargets
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4763
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of UnidirectionalTargets.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelClass> UnidirectionalTargets { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property UnidirectionalTargets As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources
  id: UnidirectionalSources
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: UnidirectionalSources
  nameWithType: ModelClass.UnidirectionalSources
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: UnidirectionalSources
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4777
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of UnidirectionalSources.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelClass> UnidirectionalSources { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property UnidirectionalSources As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Attributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Attributes
  id: Attributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ModelClass.Attributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Attributes
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Attributes
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4791
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Attributes.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelAttribute> Attributes { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelAttribute}
    content.vb: Public Overridable ReadOnly Property Attributes As LinkedElementCollection(Of ModelAttribute)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Attributes*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses
  id: Subclasses
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Subclasses
  nameWithType: ModelClass.Subclasses
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Subclasses
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4805
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of Subclasses.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelClass> Subclasses { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property Subclasses As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Superclass
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.Superclass
  id: Superclass
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: Superclass
  nameWithType: ModelClass.Superclass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Superclass
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: Superclass
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4818
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets Superclass.\n"
  example: []
  syntax:
    content: public virtual ModelClass Superclass { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelClass
    content.vb: Public Overridable Property Superclass As ModelClass
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.Superclass*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets
  id: BidirectionalTargets
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: BidirectionalTargets
  nameWithType: ModelClass.BidirectionalTargets
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: BidirectionalTargets
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4837
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of BidirectionalTargets.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelClass> BidirectionalTargets { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property BidirectionalTargets As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources
  id: BidirectionalSources
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: BidirectionalSources
  nameWithType: ModelClass.BidirectionalSources
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: BidirectionalSources
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4851
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets a list of BidirectionalSources.\n"
  example: []
  syntax:
    content: public virtual LinkedElementCollection<ModelClass> BidirectionalSources { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
    content.vb: Public Overridable ReadOnly Property BidirectionalSources As LinkedElementCollection(Of ModelClass)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot
  id: ModelRoot
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ModelRoot
  nameWithType: ModelClass.ModelRoot
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot
  type: Property
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ModelRoot
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4865
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nGets or sets ModelRoot.\nDescription for Sawczyn.EFDesigner.EFModel.ModelRootHasClasses.ModelClass\n"
  example: []
  syntax:
    content: public virtual ModelRoot ModelRoot { get; set; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelRoot
    content.vb: Public Overridable Property ModelRoot As ModelRoot
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  id: CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelClass.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: CanMerge
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4891
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nReturns a value indicating whether the source element represented by the\nspecified root ProtoElement can be added to this element.\n"
  example: []
  syntax:
    content: protected override bool CanMerge(ProtoElementBase rootElement, ElementGroupPrototype elementGroupPrototype)
    parameters:
    - id: rootElement
      type: Microsoft.VisualStudio.Modeling.ProtoElementBase
      description: "\nThe root ProtoElement representing a source element.  This can be null, \nin which case the ElementGroupPrototype does not contain an ProtoElements\nand the code should inspect the ElementGroupPrototype context information.\n"
    - id: elementGroupPrototype
      type: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
      description: The ElementGroupPrototype that contains the root ProtoElement.
    return:
      type: System.Boolean
      description: true if the source element represented by the ProtoElement can be added to this target element.
    content.vb: Protected Overrides Function CanMerge(rootElement As ProtoElementBase, elementGroupPrototype As ElementGroupPrototype) As Boolean
  overridden: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  id: MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelClass.MergeRelate(ModelElement, ElementGroup)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MergeRelate
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4925
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCalled by the Merge process to create a relationship between \nthis target element and the specified source element. \nTypically, a parent-child relationship is established\nbetween the target element (the parent) and the source element \n(the child), but any relationship can be established.\n"
  remarks: "\nThis method is overriden to create the relationship between the target element and the specified source element.\nThe base method does nothing.\n"
  example: []
  syntax:
    content: protected override void MergeRelate(ModelElement sourceElement, ElementGroup elementGroup)
    parameters:
    - id: sourceElement
      type: Microsoft.VisualStudio.Modeling.ModelElement
      description: The element that is to be related to this model element.
    - id: elementGroup
      type: Microsoft.VisualStudio.Modeling.ElementGroup
      description: The group of source ModelElements that have been rehydrated into the target store.
    content.vb: Protected Overrides Sub MergeRelate(sourceElement As ModelElement, elementGroup As ElementGroup)
  overridden: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  id: MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: MergeDisconnect(ModelElement)
  nameWithType: ModelClass.MergeDisconnect(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  type: Method
  source:
    remote:
      path: src/Dsl/GeneratedCode/DomainClasses.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: MergeDisconnect
    path: ../Dsl/GeneratedCode/DomainClasses.cs
    startLine: 4974
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nPerforms operation opposite to MergeRelate - i.e. disconnects a given\nelement from the current one (removes links created by MergeRelate).\n"
  example: []
  syntax:
    content: protected override void MergeDisconnect(ModelElement sourceElement)
    parameters:
    - id: sourceElement
      type: Microsoft.VisualStudio.Modeling.ModelElement
      description: Element to be unmerged/disconnected.
    content.vb: Protected Overrides Sub MergeDisconnect(sourceElement As ModelElement)
  overridden: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes
  id: AllAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: AllAttributes
  nameWithType: ModelClass.AllAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllAttributes
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 17
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nAll attributes in the class, including those inherited from base classes\n"
  example: []
  syntax:
    content: public IEnumerable<ModelAttribute> AllAttributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
    content.vb: Public ReadOnly Property AllAttributes As IEnumerable(Of ModelAttribute)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes
  id: RequiredAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: RequiredAttributes
  nameWithType: ModelClass.RequiredAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: RequiredAttributes
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 28
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<ModelAttribute> RequiredAttributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
    content.vb: Public ReadOnly Property RequiredAttributes As IEnumerable(Of ModelAttribute)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes
  id: AllRequiredAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: AllRequiredAttributes
  nameWithType: ModelClass.AllRequiredAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllRequiredAttributes
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 29
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<ModelAttribute> AllRequiredAttributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
    content.vb: Public ReadOnly Property AllRequiredAttributes As IEnumerable(Of ModelAttribute)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes
  id: IdentityAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IdentityAttributes
  nameWithType: ModelClass.IdentityAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IdentityAttributes
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 30
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<ModelAttribute> IdentityAttributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
    content.vb: Public ReadOnly Property IdentityAttributes As IEnumerable(Of ModelAttribute)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes
  id: AllIdentityAttributes
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: AllIdentityAttributes
  nameWithType: ModelClass.AllIdentityAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllIdentityAttributes
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 31
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<ModelAttribute> AllIdentityAttributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
    content.vb: Public ReadOnly Property AllIdentityAttributes As IEnumerable(Of ModelAttribute)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames
  id: IdentityAttributeNames
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: IdentityAttributeNames
  nameWithType: ModelClass.IdentityAttributeNames
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: IdentityAttributeNames
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 32
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<string> IdentityAttributeNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property IdentityAttributeNames As IEnumerable(Of String)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames
  id: AllIdentityAttributeNames
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: AllIdentityAttributeNames
  nameWithType: ModelClass.AllIdentityAttributeNames
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllIdentityAttributeNames
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 33
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<string> AllIdentityAttributeNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property AllIdentityAttributeNames As IEnumerable(Of String)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.FullName
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.FullName
  id: FullName
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: ModelClass.FullName
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.FullName
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FullName
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 34
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public string FullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullName As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.FullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue
  id: GetHasWarningValue
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: GetHasWarningValue()
  nameWithType: ModelClass.GetHasWarningValue()
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetHasWarningValue
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 42
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public bool GetHasWarningValue()
    return:
      type: System.Boolean
    content.vb: Public Function GetHasWarningValue As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue*
  implements:
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning
  id: ResetWarning
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: ResetWarning()
  nameWithType: ModelClass.ResetWarning()
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: ResetWarning
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 44
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public void ResetWarning()
    content.vb: Public Sub ResetWarning
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning*
  implements:
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem
  id: RedrawItem
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: RedrawItem()
  nameWithType: ModelClass.RedrawItem()
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: RedrawItem
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 46
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public void RedrawItem()
    content.vb: Public Sub RedrawItem
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem*
  implements:
  - Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue
  id: GetGlyphTypeValue
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: GetGlyphTypeValue()
  nameWithType: ModelClass.GetGlyphTypeValue()
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: GetGlyphTypeValue
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 53
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: protected string GetGlyphTypeValue()
    return:
      type: System.String
    content.vb: Protected Function GetGlyphTypeValue As String
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency
  commentId: P:Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency
  id: EffectiveConcurrency
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: EffectiveConcurrency
  nameWithType: ModelClass.EffectiveConcurrency
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency
  type: Property
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: EffectiveConcurrency
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 67
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public ConcurrencyOverride EffectiveConcurrency { get; }
    parameters: []
    return:
      type: Sawczyn.EFDesigner.EFModel.ConcurrencyOverride
    content.vb: Public ReadOnly Property EffectiveConcurrency As ConcurrencyOverride
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties
  id: PreResetIsTrackingProperties
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: PreResetIsTrackingProperties()
  nameWithType: ModelClass.PreResetIsTrackingProperties()
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties()
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: PreResetIsTrackingProperties
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 82
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  summary: "\nCalls the pre-reset method on the associated property value handler for each\ntracking property of this model element.\n"
  example: []
  syntax:
    content: public virtual void PreResetIsTrackingProperties()
    content.vb: Public Overridable Sub PreResetIsTrackingProperties
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  id: AllNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: AllNavigationProperties(Association[])
  nameWithType: ModelClass.AllNavigationProperties(Association[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllNavigationProperties
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 103
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<NavigationProperty> AllNavigationProperties(params Association[] ignore)
    parameters:
    - id: ignore
      type: Sawczyn.EFDesigner.EFModel.Association[]
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.NavigationProperty}
    content.vb: Public Function AllNavigationProperties(ParamArray ignore As Association()) As IEnumerable(Of NavigationProperty)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties*
  nameWithType.vb: ModelClass.AllNavigationProperties(Association())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties(Sawczyn.EFDesigner.EFModel.Association())
  name.vb: AllNavigationProperties(Association())
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  id: LocalNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: LocalNavigationProperties(Association[])
  nameWithType: ModelClass.LocalNavigationProperties(Association[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: LocalNavigationProperties
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 113
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<NavigationProperty> LocalNavigationProperties(params Association[] ignore)
    parameters:
    - id: ignore
      type: Sawczyn.EFDesigner.EFModel.Association[]
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.NavigationProperty}
    content.vb: Public Function LocalNavigationProperties(ParamArray ignore As Association()) As IEnumerable(Of NavigationProperty)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties*
  nameWithType.vb: ModelClass.LocalNavigationProperties(Association())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties(Sawczyn.EFDesigner.EFModel.Association())
  name.vb: LocalNavigationProperties(Association())
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  id: RequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: RequiredNavigationProperties(Association[])
  nameWithType: ModelClass.RequiredNavigationProperties(Association[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: RequiredNavigationProperties
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 167
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<NavigationProperty> RequiredNavigationProperties(params Association[] ignore)
    parameters:
    - id: ignore
      type: Sawczyn.EFDesigner.EFModel.Association[]
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.NavigationProperty}
    content.vb: Public Function RequiredNavigationProperties(ParamArray ignore As Association()) As IEnumerable(Of NavigationProperty)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties*
  nameWithType.vb: ModelClass.RequiredNavigationProperties(Association())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association())
  name.vb: RequiredNavigationProperties(Association())
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  id: AllRequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: AllRequiredNavigationProperties(Association[])
  nameWithType: ModelClass.AllRequiredNavigationProperties(Association[])
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association[])
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: AllRequiredNavigationProperties
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 169
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public IEnumerable<NavigationProperty> AllRequiredNavigationProperties(params Association[] ignore)
    parameters:
    - id: ignore
      type: Sawczyn.EFDesigner.EFModel.Association[]
    return:
      type: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.NavigationProperty}
    content.vb: Public Function AllRequiredNavigationProperties(ParamArray ignore As Association()) As IEnumerable(Of NavigationProperty)
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties*
  nameWithType.vb: ModelClass.AllRequiredNavigationProperties(Association())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties(Sawczyn.EFDesigner.EFModel.Association())
  name.vb: AllRequiredNavigationProperties(Association())
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed(System.String)
  id: FindAssociationNamed(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: FindAssociationNamed(String)
  nameWithType: ModelClass.FindAssociationNamed(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FindAssociationNamed
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 171
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public NavigationProperty FindAssociationNamed(string identifier)
    parameters:
    - id: identifier
      type: System.String
    return:
      type: Sawczyn.EFDesigner.EFModel.NavigationProperty
    content.vb: Public Function FindAssociationNamed(identifier As String) As NavigationProperty
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed(System.String)
  id: FindAttributeNamed(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: FindAttributeNamed(String)
  nameWithType: ModelClass.FindAttributeNamed(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: FindAttributeNamed
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 173
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public ModelAttribute FindAttributeNamed(string identifier)
    parameters:
    - id: identifier
      type: System.String
    return:
      type: Sawczyn.EFDesigner.EFModel.ModelAttribute
    content.vb: Public Function FindAttributeNamed(identifier As String) As ModelAttribute
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed(System.String)
  id: HasAssociationNamed(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: HasAssociationNamed(String)
  nameWithType: ModelClass.HasAssociationNamed(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: HasAssociationNamed
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 175
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public bool HasAssociationNamed(string identifier)
    parameters:
    - id: identifier
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasAssociationNamed(identifier As String) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed(System.String)
  id: HasAttributeNamed(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: HasAttributeNamed(String)
  nameWithType: ModelClass.HasAttributeNamed(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: HasAttributeNamed
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 177
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public bool HasAttributeNamed(string identifier)
    parameters:
    - id: identifier
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasAttributeNamed(identifier As String) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed(System.String)
  id: HasPropertyNamed(System.String)
  parent: Sawczyn.EFDesigner.EFModel.ModelClass
  langs:
  - csharp
  - vb
  name: HasPropertyNamed(String)
  nameWithType: ModelClass.HasPropertyNamed(String)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed(System.String)
  type: Method
  source:
    remote:
      path: src/Dsl/CustomCode/Partials/ModelClass.cs
      branch: master
      repo: https://github.com/msawczyn/EFDesigner
    id: HasPropertyNamed
    path: ../Dsl/CustomCode/Partials/ModelClass.cs
    startLine: 179
  assemblies:
  - Sawczyn.EFDesigner.EFModel.Dsl
  namespace: Sawczyn.EFDesigner.EFModel
  syntax:
    content: public bool HasPropertyNamed(string identifier)
    parameters:
    - id: identifier
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasPropertyNamed(identifier As String) As Boolean
  overload: Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sawczyn.EFDesigner.EFModel
  commentId: N:Sawczyn.EFDesigner.EFModel
  name: Sawczyn.EFDesigner.EFModel
  nameWithType: Sawczyn.EFDesigner.EFModel
  fullName: Sawczyn.EFDesigner.EFModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualStudio.Modeling.ModelElement
  commentId: T:Microsoft.VisualStudio.Modeling.ModelElement
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: Microsoft.VisualStudio.Modeling.ModelElement
- uid: Sawczyn.EFDesigner.EFModel.DesignElement
  commentId: T:Sawczyn.EFDesigner.EFModel.DesignElement
  parent: Sawczyn.EFDesigner.EFModel
  name: DesignElement
  nameWithType: DesignElement
  fullName: Sawczyn.EFDesigner.EFModel.DesignElement
- uid: Microsoft.VisualStudio.Modeling.IMergeElements
  commentId: T:Microsoft.VisualStudio.Modeling.IMergeElements
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: IMergeElements
  nameWithType: IMergeElements
  fullName: Microsoft.VisualStudio.Modeling.IMergeElements
- uid: Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
  commentId: T:Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
  parent: Sawczyn.EFDesigner.EFModel
  name: IModelElementWithCompartments
  nameWithType: IModelElementWithCompartments
  fullName: Sawczyn.EFDesigner.EFModel.IModelElementWithCompartments
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  commentId: T:Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  parent: Sawczyn.EFDesigner.EFModel
  name: IDisplaysWarning
  nameWithType: IDisplaysWarning
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
- uid: Sawczyn.EFDesigner.EFModel.DesignElement.Comments
  commentId: P:Sawczyn.EFDesigner.EFModel.DesignElement.Comments
  parent: Sawczyn.EFDesigner.EFModel.DesignElement
  name: Comments
  nameWithType: DesignElement.Comments
  fullName: Sawczyn.EFDesigner.EFModel.DesignElement.Comments
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetDomainClass()
  nameWithType: ModelElement.GetDomainClass()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    name: GetDomainClass
    nameWithType: ModelElement.GetDomainClass
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetDomainClass
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanging(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanging
    nameWithType: ModelElement.OnRolePlayerPositionChanging
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  nameWithType: ModelElement.OnRolePlayerPositionChanged(DomainRoleInfo, ElementLink, Int32, Int32)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo, Microsoft.VisualStudio.Modeling.ElementLink, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged(Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ElementLink,System.Int32,System.Int32)
    name: OnRolePlayerPositionChanged
    nameWithType: ModelElement.OnRolePlayerPositionChanged
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnRolePlayerPositionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    name: DomainRoleInfo
    nameWithType: DomainRoleInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainRoleInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementLink
    name: ElementLink
    nameWithType: ElementLink
    fullName: Microsoft.VisualStudio.Modeling.ElementLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Delete(Guid[])
  nameWithType: ModelElement.Delete(Guid[])
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
  nameWithType.vb: ModelElement.Delete(Guid())
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid())
  name.vb: Delete(Guid())
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Delete(System.Guid[])
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleting()
  nameWithType: ModelElement.OnDeleting()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnDeleted()
  nameWithType: ModelElement.OnDeleted()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnDeleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnResurrected()
  nameWithType: ModelElement.OnResurrected()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    name: OnResurrected
    nameWithType: ModelElement.OnResurrected
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnResurrected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy()
  nameWithType: ModelElement.Copy()
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Copy(IEnumerable<Guid>)
  nameWithType: ModelElement.Copy(IEnumerable<Guid>)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ModelElement.Copy(IEnumerable(Of Guid))
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: Copy(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Copy(System.Collections.Generic.IEnumerable{System.Guid})
    name: Copy
    nameWithType: ModelElement.Copy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Copy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: OnCopy(ModelElement)
  nameWithType: ModelElement.OnCopy(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy(Microsoft.VisualStudio.Modeling.ModelElement)
    name: OnCopy
    nameWithType: ModelElement.OnCopy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.OnCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: ChooseMergeTarget
    nameWithType: ModelElement.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeConfigure(ElementGroup)
  nameWithType: ModelElement.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeConfigure
    nameWithType: ModelElement.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge(ProtoElementBase, ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.CanMerge
    nameWithType: ModelElement.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.ChooseMergeTarget(ElementGroup)
  nameWithType: ModelElement.IMergeElements.ChooseMergeTarget(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.ChooseMergeTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate(ModelElement, ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeRelate
    nameWithType: ModelElement.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeDisconnect(ModelElement)
  nameWithType: ModelElement.IMergeElements.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: IMergeElements.MergeDisconnect
    nameWithType: ModelElement.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IMergeElements.MergeConfigure(ElementGroup)
  nameWithType: ModelElement.IMergeElements.MergeConfigure(ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
  nameWithType.vb: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  name.vb: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure(ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: IMergeElements.MergeConfigure
    nameWithType: ModelElement.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft#VisualStudio#Modeling#IMergeElements#MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)
    name: Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    nameWithType: ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.Microsoft.VisualStudio.Modeling.IMergeElements.MergeConfigure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  nameWithType.vb: ModelElement.GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  name.vb: GetRoleCollection(Of TCollection, TElement)(ModelElement, Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection<TCollection, TElement>
    nameWithType: ModelElement.GetRoleCollection<TCollection, TElement>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection<TCollection, TElement>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection``2(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetRoleCollection(Of TCollection, TElement)
    nameWithType: ModelElement.GetRoleCollection(Of TCollection, TElement)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetRoleCollection(Of TCollection, TElement)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetBaseElement(ModelElement)
  nameWithType: ModelElement.GetBaseElement(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetBaseElement
    nameWithType: ModelElement.GetBaseElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetBaseElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetAllExtensions(ModelElement)
  nameWithType: ModelElement.GetAllExtensions(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetAllExtensions
    nameWithType: ModelElement.GetAllExtensions
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetAllExtensions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension<T>(ModelElement)
  nameWithType: ModelElement.GetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.GetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: GetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.GetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Guid)
  nameWithType: ModelElement.GetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: GetExtension(ModelElement, Type)
  nameWithType: ModelElement.GetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: GetExtension
    nameWithType: ModelElement.GetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.GetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension<T>(ModelElement)
  nameWithType: ModelElement.TryGetExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.TryGetExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: TryGetExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension<T>
    nameWithType: ModelElement.TryGetExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: TryGetExtension(Of T)
    nameWithType: ModelElement.TryGetExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.TryGetExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Guid)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: TryGetExtension(ModelElement, Type)
  nameWithType: ModelElement.TryGetExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: TryGetExtension
    nameWithType: ModelElement.TryGetExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.TryGetExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Guid)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsExtendedBy(ModelElement, Type)
  nameWithType: ModelElement.IsExtendedBy(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: IsExtendedBy
    nameWithType: ModelElement.IsExtendedBy
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsExtendedBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.AddExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension<T>(ModelElement)
  nameWithType: ModelElement.AddExtension<T>(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>(Microsoft.VisualStudio.Modeling.ModelElement)
  nameWithType.vb: ModelElement.AddExtension(Of T)(ModelElement)
  fullName.vb: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)(Microsoft.VisualStudio.Modeling.ModelElement)
  name.vb: AddExtension(Of T)(ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension<T>
    nameWithType: ModelElement.AddExtension<T>
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension``1(Microsoft.VisualStudio.Modeling.ModelElement)
    name: AddExtension(Of T)
    nameWithType: ModelElement.AddExtension(Of T)
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.AddExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Guid)
  nameWithType: ModelElement.AddExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: AddExtension(ModelElement, Type)
  nameWithType: ModelElement.AddExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: AddExtension
    nameWithType: ModelElement.AddExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.AddExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, ExtensionElement)
  nameWithType: ModelElement.RemoveExtension(ModelElement, ExtensionElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ExtensionElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ExtensionElement)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ExtensionElement
    name: ExtensionElement
    nameWithType: ExtensionElement
    fullName: Microsoft.VisualStudio.Modeling.ExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, DomainClassInfo)
  nameWithType: ModelElement.RemoveExtension(ModelElement, DomainClassInfo)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.DomainClassInfo)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainClassInfo)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.DomainClassInfo
    name: DomainClassInfo
    nameWithType: DomainClassInfo
    fullName: Microsoft.VisualStudio.Modeling.DomainClassInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Guid)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Guid)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Guid)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: RemoveExtension(ModelElement, Type)
  nameWithType: ModelElement.RemoveExtension(ModelElement, Type)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement, System.Type)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension(Microsoft.VisualStudio.Modeling.ModelElement,System.Type)
    name: RemoveExtension
    nameWithType: ModelElement.RemoveExtension
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.RemoveExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Id
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Id
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Id
  nameWithType: ModelElement.Id
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Id
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Partition
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Partition
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Partition
  nameWithType: ModelElement.Partition
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Partition
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Store
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.Store
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: Store
  nameWithType: ModelElement.Store
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.Store
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsActive
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsActive
  nameWithType: ModelElement.IsActive
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsActive
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleted
  nameWithType: ModelElement.IsDeleted
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleted
- uid: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  commentId: P:Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: IsDeleting
  nameWithType: ModelElement.IsDeleting
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.IsDeleting
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  parent: Sawczyn.EFDesigner.EFModel.ModelClassExtensions
  definition: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  name: PushDown(ModelClass)
  nameWithType: ModelClassExtensions.PushDown(ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: PushDown
    nameWithType: ModelClassExtensions.PushDown
    fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass)
    name: PushDown
    nameWithType: ModelClassExtensions.PushDown
    fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  name: LocateInDiagram()
  nameWithType: ModelElementExtensions.LocateInDiagram()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  name: GetFirstShapeElement()
  nameWithType: ModelElementExtensions.GetFirstShapeElement()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  name: GetCompartment(String)
  nameWithType: ModelElementExtensions.GetCompartment(String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ModelElement.Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  definition: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  name: InvalidateDiagrams()
  nameWithType: ModelElementExtensions.InvalidateDiagrams()
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.VisualStudio.Modeling
  commentId: N:Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Microsoft.VisualStudio.Modeling
  nameWithType: Microsoft.VisualStudio.Modeling
  fullName: Microsoft.VisualStudio.Modeling
- uid: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  commentId: M:Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
  name: PushDown(ModelClass, ModelClass)
  nameWithType: ModelClassExtensions.PushDown(ModelClass, ModelClass)
  fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass, Sawczyn.EFDesigner.EFModel.ModelClass)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
    name: PushDown
    nameWithType: ModelClassExtensions.PushDown
    fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown(Sawczyn.EFDesigner.EFModel.ModelClass,Sawczyn.EFDesigner.EFModel.ModelClass)
    name: PushDown
    nameWithType: ModelClassExtensions.PushDown
    fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions.PushDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClassExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelClassExtensions
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelClassExtensions
  nameWithType: ModelClassExtensions
  fullName: Sawczyn.EFDesigner.EFModel.ModelClassExtensions
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: LocateInDiagram(ModelElement)
  nameWithType: ModelElementExtensions.LocateInDiagram(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram(Microsoft.VisualStudio.Modeling.ModelElement)
    name: LocateInDiagram
    nameWithType: ModelElementExtensions.LocateInDiagram
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.LocateInDiagram
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  commentId: T:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
  parent: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: ModelElementExtensions
  nameWithType: ModelElementExtensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: GetFirstShapeElement(ModelElement)
  nameWithType: ModelElementExtensions.GetFirstShapeElement(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement(Microsoft.VisualStudio.Modeling.ModelElement)
    name: GetFirstShapeElement
    nameWithType: ModelElementExtensions.GetFirstShapeElement
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetFirstShapeElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
  isExternal: true
  name: GetCompartment(ModelElement, String)
  nameWithType: ModelElementExtensions.GetCompartment(ModelElement, String)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement, System.String)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment(Microsoft.VisualStudio.Modeling.ModelElement,System.String)
    name: GetCompartment
    nameWithType: ModelElementExtensions.GetCompartment
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.GetCompartment
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  isExternal: true
  name: InvalidateDiagrams(ModelElement)
  nameWithType: ModelElementExtensions.InvalidateDiagrams(ModelElement)
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams(Microsoft.VisualStudio.Modeling.ModelElement)
    name: InvalidateDiagrams
    nameWithType: ModelElementExtensions.InvalidateDiagrams
    fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions.ModelElementExtensions.InvalidateDiagrams
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  commentId: N:Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  name: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  nameWithType: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
  fullName: Sawczyn.EFDesigner.EFModel.CustomCode.Extensions
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.#ctor*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.#ctor
  name: ModelClass
  nameWithType: ModelClass.ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ModelClass
- uid: Microsoft.VisualStudio.Modeling.Store
  commentId: T:Microsoft.VisualStudio.Modeling.Store
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Store
  nameWithType: Store
  fullName: Microsoft.VisualStudio.Modeling.Store
- uid: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  isExternal: true
  name: PropertyAssignment[]
  nameWithType: PropertyAssignment[]
  fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment[]
  nameWithType.vb: PropertyAssignment()
  fullName.vb: Microsoft.VisualStudio.Modeling.PropertyAssignment()
  name.vb: PropertyAssignment()
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.PropertyAssignment
    name: PropertyAssignment
    nameWithType: PropertyAssignment
    fullName: Microsoft.VisualStudio.Modeling.PropertyAssignment
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.VisualStudio.Modeling.Partition
  commentId: T:Microsoft.VisualStudio.Modeling.Partition
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: Partition
  nameWithType: Partition
  fullName: Microsoft.VisualStudio.Modeling.Partition
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract
  name: IsAbstract
  nameWithType: ModelClass.IsAbstract
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsAbstract
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.TableName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.TableName
  name: TableName
  nameWithType: ModelClass.TableName
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.TableName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema
  name: DatabaseSchema
  nameWithType: ModelClass.DatabaseSchema
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DatabaseSchema
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency
  name: Concurrency
  nameWithType: ModelClass.Concurrency
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Concurrency
- uid: Sawczyn.EFDesigner.EFModel.ConcurrencyOverride
  commentId: T:Sawczyn.EFDesigner.EFModel.ConcurrencyOverride
  parent: Sawczyn.EFDesigner.EFModel
  name: ConcurrencyOverride
  nameWithType: ConcurrencyOverride
  fullName: Sawczyn.EFDesigner.EFModel.ConcurrencyOverride
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking
  name: IsDatabaseSchemaTracking
  nameWithType: ModelClass.IsDatabaseSchemaTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsDatabaseSchemaTracking
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Namespace*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Namespace
  name: Namespace
  nameWithType: ModelClass.Namespace
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Namespace
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking
  name: IsNamespaceTracking
  nameWithType: ModelClass.IsNamespaceTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsNamespaceTracking
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName
  name: DbSetName
  nameWithType: ModelClass.DbSetName
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.DbSetName
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Name*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Name
  name: Name
  nameWithType: ModelClass.Name
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Name
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify
  name: ImplementNotify
  nameWithType: ModelClass.ImplementNotify
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ImplementNotify
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces
  name: CustomInterfaces
  nameWithType: ModelClass.CustomInterfaces
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CustomInterfaces
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType
  name: IsDependentType
  nameWithType: ModelClass.IsDependentType
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsDependentType
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory
  name: OutputDirectory
  nameWithType: ModelClass.OutputDirectory
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.OutputDirectory
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking
  name: IsOutputDirectoryTracking
  nameWithType: ModelClass.IsOutputDirectoryTracking
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IsOutputDirectoryTracking
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Description*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Description
  name: Description
  nameWithType: ModelClass.Description
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Description
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Summary*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Summary
  name: Summary
  nameWithType: ModelClass.Summary
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Summary
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass
  name: BaseClass
  nameWithType: ModelClass.BaseClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BaseClass
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes
  name: CustomAttributes
  nameWithType: ModelClass.CustomAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CustomAttributes
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Targets*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Targets
  name: Targets
  nameWithType: ModelClass.Targets
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Targets
- uid: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  commentId: T:Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
  name: ReadOnlyLinkedElementCollection<ModelClass>
  nameWithType: ReadOnlyLinkedElementCollection<ModelClass>
  fullName: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection<Sawczyn.EFDesigner.EFModel.ModelClass>
  nameWithType.vb: ReadOnlyLinkedElementCollection(Of ModelClass)
  fullName.vb: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.ModelClass)
  name.vb: ReadOnlyLinkedElementCollection(Of ModelClass)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
    name: ReadOnlyLinkedElementCollection
    nameWithType: ReadOnlyLinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
    name: ReadOnlyLinkedElementCollection
    nameWithType: ReadOnlyLinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
  commentId: T:Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
  isExternal: true
  name: ReadOnlyLinkedElementCollection<T>
  nameWithType: ReadOnlyLinkedElementCollection<T>
  fullName: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection<T>
  nameWithType.vb: ReadOnlyLinkedElementCollection(Of T)
  fullName.vb: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection(Of T)
  name.vb: ReadOnlyLinkedElementCollection(Of T)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
    name: ReadOnlyLinkedElementCollection
    nameWithType: ReadOnlyLinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection`1
    name: ReadOnlyLinkedElementCollection
    nameWithType: ReadOnlyLinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.ReadOnlyLinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Sources*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Sources
  name: Sources
  nameWithType: ModelClass.Sources
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Sources
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets
  name: UnidirectionalTargets
  nameWithType: ModelClass.UnidirectionalTargets
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalTargets
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelClass}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  name: LinkedElementCollection<ModelClass>
  nameWithType: LinkedElementCollection<ModelClass>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<Sawczyn.EFDesigner.EFModel.ModelClass>
  nameWithType.vb: LinkedElementCollection(Of ModelClass)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.ModelClass)
  name.vb: LinkedElementCollection(Of ModelClass)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelClass
    name: ModelClass
    nameWithType: ModelClass
    fullName: Sawczyn.EFDesigner.EFModel.ModelClass
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  isExternal: true
  name: LinkedElementCollection<T>
  nameWithType: LinkedElementCollection<T>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<T>
  nameWithType.vb: LinkedElementCollection(Of T)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of T)
  name.vb: LinkedElementCollection(Of T)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources
  name: UnidirectionalSources
  nameWithType: ModelClass.UnidirectionalSources
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.UnidirectionalSources
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Attributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Attributes
  name: Attributes
  nameWithType: ModelClass.Attributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Attributes
- uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelAttribute}
  commentId: T:Microsoft.VisualStudio.Modeling.LinkedElementCollection{Sawczyn.EFDesigner.EFModel.ModelAttribute}
  parent: Microsoft.VisualStudio.Modeling
  definition: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
  name: LinkedElementCollection<ModelAttribute>
  nameWithType: LinkedElementCollection<ModelAttribute>
  fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection<Sawczyn.EFDesigner.EFModel.ModelAttribute>
  nameWithType.vb: LinkedElementCollection(Of ModelAttribute)
  fullName.vb: Microsoft.VisualStudio.Modeling.LinkedElementCollection(Of Sawczyn.EFDesigner.EFModel.ModelAttribute)
  name.vb: LinkedElementCollection(Of ModelAttribute)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelAttribute
    name: ModelAttribute
    nameWithType: ModelAttribute
    fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.LinkedElementCollection`1
    name: LinkedElementCollection
    nameWithType: LinkedElementCollection
    fullName: Microsoft.VisualStudio.Modeling.LinkedElementCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelAttribute
    name: ModelAttribute
    nameWithType: ModelAttribute
    fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses
  name: Subclasses
  nameWithType: ModelClass.Subclasses
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Subclasses
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.Superclass*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.Superclass
  name: Superclass
  nameWithType: ModelClass.Superclass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.Superclass
- uid: Sawczyn.EFDesigner.EFModel.ModelClass
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelClass
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelClass
  nameWithType: ModelClass
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets
  name: BidirectionalTargets
  nameWithType: ModelClass.BidirectionalTargets
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalTargets
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources
  name: BidirectionalSources
  nameWithType: ModelClass.BidirectionalSources
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.BidirectionalSources
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot
  name: ModelRoot
  nameWithType: ModelClass.ModelRoot
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ModelRoot
- uid: Sawczyn.EFDesigner.EFModel.ModelRoot
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelRoot
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelRoot
  nameWithType: ModelRoot
  fullName: Sawczyn.EFDesigner.EFModel.ModelRoot
- uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: CanMerge(ProtoElementBase, ElementGroupPrototype)
  nameWithType: ModelElement.CanMerge(ProtoElementBase, ElementGroupPrototype)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase, Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge(Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)
    name: CanMerge
    nameWithType: ModelElement.CanMerge
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.CanMerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
    name: ProtoElementBase
    nameWithType: ProtoElementBase
    fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    name: ElementGroupPrototype
    nameWithType: ElementGroupPrototype
    fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge
  name: CanMerge
  nameWithType: ModelClass.CanMerge
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.CanMerge
- uid: Microsoft.VisualStudio.Modeling.ProtoElementBase
  commentId: T:Microsoft.VisualStudio.Modeling.ProtoElementBase
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ProtoElementBase
  nameWithType: ProtoElementBase
  fullName: Microsoft.VisualStudio.Modeling.ProtoElementBase
- uid: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
  commentId: T:Microsoft.VisualStudio.Modeling.ElementGroupPrototype
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ElementGroupPrototype
  nameWithType: ElementGroupPrototype
  fullName: Microsoft.VisualStudio.Modeling.ElementGroupPrototype
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeRelate(ModelElement, ElementGroup)
  nameWithType: ModelElement.MergeRelate(ModelElement, ElementGroup)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement, Microsoft.VisualStudio.Modeling.ElementGroup)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)
    name: MergeRelate
    nameWithType: ModelElement.MergeRelate
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeRelate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.VisualStudio.Modeling.ElementGroup
    name: ElementGroup
    nameWithType: ElementGroup
    fullName: Microsoft.VisualStudio.Modeling.ElementGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate
  name: MergeRelate
  nameWithType: ModelClass.MergeRelate
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.MergeRelate
- uid: Microsoft.VisualStudio.Modeling.ElementGroup
  commentId: T:Microsoft.VisualStudio.Modeling.ElementGroup
  parent: Microsoft.VisualStudio.Modeling
  isExternal: true
  name: ElementGroup
  nameWithType: ElementGroup
  fullName: Microsoft.VisualStudio.Modeling.ElementGroup
- uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  commentId: M:Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  parent: Microsoft.VisualStudio.Modeling.ModelElement
  isExternal: true
  name: MergeDisconnect(ModelElement)
  nameWithType: ModelElement.MergeDisconnect(ModelElement)
  fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
  spec.csharp:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect(Microsoft.VisualStudio.Modeling.ModelElement)
    name: MergeDisconnect
    nameWithType: ModelElement.MergeDisconnect
    fullName: Microsoft.VisualStudio.Modeling.ModelElement.MergeDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.Modeling.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: Microsoft.VisualStudio.Modeling.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect
  name: MergeDisconnect
  nameWithType: ModelClass.MergeDisconnect
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.MergeDisconnect
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes
  name: AllAttributes
  nameWithType: ModelClass.AllAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllAttributes
- uid: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.ModelAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModelAttribute>
  nameWithType: IEnumerable<ModelAttribute>
  fullName: System.Collections.Generic.IEnumerable<Sawczyn.EFDesigner.EFModel.ModelAttribute>
  nameWithType.vb: IEnumerable(Of ModelAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sawczyn.EFDesigner.EFModel.ModelAttribute)
  name.vb: IEnumerable(Of ModelAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.ModelAttribute
    name: ModelAttribute
    nameWithType: ModelAttribute
    fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.ModelAttribute
    name: ModelAttribute
    nameWithType: ModelAttribute
    fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes
  name: RequiredAttributes
  nameWithType: ModelClass.RequiredAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredAttributes
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes
  name: AllRequiredAttributes
  nameWithType: ModelClass.AllRequiredAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredAttributes
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes
  name: IdentityAttributes
  nameWithType: ModelClass.IdentityAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributes
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes
  name: AllIdentityAttributes
  nameWithType: ModelClass.AllIdentityAttributes
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributes
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames
  name: IdentityAttributeNames
  nameWithType: ModelClass.IdentityAttributeNames
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.IdentityAttributeNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames
  name: AllIdentityAttributeNames
  nameWithType: ModelClass.AllIdentityAttributeNames
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllIdentityAttributeNames
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.FullName*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.FullName
  name: FullName
  nameWithType: ModelClass.FullName
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.FullName
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue
  name: GetHasWarningValue
  nameWithType: ModelClass.GetHasWarningValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.GetHasWarningValue
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  commentId: M:Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  parent: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  name: GetHasWarningValue()
  nameWithType: IDisplaysWarning.GetHasWarningValue()
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
    name: GetHasWarningValue
    nameWithType: IDisplaysWarning.GetHasWarningValue
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
    name: GetHasWarningValue
    nameWithType: IDisplaysWarning.GetHasWarningValue
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.GetHasWarningValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning
  name: ResetWarning
  nameWithType: ModelClass.ResetWarning
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.ResetWarning
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  commentId: M:Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  parent: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  name: ResetWarning()
  nameWithType: IDisplaysWarning.ResetWarning()
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
    name: ResetWarning
    nameWithType: IDisplaysWarning.ResetWarning
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
    name: ResetWarning
    nameWithType: IDisplaysWarning.ResetWarning
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.ResetWarning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem
  name: RedrawItem
  nameWithType: ModelClass.RedrawItem
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.RedrawItem
- uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  commentId: M:Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  parent: Sawczyn.EFDesigner.EFModel.IDisplaysWarning
  name: RedrawItem()
  nameWithType: IDisplaysWarning.RedrawItem()
  fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
    name: RedrawItem
    nameWithType: IDisplaysWarning.RedrawItem
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
    name: RedrawItem
    nameWithType: IDisplaysWarning.RedrawItem
    fullName: Sawczyn.EFDesigner.EFModel.IDisplaysWarning.RedrawItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue
  name: GetGlyphTypeValue
  nameWithType: ModelClass.GetGlyphTypeValue
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.GetGlyphTypeValue
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency
  name: EffectiveConcurrency
  nameWithType: ModelClass.EffectiveConcurrency
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.EffectiveConcurrency
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties
  name: PreResetIsTrackingProperties
  nameWithType: ModelClass.PreResetIsTrackingProperties
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.PreResetIsTrackingProperties
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties
  name: AllNavigationProperties
  nameWithType: ModelClass.AllNavigationProperties
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllNavigationProperties
- uid: Sawczyn.EFDesigner.EFModel.Association[]
  isExternal: true
  name: Association[]
  nameWithType: Association[]
  fullName: Sawczyn.EFDesigner.EFModel.Association[]
  nameWithType.vb: Association()
  fullName.vb: Sawczyn.EFDesigner.EFModel.Association()
  name.vb: Association()
  spec.csharp:
  - uid: Sawczyn.EFDesigner.EFModel.Association
    name: Association
    nameWithType: Association
    fullName: Sawczyn.EFDesigner.EFModel.Association
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sawczyn.EFDesigner.EFModel.Association
    name: Association
    nameWithType: Association
    fullName: Sawczyn.EFDesigner.EFModel.Association
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.NavigationProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Sawczyn.EFDesigner.EFModel.NavigationProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<NavigationProperty>
  nameWithType: IEnumerable<NavigationProperty>
  fullName: System.Collections.Generic.IEnumerable<Sawczyn.EFDesigner.EFModel.NavigationProperty>
  nameWithType.vb: IEnumerable(Of NavigationProperty)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sawczyn.EFDesigner.EFModel.NavigationProperty)
  name.vb: IEnumerable(Of NavigationProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sawczyn.EFDesigner.EFModel.NavigationProperty
    name: NavigationProperty
    nameWithType: NavigationProperty
    fullName: Sawczyn.EFDesigner.EFModel.NavigationProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sawczyn.EFDesigner.EFModel.NavigationProperty
    name: NavigationProperty
    nameWithType: NavigationProperty
    fullName: Sawczyn.EFDesigner.EFModel.NavigationProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties
  name: LocalNavigationProperties
  nameWithType: ModelClass.LocalNavigationProperties
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.LocalNavigationProperties
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties
  name: RequiredNavigationProperties
  nameWithType: ModelClass.RequiredNavigationProperties
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.RequiredNavigationProperties
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties
  name: AllRequiredNavigationProperties
  nameWithType: ModelClass.AllRequiredNavigationProperties
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.AllRequiredNavigationProperties
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed
  name: FindAssociationNamed
  nameWithType: ModelClass.FindAssociationNamed
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.FindAssociationNamed
- uid: Sawczyn.EFDesigner.EFModel.NavigationProperty
  commentId: T:Sawczyn.EFDesigner.EFModel.NavigationProperty
  parent: Sawczyn.EFDesigner.EFModel
  name: NavigationProperty
  nameWithType: NavigationProperty
  fullName: Sawczyn.EFDesigner.EFModel.NavigationProperty
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed
  name: FindAttributeNamed
  nameWithType: ModelClass.FindAttributeNamed
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.FindAttributeNamed
- uid: Sawczyn.EFDesigner.EFModel.ModelAttribute
  commentId: T:Sawczyn.EFDesigner.EFModel.ModelAttribute
  parent: Sawczyn.EFDesigner.EFModel
  name: ModelAttribute
  nameWithType: ModelAttribute
  fullName: Sawczyn.EFDesigner.EFModel.ModelAttribute
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed
  name: HasAssociationNamed
  nameWithType: ModelClass.HasAssociationNamed
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.HasAssociationNamed
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed
  name: HasAttributeNamed
  nameWithType: ModelClass.HasAttributeNamed
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.HasAttributeNamed
- uid: Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed*
  commentId: Overload:Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed
  name: HasPropertyNamed
  nameWithType: ModelClass.HasPropertyNamed
  fullName: Sawczyn.EFDesigner.EFModel.ModelClass.HasPropertyNamed
